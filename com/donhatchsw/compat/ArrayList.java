// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// 102 # 1 "com/donhatchsw/compat/ArrayList.prejava"
// 103 # 1 "<built-in>"
// 104 # 1 "<command-line>"
// 105 # 1 "com/donhatchsw/compat/ArrayList.prejava"
/* vim: set filetype=java: */
package com.donhatchsw.compat;
// 108 # 1 "com/donhatchsw/compat/macros.h" 1
//
// macros.h
//
// 112 # 14 "com/donhatchsw/compat/macros.h"
// NOTE: this causes a,b to be evaluated twice on failure, so is not ideal. might be better to do a block... ?
// 114 # 30 "com/donhatchsw/compat/macros.h"
// Note: the additional "(a)==(b)||" is to make it work correctly for infinities...
// and causes the args to be evaluated twice.
// 117 # 67 "com/donhatchsw/compat/macros.h"
// XXX ... what a mess
// 119 # 4 "com/donhatchsw/compat/ArrayList.prejava" 2
/**
* ArrayList for 1.1, implemented from the doc.
* Supposed to be like 40x faster than Vector (since it's not synchronized),
* I don't know.
* Lots of methods are not implemented yet;
* basically, I implemented stuff as I needed it.
* If something gets called that isn't implemented, it throws an Error.
*/
public class ArrayList
{
    private int size;
    private Object array[];

    public ArrayList(int initialCapacity)
    {
        this.array = new Object[initialCapacity];
        this.size = 0;
    }
    public ArrayList()
    {
        this(1);
    }
    public ArrayList(ArrayList from) // this is Collection in the real ArrayList
    {
        do {if (true) throw new Error("Unimplemented at "+"com/donhatchsw/compat/ArrayList.prejava"+"("+28 +")"); } while (false);
    }
    public void trimToSize()
    {
        do {if (true) throw new Error("Unimplemented at "+"com/donhatchsw/compat/ArrayList.prejava"+"("+32 +")"); } while (false);
    }
    public void ensureCapacity(int minCapacity)
    {
        do {if (true) throw new Error("Unimplemented at "+"com/donhatchsw/compat/ArrayList.prejava"+"("+36 +")"); } while (false);
    }
    public int size()
    {
        return size;
    }
    public boolean isEmpty()
    {
        return size == 0;
    }
    public boolean contains(java.lang.Object element)
    {
        do {if (true) throw new Error("Unimplemented at "+"com/donhatchsw/compat/ArrayList.prejava"+"("+48 +")"); } while (false);
        return false;
    }
    public int indexOf(java.lang.Object element)
    {
        for (int i = 0; i < size; ++i)
            if (array[i].equals(element))
                return i;
        return -1;
    }
    public int lastIndexOf(java.lang.Object element)
    {
        for (int i = size-1; i >= 0; --i)
            if (array[i].equals(element))
                return i;
        return -1;
    }
    public java.lang.Object clone()
    {
        do {if (true) throw new Error("Unimplemented at "+"com/donhatchsw/compat/ArrayList.prejava"+"("+67 +")"); } while (false);
        return null;
    }
    public java.lang.Object[] toArray()
    {
        return toArray(new Object[size]);
    }
    public java.lang.Object[] toArray(java.lang.Object[] to)
    {
        if (to.length < size)
            return toArray();
        System.arraycopy(array, 0, to, 0, size);
        // XXX TODO: doc says if to.length > size, add a null element afterwards
        return to;
    }
    public java.lang.Object get(int index)
    {
        if (index < 0 || index >= size)
            throw new IndexOutOfBoundsException("ArrayList.get: "+index+" out of bounds 0.."+size+"-1");
        return array[index];
    }
    public java.lang.Object set(int index, java.lang.Object element)
    {
        if (index < 0 || index >= size)
            throw new IndexOutOfBoundsException("ArrayList.set: "+index+" out of bounds 0.."+size+"-1");
        Object oldElement = array[index];
        array[index] = element;
        return oldElement;
    }
    public boolean add(java.lang.Object element)
    {
        add(size, element);
        return true; // that's what the doc says
    }
    public void add(int index, java.lang.Object element)
    {
        if (index != size)
            do {if (true) throw new Error("Unimplemented at "+"com/donhatchsw/compat/ArrayList.prejava"+"("+104 +")"); } while (false);
        if (size == array.length)
        {
            int newCapacity = array.length/2*3+2; // funny arithmetic to postpone overflow a little longer
            do { if (!(newCapacity > size)) throw new Error("CHECK failed at "+"com/donhatchsw/compat/ArrayList.prejava"+"("+108 +"): " + "newCapacity > size" + ""); } while (false);
            Object newArray[] = new Object[newCapacity];
            System.arraycopy(array, 0, newArray, 0, array.length);
            array = newArray;
        }
        array[size++] = element;
    }
    public java.lang.Object remove(int index)
    {
        if (index < 0 || index >= size)
            throw new IndexOutOfBoundsException("ArrayList.remove: "+index+" out of bounds 0.."+size+"-1");
        Object ret = array[index];
        for (int i = index+1; i < size; ++i)
            array[i-1] = array[i];
        array[--size] = null;
        return ret;
    }
    // XXX javap says boolean, some doc says it returns an Object, some other doc doesn't mention it at all... fuck it, I'm returning void.
    public void remove(java.lang.Object element)
    {
        int index = indexOf(element);
        if (index != -1)
            remove(index);
    }
    public void clear()
    {
        // XXX does not resize array... is this right?
        size = 0;
    }
    public boolean addAll(ArrayList from) // this is Collection in the real ArrayList
    {
        do {if (true) throw new Error("Unimplemented at "+"com/donhatchsw/compat/ArrayList.prejava"+"("+139 +")"); } while (false);
        return false;
    }
    public boolean addAll(int index, ArrayList from) // this is Collection in the real ArrayList
    {
        do {if (true) throw new Error("Unimplemented at "+"com/donhatchsw/compat/ArrayList.prejava"+"("+144 +")"); } while (false);
        return false;
    }
    // yes, protected. (!?)
    protected void removeRange(int fromIndex, int toIndex)
    {
        if (toIndex != size)
            do {if (true) throw new Error("Unimplemented at "+"com/donhatchsw/compat/ArrayList.prejava"+"("+151 +")"); } while (false);
        for (int i = fromIndex; i < toIndex; ++i)
            array[i] = null;
        size = fromIndex;
    }

    /** test program */
    public static void main(String args[])
    {
        ArrayList a = new ArrayList();
        do { if (!((a.size())==(0))) throw new Error("CHECK failed at "+"com/donhatchsw/compat/ArrayList.prejava"+"("+161 +"): (" + "a.size()" + ")" + "==" + "(" + "0" + ") ("+(a.size())+" vs. "+(0)+")"); } while (false);
        a.add("foo");
        do { if (!((a.size())==(1))) throw new Error("CHECK failed at "+"com/donhatchsw/compat/ArrayList.prejava"+"("+163 +"): (" + "a.size()" + ")" + "==" + "(" + "1" + ") ("+(a.size())+" vs. "+(1)+")"); } while (false);
        a.add("bar");
        do { if (!((a.size())==(2))) throw new Error("CHECK failed at "+"com/donhatchsw/compat/ArrayList.prejava"+"("+165 +"): (" + "a.size()" + ")" + "==" + "(" + "2" + ") ("+(a.size())+" vs. "+(2)+")"); } while (false);
        a.add(null);
        do { if (!((a.size())==(3))) throw new Error("CHECK failed at "+"com/donhatchsw/compat/ArrayList.prejava"+"("+167 +"): (" + "a.size()" + ")" + "==" + "(" + "3" + ") ("+(a.size())+" vs. "+(3)+")"); } while (false);
        a.remove(a.size()-1);
        do { if (!((a.size())==(2))) throw new Error("CHECK failed at "+"com/donhatchsw/compat/ArrayList.prejava"+"("+169 +"): (" + "a.size()" + ")" + "==" + "(" + "2" + ") ("+(a.size())+" vs. "+(2)+")"); } while (false);
        a.add("baz");
        do { if (!((a.size())==(3))) throw new Error("CHECK failed at "+"com/donhatchsw/compat/ArrayList.prejava"+"("+171 +"): (" + "a.size()" + ")" + "==" + "(" + "3" + ") ("+(a.size())+" vs. "+(3)+")"); } while (false);
        a.clear();
        do { if (!((a.size())==(0))) throw new Error("CHECK failed at "+"com/donhatchsw/compat/ArrayList.prejava"+"("+173 +"): (" + "a.size()" + ")" + "==" + "(" + "0" + ") ("+(a.size())+" vs. "+(0)+")"); } while (false);
        System.out.println("All good!");
    }
} // class ArrayList
