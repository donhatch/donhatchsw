// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// !!! THIS FILE WAS AUTOMATICALLY GENERATED BY javacpp; DO NOT EDIT !!!
// 102 # 1 "com/donhatchsw/shims_for_deprecated/com_donhatchsw_applet_AppletViewer.prejava"
// 103 # 1 "<built-in>"
// 104 # 1 "<command-line>"
// 105 # 1 "/usr/include/stdc-predef.h" 1 3 4

// 107 # 1 "/usr/include/stdc-predef.h" 3 4
/* Copyright (C) 1991-2019 Free Software Foundation, Inc.
   This file is part of the GNU C Library.

   The GNU C Library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.

   The GNU C Library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with the GNU C Library; if not, see
   <http://www.gnu.org/licenses/>.  */




/* This header is separate from features.h so that the compiler can
   include it implicitly at the start of every compilation.  It must
   not itself include <features.h> or any other header that includes
   <features.h> because the implicit include comes before any feature
   test macros that may be defined in a source file before it first
   explicitly includes a system header.  GCC knows the name of this
   header in order to preinclude it.  */

/* glibc's intent is to support the IEC 559 math functionality, real
   and complex.  If the GCC (4.9 and later) predefined macros
   specifying compiler intent are available, use them to determine
   whether the overall intent is to support these features; otherwise,
   presume an older compiler has intent to support these features and
   define these macros by default.  */
// 142 # 52 "/usr/include/stdc-predef.h" 3 4
/* wchar_t uses Unicode 10.0.0.  Version 10.0 of the Unicode Standard is
   synchronized with ISO/IEC 10646:2017, fifth edition, plus
   the following additions from Amendment 1 to the fifth edition:
   - 56 emoji characters
   - 285 hentaigana
   - 3 additional Zanabazar Square characters */
// 149 # 1 "<command-line>" 2
// 150 # 1 "com/donhatchsw/shims_for_deprecated/com_donhatchsw_applet_AppletViewer.prejava"

// 152 # 1 "com/donhatchsw/shims_for_deprecated/com_donhatchsw_applet_AppletViewer.prejava"
/* vim: set filetype=java: */
/**
* Applet viewer.
*/

package com.donhatchsw.shims_for_deprecated;

// 160 # 1 "com/donhatchsw/shims_for_deprecated/macros.h" 1
//
// macros.h
//
// 164 # 14 "com/donhatchsw/shims_for_deprecated/macros.h"
// NOTE: this causes a,b to be evaluated twice on failure, so is not ideal. might be better to do a block... ?
// 166 # 30 "com/donhatchsw/shims_for_deprecated/macros.h"
// Note: the additional "(a)==(b)||" is to make it work correctly for infinities...
// and causes the args to be evaluated twice.
// 169 # 67 "com/donhatchsw/shims_for_deprecated/macros.h"
// XXX ... what a mess
// 171 # 9 "com/donhatchsw/shims_for_deprecated/com_donhatchsw_applet_AppletViewer.prejava" 2

public class com_donhatchsw_applet_AppletViewer
{
    public static void main(final String[] args)
    {
        System.out.println("in main");

        if (args.length < 1)
        {
            System.err.println("Usage: AppletViewer <AppletClassName> [param0=value0 parem1=value1 ...]");
            System.exit(1);
        }
        String appletClassName = args[0];

        com.donhatchsw.shims_for_deprecated.java_applet_Applet applet = null;
        {
            Class<?> appletClass = null;
            {
                try
                {
                    appletClass = Class.forName(appletClassName);
                }
                catch (ClassNotFoundException e)
                {
                    System.err.println("Couldn't find class named \""+appletClassName+"\"");
                    System.exit(1);
                }
            }
            java.lang.reflect.Constructor<?> appletConstructor = null;
            {
                try
                {
                    appletConstructor = appletClass.getConstructor();
                }
                catch (NoSuchMethodException e)
                {
                    System.err.println("Couldn't find public no-arg constructor for \""+appletClassName+"\"");
                    System.exit(1);
                }
            }
            Object appletObject = null;
            {
                try
                {
                    appletObject = appletConstructor.newInstance(new Object[]{});
                }
                catch (InstantiationException e)
                {
                    System.err.println("Couldn't instantiate \""+appletClassName+"\" from its no-arg constructor: "+e);
                    System.exit(1);
                }
                catch (IllegalAccessException e)
                {
                    System.err.println("Couldn't instantiate \""+appletClassName+"\" from its no-arg constructor: "+e);
                    System.exit(1);
                }
                catch (java.lang.reflect.InvocationTargetException e)
                {
                    System.err.println("Couldn't instantiate \""+appletClassName+"\" from its no-arg constructor: "+e.getTargetException());
                    System.exit(1);
                }
            }
            try
            {
                applet = (com.donhatchsw.shims_for_deprecated.java_applet_Applet)appletObject;
            }
            catch (ClassCastException e)
            {
                System.err.println("AppletViewer: class "+appletClass.getName()+" doesn't seem to be derived from "+com.donhatchsw.shims_for_deprecated.java_applet_Applet.class.getName()+"");
                System.exit(1);
            }
        }

        // Doesn't hurt too much to use a JFrame even if we're doing an Applet.
        // (well, except for the flicker on resize problem)
        final javax.swing.JFrame frame = new javax.swing.JFrame("Applet Viewer: "+appletClassName);

        // overriding handleEvent() no longer seems to work as of java 1.5.
        // So we have to use a listener.
        {
            com.donhatchsw.awt.MainWindowCount.increment();
            final com.donhatchsw.shims_for_deprecated.java_applet_Applet finalApplet = applet;
            frame.addWindowListener(new java.awt.event.WindowAdapter() {
                @Override public void windowClosing(java.awt.event.WindowEvent we)
                {
                    frame.dispose();
                }
                @Override public void windowClosed(java.awt.event.WindowEvent we)
                {
                    // It's not entirely clear whether destroy() should be called when the main window closes,
                    // or whether the *last* window closes.  I'm choosing the former,
                    // for pragmatic reasons, so the applet can detach that window's resources.
                    finalApplet.destroy();
                    System.out.println("ciao!");
                    com.donhatchsw.awt.MainWindowCount.decrementAndExitIfImTheLastOne();
                }
            });
        }

        // The following seems to be necessary, or getParameter() will crash, at least in 1.4.
        // And we need it anyway, to send params from the command line.
        // XXX need a clever way to detect spurious extra params! not sure there is a way when in a web page, but if using main's args, could remove them as we read them and see if anything is left over.
        applet.setStub(new com.donhatchsw.shims_for_deprecated.java_applet_AppletStub() {
             public void appletResize(int width, int height)
             {
                /* should resize frame, but an ExampleApplet never asks to be resized */
                // XXX for now, print this... not sure when this gets called, if ever
                System.out.println("in appletResize(width="+width+", height="+height+")");
             }
             public com.donhatchsw.shims_for_deprecated.java_applet_AppletContext getAppletContext() { return null;}
             public java.net.URL getCodeBase() { return null; }
             public java.net.URL getDocumentBase() { return null; }
             public String getParameter(String name)
             {
                 // case insensitive... and unfortunately there's no
                 // startsWithIgnoreCase
                 String prefix = name.toLowerCase() + "=";
                 // search backwards from end, so later ones take precedence...
                 for (int i = args.length-1; i >= 0; --i)
                     if (args[i].toLowerCase().startsWith(prefix))
                         return args[i].substring(prefix.length());
                 return null;
             }
             // XXX what's this mean?
             public boolean isActive() { return true; }
        });

        applet.init(); // before calling getContentPane(), in case init() adds stuff

        if (true && applet instanceof com.donhatchsw.shims_for_deprecated.javax_swing_JApplet)
        {
            // Bold new idea: take the applet's content pane child,
            // and transplant it into the frame's content pane.
            // OBSERVATION: this prevents the flickering on resize!!! wow!!!
            com.donhatchsw.shims_for_deprecated.javax_swing_JApplet japplet = (com.donhatchsw.shims_for_deprecated.javax_swing_JApplet)applet;
            java.awt.Component theCanvas = japplet.getContentPane().getComponent(0);
            frame.getContentPane().add(theCanvas);
            frame.setJMenuBar(japplet.getJMenuBar());
        }
        else
        {
            frame.add(applet);
        }

        applet.start();

        //int x = 20, y = 20;
        int x = 400, y = 20;

        //int w = 256, h = 256;
        int w = 512, h = 512;
        //int w = 800, h = 800;
        //int w = 1100, h = 1100;

        if (true)
        {
            String xString = applet.getParameter("x");
            if (xString != null) x = Integer.parseInt(xString);
            String yString = applet.getParameter("y");
            if (yString != null) y = Integer.parseInt(yString);
            String wString = applet.getParameter("w");
            if (wString != null) w = Integer.parseInt(wString);
            String hString = applet.getParameter("h");
            if (hString != null) h = Integer.parseInt(hString);
        }

        //frame.pack();  // apparently not necessary?  TODO: get clear on this
        frame.setLocation(x, y);
        frame.setSize(w, h);

        frame.setVisible(true); // available in java 1.5, replaces deprecated show()

        com.donhatchsw.awt.MainWindowCount.decrementAndExitIfImTheLastOne();

        System.out.println("out main");
    } // main

} // AppletViewer
