package com.donhatchsw.util;
#include "macros.h" 

/**
* Viewing parameters that always change SMOOTHLY
* so I don't have an anxiety attack.  You can knock the target value
* all over the place, and the actual value will smoothly move towards to it,
* without any instantaneous changes in velocity.  Well, except you can tell it to linearly interpolate if you want to.
*/
public class SmoothlyVaryingViewingParameter
{
    private double[] position;
    private double[] velocity;
    private double targetPosition[];

    /** Convenience constructor for a scalar parameter; equivalent to SmoothlyVaryingViewingParameter(new double[]{initialPosition}). */
    public SmoothlyVaryingViewingParameter(double initialPosition)
    {
        // XXX huh?  why can't I do the following? weird, maybe a typo
        //SmoothlyVaryingViewingParameter(new double[]{initialPosition});

        // so copy the code instead...
        this.position = VecMath.copyvec(new double[]{initialPosition});
        this.velocity = new double[this.position.length]; // zero
        this.targetPosition = VecMath.copyvec(new double[]{initialPosition});
    }
    /** Constructor. */
    public SmoothlyVaryingViewingParameter(double initialPosition[])
    {
        this.position = VecMath.copyvec(initialPosition);
        this.velocity = new double[this.position.length]; // zero
        this.targetPosition = VecMath.copyvec(initialPosition);
    }

    /** Sets the target value of this scalar variable. Equivalent to set(new double[]{targetPosition}); */
    public void set(double targetPosition)
    {
        set(new double[]{targetPosition});
    }

    /** Sets the target value of this variable. */
    public void set(double[] targetPosition)
    {
        if (targetPosition.length != this.targetPosition.length)
            throw new IllegalArgumentException("SmoothlyVaryingViewingParameter.get: new target has dimension "+targetPosition.length+", expected "+this.targetPosition.length+"");
        VecMath.copyvec(this.targetPosition, targetPosition);
    }
    /** Snaps to the specified position. Equivalent to set(targetPosition) followed by evolve(1.,0.,1.) (i.e. infinite power). */
    public void snap(double[] targetPosition)
    {
        set(targetPosition);
        evolve(1,0,1,0); // infinite power
    }
    /** Snaps to the specified position (scalar version).  Equivalent to snap(new double[]{targetPosition}). */
    public void snap(double targetPosition)
    {
        snap(new double[]{targetPosition});
    }
    /** Warps to the specified position, without changing velocity or target. If you want to do this, you are weird. */
    public void warp(double[] newPosition)
    {
        VecMath.copyvec(this.position, newPosition);
    }
    /** Warps to the specified position (scalar version).  Equivalent to warp(new double[]{targetPosition}). */
    public void warp(double targetPosition)
    {
        warp(new double[]{targetPosition});
    }

    /** Gets the value of this scalar variable now.  Throws an IllegalArgumentException if this parameter was initialized as a vector of dimension other than 1. */
    public double get()
    {
        if (position.length != 1)
            throw new IllegalArgumentException("SmoothlyVaryingViewingParameter.get: no-arg version is only for scalars, this one is a vector of dimension "+position.length);
        return position[0];
    }
    /** Gets the value of this vector variable now, into the given array. */
    public void get(double position[])
    {
        if (position.length != this.position.length)
            throw new IllegalArgumentException("SmoothlyVaryingViewingParameter.get: return buffer size is "+position.length+", expected "+this.position.length+"");
        VecMath.copyvec(position, this.position);
    }
    /** Gets the velocity of this scalar variable now, in case you're interested.  You can't set the velocity directly (except to zero, by calling snap() or the equivalent).  Throws an IllegalArgumentException if this parameter was initialized as a vector of dimension other than 1. */
    public double getVelocity()
    {
        if (position.length != 1)
            throw new IllegalArgumentException("SmoothlyVaryingViewingParameter.get: no-arg version is only for scalars, this one is a vector of dimension "+position.length);
        return velocity[0];
    }
    /** Gets the velocity of this scalar variable now, in case you're interested.  You can't set the velocity directly (except to zero, by calling snap() or the equivalent). */
    public void getVelocity(double velocity[])
    {
        if (velocity.length != this.velocity.length)
            throw new IllegalArgumentException("SmoothlyVaryingViewingParameter.getVelocity: return buffer size is "+velocity.length+", expected "+this.velocity.length+"");
        VecMath.copyvec(velocity, this.velocity);
    }

    // this is PRIVATE. XXX well maybe I shouldn't be so hard-line, if I make it public, change the above comment
    private void setVelocity(double velocity[])
    {
        if (velocity.length != this.velocity.length)
            throw new IllegalArgumentException("SmoothlyVaryingViewingParameter.setVelocity: new velocity has dimension "+velocity.length+", expected "+this.velocity.length+"");
        VecMath.copyvec(this.velocity, velocity);
    }
    private void setVelocity(double velocity)
    {
        if (this.velocity.length != 1)
            throw new IllegalArgumentException("SmoothlyVaryingViewingParameter.setVelocity: no-arg version is only for scalars, this one is a vector of dimension "+position.length);
        setVelocity(new double[]{velocity});
    }

    /** Gets the target value of this scalar variable now, if it's a scalar, otherwise throws an IllegalArgumentException. */
    // XXX needs a vector version
    public double getTarget()
    {
        if (position.length != 1)
            throw new IllegalArgumentException("SmoothlyVaryingViewingParameter.getTarget: no-arg version is only for scalars, this one is a vector of dimension "+position.length);
        return targetPosition[0];
    }


    /**
    * 0: nothing
    * 1: some haphazard stuff
    * 2: more detailed haphazard stuff
    */
    public static int verboseLevel = 0;

    /**
    * Evolves dt seconds towards the target,
    * always pushing with constant-magnitude force
    * (possibly with a mid-trip thrust reversal).
    * <p>
    * You specify the force magnitude by how long it takes
    * to do some reference trip smoothly.
    * For example, if you know you can go 1 mile in 60 seconds,
    * starting and ending smoothly,
    * you would say referenceTripDistance=1 and referenceTripTime=60.
    * <p>
    * The acceleration will be equal to
    * 4*referenceTripDistance/referenceTripTime<sup>2</sup>.
    * This shows that if you can go 1 mile in 1 second,
    * then you will be able to go 100 miles in 10 seconds
    * (using the same constant acceleration/deceleration magnitude).
    * <p>
    * @param bounce  Set this to a number from 0 to 1.  Setting it to a positive number causes the spring to be underdamped and so it will overshoot and oscillate as it converges on the target.
    */
    public void evolve(double referenceTripDistance,
                       double referenceTripTime,
                       double dt,
                       double bounce)
    {
        //System.out.println("    in evolve");
        if (isMoving())
        {
            //assert(false); // XXX coverage-- remove when hit
            if (referenceTripTime == 0.)
            {
                //assert(false); // XXX coverage-- remove when hit
                if (referenceTripDistance == 0.)
                    throw new IllegalArgumentException("SmoothlyVaryingViewingParameter.evolve: referenceTripDistance/referenceTripTime is 0/0 !?");
                // Infinite power-- bonk it there.
                VecMath.copyvec(this.position, targetPosition);
                VecMath.zerovec(this.velocity);
                //System.out.println("    out evolve (referenceTripTime is 0)");
                return;
            }
            //assert(false); // XXX coverage-- remove when hit

            boolean separable = true; // XXX do something sensible here depending on dimension
            if (separable)
            {
                //assert(false); // XXX coverage-- remove when hit
                double p_and_v[] = new double[2];
                for (int i = 0; i < position.length; ++i)
                {
                    //assert(false); // XXX coverage-- remove when hit
                    p_and_v[0] = position[i] - targetPosition[i];
                    p_and_v[1] = velocity[i];
                    update_p_and_v(p_and_v, referenceTripDistance, referenceTripTime, dt, bounce);
                    position[i] = p_and_v[0] + targetPosition[i];
                    velocity[i] = p_and_v[1];
                }
            }
            else // !separable
            {
                //assert(false); // XXX coverage-- remove when hit
                double a = 4 * referenceTripDistance
                             / SQR(referenceTripTime);
                bounce = MIN(bounce, 1-1e-6); // XXX should try to do something real in that case intead-- always pull directly towards the target
                double vKnee[] = new double[velocity.length];
                if (bounce < 1.)
                {
                    //assert(false); // XXX coverage-- remove when hit
                    // A is the overoptimistic acceleration
                    // such that, if we plan using it,
                    // we will overshoot by exactly bounce.
                    // Worked this out on paper...
                    double A = a * ((1.+bounce)/(1.-bounce));
                    computeVelocityKnee(vKnee,
                                        VecMath.vmv(position, targetPosition),
                                        velocity, A);
                }
                else
                {
                    assert(false); // XXX coverage-- remove when hit
                    // A = infinity, vKnee should have infinite magnitude in the direction of the desired position change, I think
                    assert(false);
                }

                double beforeKneeVelocityDirection[] = VecMath.vmv(vKnee, velocity); 
                double timeBeforeKnee = VecMath.normalize(beforeKneeVelocityDirection,
                                                          beforeKneeVelocityDirection) / a;
                if (dt <= timeBeforeKnee)
                {
                    //assert(false); // XXX coverage-- remove when hit
                    VecMath.vpsxvpsxv(position,
                                      position,
                                      dt, velocity,
                                      .5*a*dt*dt, beforeKneeVelocityDirection);
                    VecMath.vpsxv(velocity,
                                  velocity,
                                  dt*a, beforeKneeVelocityDirection);
                }
                else // dt > timeBeforeKnee
                {
                    //assert(false); // XXX coverage-- remove when hit
                    double afterKneeVelocityDirection[] = VecMath.sxv(-1., vKnee);
                    double timeAfterKnee = VecMath.normalize(afterKneeVelocityDirection,
                                                             afterKneeVelocityDirection) / a;
                    if (dt >= timeBeforeKnee + timeAfterKnee)
                    {
                        //assert(false); // XXX coverage-- remove when hit
                        // done   XXX wait, no!  not necessarily done if there was bounce, because in that case when we integrate, we won't get p=0
                        VecMath.copyvec(position, targetPosition);
                        VecMath.zerovec(velocity);
                        //System.out.println("    out evolve (dt >= timeBeforeKnee + timeAfterKnee)");
                        return;
                    }

                    // Accumulate up to the knee...
                    VecMath.vpsxvpsxv(position,
                                      position,
                                      timeBeforeKnee, velocity,
                                      .5*a*timeBeforeKnee*timeBeforeKnee, beforeKneeVelocityDirection);
                    VecMath.vpsxv(velocity,
                                  velocity,
                                  timeBeforeKnee*a, beforeKneeVelocityDirection);
                    // Then the part after the knee...
                    timeAfterKnee = dt - timeBeforeKnee;
                    VecMath.vpsxvpsxv(position,
                                      position,
                                      timeAfterKnee, velocity,
                                      .5*a*timeAfterKnee*timeAfterKnee, afterKneeVelocityDirection);
                    VecMath.vpsxv(velocity,
                                  velocity,
                                  timeAfterKnee*a, afterKneeVelocityDirection);
                }
                //assert(false); // XXX coverage-- remove when hit
            } // if !separable
        } // if isMoving()
        else
        {
            //System.out.println("        (not moving)");
        }
        //System.out.println("    out evolve");
    } // evolve

    // XXX argh, javadoc thinks the first sentence ends after the i.e.
    /** Returns true if the parameter has not yet reached the target (i.e. if an evolve() would actually change anything), false otherwise. */
    public boolean isMoving()
    {
        return !VecMath.equalsExactly(position, targetPosition)
             || VecMath.normsqrd(velocity) != 0.;
    }


    // utility function to find the velocity switch point
    // in the two-piece quadratic solution
    // starting at position p, velocity v and ending at 0,0
    private static void computeVelocityKnee(double velocityKnee[],
                                            double p[], double v[], double a)
    {
        //System.out.println("        in computeVelocityKnee(p="+Arrays.toStringCompact(p)+", v="+Arrays.toStringCompact(v)+", a="+a+")");
        //assert(false); // XXX coverage-- remove when hit
        //
        // Want knee k such that
        // the integral from v to k to 0 takes p to 0,
        // i.e. find k such that:
        //      ||k-v|| (k+v)/2 + ||0-k|| (0+k)/2 == -p*a
        //

        //
        // First find a work plane
        // containing p and v.
        //
        double vLength = VecMath.norm(v);
        if (vLength == 0.)
        {
            //assert(false); // XXX coverage-- remove when hit
            // Starting and ending velocities are zero.
            //      ||k-v|| (k+v)/2 + ||0-k|| (0+k)/2 == -p*a
            //      ||k|| k/2 + ||k|| k/2 == -p*a
            //      ||k|| k == -p*a
            //      direction = direction of -p = direction of -p*a
            //      length = sqrt(||p||*a) = sqrt(||p*a||)
            //      So  k = (-p*a / ||p*a||) sqrt(||p*a||)
            //            =  -p*a / sqrt(||p*a||)
            //      
            VecMath.vxs(velocityKnee,
                        p, -a);
            double lengthsqrd = VecMath.normsqrd(velocityKnee); // ||p/a||^2
            if (lengthsqrd != 0.)
            {
                //assert(false); // XXX coverage-- remove when hit
                double length = Math.sqrt(lengthsqrd);
                VecMath.vxs(velocityKnee,
                            velocityKnee, 1./Math.sqrt(length));
            }
            //System.out.println("        out computeVelocityKnee (vLength was 0), returning velocityKnee = "+Arrays.toStringCompact(velocityKnee));
            return;
        }
        //assert(false); // XXX coverage-- remove when hit

        double vDir[] = VecMath.vxs(v,
                                    1./vLength);


        // Orthonormalize p against vDir to get uDir.
        // Bleah, why is this so hard?
        // Had an example:
        //      v = {0.04761904761904767,0.0}
        //      vLength = 0.04761904761904767
        //      vDir = vDir = {0.9999999999999999,0.0}
        //      p = {-0.0011337868480725821,0.0}
        //      p - (p dot vDir)*vDir = {-4.3368086899420177E-19,0.0}
        // so that's all messed up.

        double uDir[] = VecMath.copyvec(p);
        for (int iIter = 0; ; iIter++)
        {
            VecMath.vpsxv(uDir, uDir, -VecMath.dot(uDir,vDir), vDir);
            double uLength = VecMath.norm(uDir);
            if (uLength == 0.
             || iIter == 5) // without this, it actually gets an endless loop after a while
            {
                // uDir = arbitrary vector not aligned with vDir
                VecMath.zerovec(v.length, uDir);
                uDir[VecMath.minabsi(vDir)] = 1.;
            }
            else
            {
                VecMath.vxs(uDir, uDir, 1./uLength);
                // uDir should now be orthogonal to vDir,
                // but sometimes it's not, in bizarre circumstances
                // such as that described above.
                // If not, keep trying.
                // Don't immediately go to choosing an arbitrary vector
                // orthogonal to vDir, since we might get enough
                // leverage in a couple of iterations.
                if (Math.abs(VecMath.dot(uDir,vDir)) < 1e-15)
                    break;
            }
        }
        assert(Math.abs(VecMath.dot(uDir,vDir)) < 1e-15);

        //
        // In the work plane, p and v have these coordinates...
        //
        double vx = vLength;
        double vy = 0;
        double px = VecMath.dot(p, vDir);
        double py = VecMath.dot(p, uDir);

        //
        // a and vLength are a nuisance.
        // Transform stuff so that a=1 and vLength=1 (i.e. v = 1,0).
        // We'll multiply the answer by vLength at the end.
        //
        // The effect of a, with a given knee, is to scale the integral by 1/a.
        // so to compensate for that, we scale the target integral -p by a,
        // and solve pretending a=1.
        //
        // The effect of scaling by 1/vLength is to multiply the integral
        // by 1/(vLength^2), so that's what we multiply the target integral -p by.
        //
        px *= a / (vLength*vLength);
        py *= a / (vLength*vLength);


        double xDesiredIntegral = -px;
        double yDesiredIntegral = -py;

        //
        // In the work plane, for given v and slack,
        // the set of all path-length integrals of paths with that v and slack
        // form an ellipse.  Not sure why, but it's true.
        // Find the slack such that the ellipse passes through
        // the desired integral -p.
        //
        // The little (x) and big (y) ellipse radii of the ellipse
        // for a given slack are (worked out on paper):
        //      r = slack * (2+slack) / 4
        //      R = sqrt(r) / 2 * (1+slack)
        //      center = <(1+slack)/2, 0>
        // It works out a little easier if we think in terms of the length L = 1+slack instead:
        //      r = (L-1)*(L+1)/4
        //      R = sqrt(r) / 2 * L
        //      center = <L/2, 0>
        // So a point x,y is inside the ellipse iff:
        //      ((x-L/2)/r)^2 + (y/R)^2 <= 1
        //      (x-L/2)^2 / r^2  + y^2 / R^2 <= 1
        //      (x-L/2)^2 / r^2  + y^2 / (r/4 * L^2) <= 1
        //      (x-L/2)^2 / r  + y^2 / (1/4 * L^2) <= r
        //      (x-L/2)^2 / r  + 4 * y^2 / L^2 <= r
        //      (x-L/2)^2 * L^2 + 4 * y^2 * r <= L^2 * r^2
        //      (x-L/2)^2 * L^2 + 4 * y^2 * r - L^2 * r^2 <= 0
        // Simplifying:
        //      L^6 - 6*L^4 + 16*x*L^3 + (1-16*x^2-16*y^2)*L^2 + 16*y^2 >= 0
        // that polynomial is increasing with L, in the vicinity of the zero
        // (though it's not increasing everywhere, of course).
        // 
        double slack;
        if (true)
        {
            double c0 = 16*SQR(yDesiredIntegral);
            double c2 = 1 - 16*SQR(xDesiredIntegral) - c0;
            double c3 = 16*xDesiredIntegral;
            double c4 = -6;
            // Then the polynomial, in L, is: (((L2 + c4)*L + c3)*L + c2)*L2 + c0  where L2 = L*L
            // TODO: is this really better than newton?  doing it this way for stability since there are regions in which the function isn't invertible or isn't even increasing, although it might make sense to switch to newton when we know we've restricted down to a region in which it converges fast
            double LlowerBound = 1.;
            double LupperBound = Double.POSITIVE_INFINITY;
            boolean triedOne = false;
            int iIteration = 0;
            for (;; iIteration++)
            {
                // Try 1, 2, 4, ... keep doubling estimate until it's an upper bound,
                // then do binary search between 1 and that upper bound
                double L; // current estimate
                if (LupperBound == Double.POSITIVE_INFINITY)
                {
                    if (!triedOne)
                    {
                        L = 1.;
                        triedOne = true;
                    }
                    L = 2*LlowerBound;
                }
                else
                {
                    L = (LlowerBound+LupperBound)*.5;
                    if (L <= LlowerBound
                     || L >= LupperBound)
                    {
                        //System.out.println("        ellipse is pretty damn good on iteration "+iIteration);
                        //assert(false); // XXX coverage-- remove when hit
                        slack = L-1.;
                        break;
                    }
                }
                double L2 = L*L;
                double f = (((L2 + c4)*L + c3)*L + c2)*L2 + c0;

                if (f < 0.)
                {
                    //System.out.println("        ellipse is too small");
                    //assert(false); // XXX coverage-- remove when hit
                    // ellipse is too small, raise lower bound up to estimate
                    LlowerBound = L;
                }
                else if (f > 0.)
                {
                    //System.out.println("        ellipse is too big");
                    //assert(false); // XXX coverage-- remove when hit
                    // shrink upper bound to estimate
                    LupperBound = L;
                }
                else
                {
                    //System.out.println("        ellipse is just right on iteration "+iIteration);
                    //assert(false); // XXX coverage-- remove when hit
                    slack = L-1.;
                    break;
                }
            }
        }
        else // old way
        {
            // TODO: is this really better than newton?  doing it this way for stability since there are regions in which the function isn't invertible, but not sure I'm actually accomplishing anything
            double slackLowerBound = 0.;
            double slackUpperBound = Double.POSITIVE_INFINITY;
            boolean triedZero = false;
            boolean triedOne = false;
            int iIteration = 0;
            for (;; iIteration++)
            {
                //assert(false); // XXX coverage-- remove when hit
                // Try 0, 1, 2, 4, ... keep doubling estimate
                // until it's an upper bound,
                // then do binary search between 0 and that upper bound
                double slackEstimate;
                if (slackUpperBound == Double.POSITIVE_INFINITY)
                {
                    if (!triedZero)
                    {
                        slackEstimate = 0.;
                        triedZero = true;
                    }
                    else if (!triedOne)
                    {
                        slackEstimate = 1.;
                        triedOne = true;
                    }
                    else
                        slackEstimate = 2*slackLowerBound;
                }
                else
                {
                    slackEstimate = (slackLowerBound+slackUpperBound)*.5;
                    if (slackEstimate <= slackLowerBound
                     || slackEstimate >= slackUpperBound)
                    {
                        //assert(false); // XXX coverage-- remove when hit
                        //System.out.println("        ellipse is pretty damn good on iteration "+iIteration);
                        slack = slackEstimate;
                        break;
                    }
                }

                // little (x) and big (y) ellipse radii of the ellipse
                // on the integral graph...
                // these were worked out on paper.
                // XXX so far these assume vx = 1
                double r = slackEstimate*(2+slackEstimate)*.25;
                double R = Math.sqrt(r) * .5 * (1+slackEstimate);
                double xCenter = .5*(1+slackEstimate);
                // x and y are relative to the ellipse center on the integral graph
                double x = xDesiredIntegral - xCenter;
                double y = yDesiredIntegral;
                // if x,y is outside the ellipse...
                // i.e. if (x/r)^2 + (y/R)^2 > 1
                // i.e. if (x*R)^2 + (y*r)^2 > (r*R)^2
                double signedDistanceFromEllipse = r==0. ? SQR(x)+SQR(y)
                                                 : SQR(x*R) + SQR(y*r) - SQR(r*R);
                if (signedDistanceFromEllipse > 0.)
                {
                    //assert(false); // XXX coverage-- remove when hit
                    // ellipse is too small, raise lower bound up to estimate
                    slackLowerBound = slackEstimate;
                    //System.out.println("        ellipse is too small");
                }
                else if (signedDistanceFromEllipse < 0.)
                {
                    //assert(false); // XXX coverage-- remove when hit
                    // shrink upper bound to estimate
                    slackUpperBound = slackEstimate;
                    //System.out.println("        ellipse is too big");
                }
                else
                {
                    //assert(false); // XXX coverage-- remove when hit
                    //System.out.println("        ellipse is just right on iteration "+iIteration);
                    slack = slackEstimate;
                    break;
                }
            }
        }
        //assert(false); // XXX coverage-- remove when hit

        //
        // Okay now we have slack (assuming vLength=1, a=1).
        // Here is the knee, worked out on paper...
        //
        double xKnee, yKnee;
        if (slack == 0.) // XXX seems dangerous
        {
            xKnee = .5;
            yKnee = 0.;
        }
        else
        {
            if (false)
            {
                yKnee = 2*yDesiredIntegral/(1+slack);
                xKnee = (-1
                       + 2*(1 + slack)*xDesiredIntegral
                       - Math.sqrt(SQR(1 + slack - 2*xDesiredIntegral)
                                 + slack*(2+slack)*(yKnee*yKnee))
                        )
                      / (slack*(2+slack));

                //
                // Kind of ad-hoc rescue for case when slack is very close to 0
                // and so the numerator and denominator of xKnee are close to zero as well..
                // in this case all that matters is that the knee be close to the segment.
                //
                if (slack < 1e-6)
                    xKnee = CLAMP(xKnee, -slack*.5, slack*.5);
            }
            else
            {
                // That worked, but let's see if we can get something more robust,
                // using the fact that the knees with given slack
                // form an ellipse, with the following radii:
                //     xRadius = (1+s)/2
                //     yRadius = sqrt(((1+s)/2)^2 - (1/2)^2)
                //            ...
                //             = sqrt(s*(s+2)) / 2
                yKnee = 2*yDesiredIntegral/(1+slack);

                double xRadius = (1+slack) * .5;
                double yRadius = Math.sqrt(slack*(slack+2)) * .5;
                assert(yRadius != 0.); // since slack != 0.
                double temp = (yKnee / yRadius);
                temp = 1 - SQR(temp);
                temp = MAX(0, temp);
                temp = xRadius * Math.sqrt(temp);
                if (xDesiredIntegral < (1+slack) * .5)
                    xKnee = .5 - temp;
                else
                    xKnee = .5 + temp;
            }
        }

        //
        // Expand out to the real vLength...
        //
        xKnee *= vLength;
        yKnee *= vLength;

        VecMath.sxvpsxv(velocityKnee,
                        xKnee, vDir,
                        yKnee, uDir);

        //System.out.println("        out computeVelocityKnee, returning velocityKnee = "+Arrays.toStringCompact(velocityKnee));

        //
        // Check that it does what it's supposed to,
        // using the original v and a.
        // namely:
        //      ||k-v||/a (k+v)/2 + ||0-k||/a (0+k)/2 == -p
        //
        {
            double positionChange[] = VecMath.sxvpsxv(
                VecMath.dist(v,velocityKnee)/a, VecMath.lerp(v,velocityKnee,.5),
                VecMath.norm(velocityKnee)/2/a, velocityKnee);
            double error = VecMath.norm(VecMath.vpv(positionChange,p));
            //PRINT(error);
            //double tol = 4.214684646977385E-8; // that's the largest actually encountered in the confidence test
            double tol = 1e-6;
            assert(error <= tol); // XXX should be relative
        }

    } // computeVelocityKnee



#ifdef NOTYET_MAYBE_NEVER
    // utility function, evolves p and v
    // towards zero position and velocity.
    private static void update_p_and_v(double p[],
                                       double v[],
                                       double referenceTripDistance,
                                       double referenceTripTime,
                                       double dt,
                                       double bounce)
    {
        boolean debug = false;
        if (debug) System.out.println("in update_p_and_v");
        assert(bounce >= 0); // XXX make this a bad param exception or something

        if (referenceTripDistance == 0.)
        {
            // no acceleration, don't move
            return;
        }
        if (referenceTripTime == 0.)
        {
            // infinite acceleration-- snap to target
            VecMath.zerovec(p);
            VecMath.zerovec(v);
            return;
        }

        // actual acceleration magnitude...
        double a = 4 * referenceTripDistance
                     / SQR(referenceTripTime);

        // Hack to get bounce working, since I don't think I'm going to get
        // any analytic formula.
        // The behavior of this hack will vary with dt :-(
        // The hack is to do the calculations as if we have more power
        // than we actually have... that will result in us overshooting
        // every time.
        // What's the right formula?
        // Well let's say our actual acceleration magnitude is a=1
        // (i.e. reference trip .25m/1s or 1m/2s)
        // If we do calculations as if the magnitude is A=2,
        // how much will it overshoot?
        // Well, if we start at velocity 0, at distance 1 from target,
        // at time 1 we will be at distance .5 with speed 1.
        // If we knew our acceleration was 1 we would start slowing down,
        // but we think we are powerful so we keep accelerating instead.
        // We will keep accelerating until our speed s and distance from target d
        // satisfy s=A t, d = 1/2 A t^2 for some t, i.e.
        // (measuring t from end)
        //      d = 1/2 A (s/A)^2  since t == s/A
        //        = 1/2 s^2 / A
        // The acceleration curve we are on is decreasing d and increasing s:
        // (measuring t from start)
        //      d = 1 - 1/2 t^2
        //      s = t
        //   => d = 1 - 1/2 s^2
        //
        // 1st eq:
        //      s^2 = 2 d A
        // 2nd eq:
        //      s^2 == 2 (1-d)
        // Combining:
        //      2 d A == 2 (1-d)
        //        d A == 1-d
        //        d (A+1) == 1
        //        d == 1/(A+1)
        // 1st eq:
        //        1/2 s^2 / A == 1/(A+1)
        //        s^2 == 2 A/(A+1)
        // 2nd eq:
        //        1 - 1/2 s^2 == 1/(A+1)
        //        s^2 == 2(1 - 1/(A+1))
        //            == 2 A/(A+1)
        //
        // So:
        //       d = 1/(A+1)
        //       s = sqrt(2 A/(A+1))
        // (A=1 -> d=1/2, s=1 check.)
        // (A=infinity -> d=0, s=sqrt(2) check.)
        // That's when we start decelerating.
        // We'll slow down to zero speed at s seconds later,
        // after going 1/2 s^2 more distance.
        // so the amount we overshoot, i.e. the bounce, is:
        //  bounce = 1/2 s^2 - d
        //         = 1/2 2 A/(A+1) - 1/(A+1)
        //         = A/(A+1) - 1/(A+1)
        //         = (A-1)/(A+1)
        // bounce = (A-1)/(A+1)
        // Solving for A in terms of bounce, we get:
        //     A = (1+bounce)/(1-bounce)
        // Yay!
        // So:
        //     bounce=0 -> A=1
        //     bounce=1/3 -> A=2
        //     bounce=1/2 -> A=3
        //     bounce=3/5 -> A=4
        //     bounce=2/3 -> A=5
        //     bounce=5/7 -> A=6
        //     bounce=3/4 -> A=7
        //     bounce=7/9 -> A=8
        //     bounce=4/5 -> A=9
        //     bounce=9/11 -> A=10
        // etc.
        // 
        bounce = MAX(bounce, 1-1e-6); // XXX do something right in the bounce=1 case instead
        double A = a * (1.+bounce)/(1.-bounce);

        double knee[] = computeVelocityKnee(A,
                                            -v,
                                            -p);

    } // update_p_and_v vector version
#endif // NOTYET_MAYBE_NEVER
                                        
    // utility function, evolves a single coordinate
    // towards zero position and velocity
    private static void update_p_and_v(double p_and_v[/*2*/],
                                       double referenceTripDistance,
                                       double referenceTripTime,
                                       double dt,
                                       double bounce)
    {
        boolean debug = false;
        if (debug) System.out.println("in update_p_and_v");
        assert(bounce >= 0); // XXX make this a bad param exception or something

        // acceleration magnitude...
        double aMag = 4 * referenceTripDistance
                        / SQR(referenceTripTime);
        double p = p_and_v[0];
        double v = p_and_v[1];
        double vSign = (v<0 ? -1. : 1.);
        double vMag = vSign*v;
        if (debug) System.out.println("    p = "+p);
        if (debug) System.out.println("    v = "+v);

        //
        // Call the current time 0.
        // What is the nearest time before and after now
        // that v could be 0,
        // given acceleration magnitude aMag?
        //
        double still_t_after = vMag/aMag;
        double still_p_after = p + vSign*.5*v*v/aMag;
        double still_a_after = -vSign*aMag;

        double still_t_before = -vMag/aMag;
        double still_p_before = p - vSign*.5*v*v/aMag;
        double still_a_before = vSign*aMag;

        double t0, p0, a0;
        if (p*v <= 0 &&
            still_p_after/still_p_before > -bounce) // XXX FIX THIS-- I think there is danger of a zero-divide here?
        {
            // Need to push forward harder... still_before is the relevant one.
            if (debug) System.out.println("    Need to push forward harder... still_before is the relevant one.");
            t0 = still_t_before;
            p0 = still_p_before;
            a0 = still_a_before;

            if (v == 0. && p > 0.)
            {
                // XXX HACK!
                // It was wrong in this case.
                // The following seems to make it work, but
                // need to organize things better so that it's
                // possible to understand what is going on here.
                t0 = still_t_after;
                p0 = still_p_after;
                a0 = still_a_after;
            }
        }
        else
        {
            // Need to be decelerating so we don't over-overshoot.
            if (debug) System.out.println("    Need to be decelerating so we don't over-overshoot.");
            t0 = still_t_after;
            p0 = still_p_after;
            a0 = still_a_after;
        }
        if (debug) System.out.println("    a0 = "+a0);

        // Figure out the position,time,acceleration of the following
        // still point (after the next bounce).
        // From one still point to the next looks just like
        // a scaled reference trip.
        double p1 = -bounce*p0;
        double a1 = -a0;
        double t1 = t0 + Math.sqrt((Math.abs(p1-p0)/referenceTripDistance))
                       * referenceTripTime;

        // Each piece takes sqrt(bounce) as much time as the previous one.
        // So the time at which we will settle is:
        //     t0 + (t1-t0)*(1 + bounce^(1/2) + bounce + bounce^(3/2) + ...)
        //   = t0 + (t1-t0)/(1-sqrt(bounce))
        // Check whether we are being asked to evolve to or beyond
        // the settling time, i.e. whether
        //     dt >= t0 + (t1-t0)/(1-sqrt(bounce))
        // Don't do that division explicitly (in case bounce is very close
        // to 1); instead, check whether:
        //     (dt-t0)*(1-sqrt(bounce)) >= t1-t0
        if ((dt-t0)*(1-Math.sqrt(bounce)) >= t1-t0)
        {
            // Settled
            if (debug) System.out.println("    Settled");
            p = 0;
            v = 0;
        }
        else
        {
            // Not settled.
            if (debug) System.out.println("    Not settled.");
            // Which time segment t_(i-1) .. t_i
            // is dt in?
            int i = 0;
            double p_iminus1 = Double.NaN;
            double t_iminus1 = Double.NaN;
            double a_iminus1 = Double.NaN;
            double t_i = t0;
            double p_i = p0;
            double a_i = a0;
            while (dt > t_i)
            {
                p_iminus1 = p_i;
                t_iminus1 = t_i;
                a_iminus1 = a_i;
                i++;
                p_i = -bounce * p_iminus1;
                a_i = -a_iminus1;
                // XXX note first one is redundant with calculation of t1 above, should try to consolidate
                t_i += Math.sqrt((Math.abs(p_i-p_iminus1)/referenceTripDistance))
                     * referenceTripTime;
                if (i > 1000*1000)
                {
                    // Ridiculous number of iterations.
                    // We are probably very close to the settling point,
                    // and stuck due to floating point roundoff error.
                    assert(false); // coverage
                    p_and_v[0] = 0;
                    p_and_v[1] = 0;
                    return;
                }
            }
            if (debug) System.out.println("    i = "+i);
            double frac = i==0 ? 1. : (dt-t_iminus1)/(t_i-t_iminus1);
            if (debug) System.out.println("    frac = "+frac);
            //frac = 0; // XXX get rid
            if (frac < .5)
            {
                // Follow the parabola forwards
                // from the previous still point t_iminus1,p_iminus1
                v = (dt-t_iminus1) * a_iminus1;
                p = p_iminus1 + .5*a_iminus1*SQR(dt-t_iminus1);
                if (debug) System.out.println("    a_iminus1 = "+a_iminus1);
                if (debug) System.out.println("    p = "+p);
                if (debug) System.out.println("    v = "+v);
            }
            else
            {
                // Follow the parabola backwards
                // from the next still point t_i,p_i
                v = (t_i-dt) * -a_i;
                p = p_i - .5* -a_i *SQR(t_i-dt);
            }
        }
        p_and_v[0] = p;
        p_and_v[1] = v;
        if (debug) System.out.println("out update_p_and_v");
    } // private update_p_and_v single coordinate version



    private static double lerp(double a, double b, double t)
    {
        return a*(1-t) + b*t;
    }




    private static void confidenceTests()
    {
        if (true)
        {
            //
            // Test the double-quadratic behavior.
            //
            System.out.println("    Testing double-quadratic behavior");
            SmoothlyVaryingViewingParameter x2 = new SmoothlyVaryingViewingParameter(new double[2]);
            SmoothlyVaryingViewingParameter x3 = new SmoothlyVaryingViewingParameter(new double[2]);
            double bounce = 0.; // XXX should write some tests with this
            double eps = 1e-5;
            double referenceTripDistances[] = {1, .5, 2.};
            double referenceTripTimes[] = {2., 0., .5, 1.};
            double vStartXs[] = {1., -1., -.1, 0., .1,};
            double vStartYs[] = {0., -.5, 1.};
            double pStarts[][] = {{0,0},{1,2}};
            double vKneeYs[] = {0., -1., -.1, .1, 1.};
            double vKneeXs[] = {0., -.5, -1., .5, 1., 1.5, 2.};
            double nIncrss[] = {10, .9, 1, 1.1, 1.9, 2, 2.1, 9.9, 10.1};
            FORI (iReferenceTripDistance, referenceTripDistances.length)
            FORI (iReferenceTripTime, referenceTripTimes.length)
            FORI (iVStartX, vStartXs.length)
            FORI (iVStartY, vStartYs.length)
            FORI (iPStart, pStarts.length)
            FORI (iVKneeY, vKneeYs.length)
            FORI (iVKneeX, vKneeXs.length)
            FORI (iIncr, nIncrss.length)
            {
                System.out.println("    ================================================");
                double referenceTripDistance = referenceTripDistances[iReferenceTripDistance];
                double referenceTripTime = referenceTripTimes[iReferenceTripTime];
                double v[] = {vStartXs[iVStartX], vStartYs[iVStartY]};
                double p[] = pStarts[iPStart];
                double vKnee[] = {vKneeXs[iVKneeX], vKneeYs[iVKneeY]};
                double nIncrs = nIncrss[iIncr];
                double dt = referenceTripTime / nIncrs;

                PRINT(referenceTripDistance);
                PRINT(referenceTripTime);
                PRINTARRAY(v);
                PRINTARRAY(p);
                PRINTARRAY(vKnee);
                PRINT(nIncrs);
                PRINT(dt);

                //
                // Figure out how much p changes
                // as velocity goes from v to vKnee to 0.
                // We'll set the starting p to minus that.
                //
                double a = 4*referenceTripDistance / SQR(referenceTripTime);
                PRINT(a);
                double expectedBeforeKneeTime = VecMath.dist(v,vKnee) / a; // from v to vKnee
                double expectedAfterKneeTime = VecMath.norm(vKnee) / a; // from vKnee to 0
                double expectedTotalTime = expectedBeforeKneeTime + expectedAfterKneeTime;
                PRINT(expectedBeforeKneeTime);
                PRINT(expectedAfterKneeTime);
                PRINT(expectedTotalTime);

                // totalPositionChange =
                //       beforeKneeTime * (v+vKnee)/2  + afterKneeTime * (vKnee+0)/2
                //     = 1/2 *  (beforeKneeTime * v  + totalTime * vKnee)

                double expectedTotalPositionChange[] = VecMath.sxvpsxv(
                        expectedBeforeKneeTime*.5, v,
                        expectedTotalTime*.5, vKnee);
                PRINTARRAY(expectedTotalPositionChange);
                double pTarget[] = VecMath.vpv(p, expectedTotalPositionChange);
                PRINTARRAY(pTarget);

                //
                // Do the trip in 2d
                //
                if (true)
                {
                    x2.snap(p);
                    double scratch[] = new double[2];
                    x2.get(scratch);
                    assert(VecMath.equalsExactly(scratch, p));
                    x2.getVelocity(scratch);
                    assert(VecMath.equalsExactly(scratch, VecMath.zerovec(p.length)));
                    assert(!x2.isMoving());

                    x2.set(pTarget);
                    x2.get(scratch);
                    assert(VecMath.equalsExactly(scratch, p));
                    x2.getVelocity(scratch);
                    assert(VecMath.equalsExactly(scratch, VecMath.zerovec(p.length)));
                    assert(x2.isMoving() == (VecMath.distsqrd(p,pTarget) != 0.));

                    x2.setVelocity(v);
                    x2.get(scratch);
                    assert(VecMath.equalsExactly(scratch, p));
                    x2.getVelocity(scratch);
                    assert(VecMath.equalsExactly(scratch, v));
                    assert(x2.isMoving() == (!VecMath.equalsExactly(p,pTarget)
                                          || VecMath.normsqrd(v) != 0.));


                    double p0[] = new double[2];
                    double v0[] = new double[2];
                    double p1[] = new double[2];
                    double v1[] = new double[2];
                    double t = 0.;
                    for (int i = 0; i < nIncrs + 5.; ++i)
                    {
                        PRINT(i);
                        PRINT(t);
                        PRINT(t+dt);
                        x2.get(p0);
                        x2.getVelocity(v0);
                        x2.evolve(referenceTripDistance,referenceTripTime, dt, bounce);
                        t += dt;
                        x2.get(p1);
                        x2.getVelocity(v1);

                        PRINTARRAY(p0);
                        PRINTARRAY(v0);
                        PRINTARRAY(p1);
                        PRINTARRAY(v1);

                        if (LT(t, expectedTotalTime, eps))
                            assert(x2.isMoving());
                        else if (GT(t, expectedTotalTime, eps))
                            assert(!x2.isMoving());
                        else
                        {
                            // should be pretty damn close to stopped
                            assert(VecMath.norm(v1) <= 1e-6);
                            assert(VecMath.dist(p1, pTarget) <= 1e-6);
                        }

                        {
                            // should also be the same as what we get
                            // if we make the trip all at once
                            SmoothlyVaryingViewingParameter allAtOnce = new SmoothlyVaryingViewingParameter(p);
                            allAtOnce.setVelocity(v);
                            allAtOnce.set(pTarget);
                            allAtOnce.evolve(referenceTripDistance,referenceTripTime, t, bounce);
                            double p1AllAtOnce[] = new double[2];
                            double v1AllAtOnce[] = new double[2];
                            allAtOnce.get(p1AllAtOnce);
                            allAtOnce.getVelocity(v1AllAtOnce);
                            PRINTARRAY(p1);
                            PRINTARRAY(p1AllAtOnce);
                            PRINTARRAY(v1);
                            PRINTARRAY(v1AllAtOnce);

                            assert(VecMath.dist(p1, p1AllAtOnce) <= 1e-6);
                            assert(VecMath.dist(v1, v1AllAtOnce) <= 1e-6);
                        }

                        System.out.println();
                    }
                }

                //
                // Now do the trip in 3d
                // with some random rotation
                //
                if (false)
                {
                    assert(false); // XXX DO ME
                }
            }

            System.out.println("    double-quadratic behavior test passed.");

            //System.out.println("EXITING EARLY");
            //System.exit(0);
        }

        {
            SmoothlyVaryingViewingParameter x = new SmoothlyVaryingViewingParameter(0.);
            x.set(1.);
            PRINT(x.get());
            PRINT(x.getTarget());
            PRINT(x.getVelocity());
            x.evolve(1, 1, .1, 0);
            PRINT(x.get());
            //System.exit(0);
        }
        {
            SmoothlyVaryingViewingParameter x = new SmoothlyVaryingViewingParameter(1.);
            x.set(0.);
            PRINT(x.get());
            PRINT(x.getTarget());
            PRINT(x.getVelocity());
            x.evolve(1, 1, .1, 0);
            PRINT(x.get());
            //System.exit(0);
        }

        double bounce = 0.; // XXX should write some tests with this
        double eps = 1e-5;
        {
            SmoothlyVaryingViewingParameter x = new SmoothlyVaryingViewingParameter(0.);
            x.set(1.);
            // Try the canonical trip: 1 second to go 1 unit of distance,
            // with time steps of 1/10 second.
            // It should get there in exactly 10 steps and then stay there.
            double dt = .1;
            double t = 0.;
            for (int i = 0; i < 15; ++i)
            {
                double p0 = x.get();
                double v0 = x.getVelocity();
                System.out.println("    Before evolve: "+
                    com.donhatchsw.compat.Format.sprintf("t = %20.17g p = %20.17g  v = %20.17g",
                                        t, p0, v0));
                x.evolve(1,1, dt, bounce);
                t += dt;
                double p1 = x.get();
                double v1 = x.getVelocity();
                System.out.println("     After evolve: "+
                    com.donhatchsw.compat.Format.sprintf("t = %20.17g p = %20.17g  v = %20.17g",
                                        t, p1, v1));
                if (LT(t,1.,eps))
                    assert(LT(x.get(), 1., eps));
                else
                    assert(x.get() == 1.);
                System.out.println();
            }
            assert(x.get() == 1.);
            assert(x.getVelocity() == 0.);
        }
        System.out.println("================================================");

        {
            //
            // See if we can get it to overshoot,
            // by starting out strong until the halfway point
            // where we have maximum speed and then losing power
            // during the landing.
            //
            SmoothlyVaryingViewingParameter x = new SmoothlyVaryingViewingParameter(0.);
            x.set(1.);
            double dt = .1;
            double t = 0.;
            for (int i = 0; i < 55; ++i)
            {
                double p0 = x.get();
                double v0 = x.getVelocity();
                System.out.println("    Before evolve: "+
                    com.donhatchsw.compat.Format.sprintf("t = %20.17g p = %20.17g  v = %20.17g",
                                        t, p0, v0));
                x.evolve(1,
                         i>=5 ? 2 : 1,   // reduce to half power at i=5
                         dt,
                         bounce);
                t += dt;
                double p1 = x.get();
                double v1 = x.getVelocity();
                System.out.println("     After evolve: "+
                    com.donhatchsw.compat.Format.sprintf("t = %20.17g p = %20.17g  v = %20.17g",
                                        t, p1, v1));
                if (LEQ(t,2.5,eps))
                    assert(p1 > p0);
                else if (LEQ(t, 5.,eps))
                    assert(p1 < p0);
                else
                    assert(p0 == 1. && p1 == 1.);
                System.out.println();
            }
            assert(x.get() == 1.);
        }


        {
            //
            // Try lots of different trips
            // without changing any strengths midstream.
            // All the trips should end up being scaled
            // versions of the canonical trip... no overshooting,
            // i.e. the position should be monotonically increasing
            // or decreasing towards the target.
            //
            SmoothlyVaryingViewingParameter x = new SmoothlyVaryingViewingParameter(0.);
            double canonicalDistances[] = {.1, 1, 10};
            double canonicalTimes[] = {.1, 1, 10};
            double starts[] = {-100, -1, -.1, 0, .1, 1, 100};
            double targets[] = {-100, -1, -.1, 0, .1, 1, 100};
            double nIncrss[] = {.5, 1, 1.5, 2, 2.5, 9.5, 10, 10.5};
            FORI (iCanonicalDistance, canonicalDistances.length)
            FORI (iCanonicalTime, canonicalTimes.length)
            FORI (iStart, starts.length)
            FORI (iTarget, targets.length)
            FORI (iIncr, nIncrss.length)
            {
                System.out.println("================================================");
                double canonicalDistance = canonicalDistances[iCanonicalDistance];
                double canonicalTime = canonicalTimes[iCanonicalTime];
                double start = starts[iStart];
                double target = targets[iTarget];
                double nIncrs = nIncrss[iIncr];
                double dt = canonicalTime / nIncrs; // XXX this doesn't really give good coverage
                PRINT(canonicalDistance);
                PRINT(canonicalTime);
                PRINT(start);
                PRINT(target);
                PRINT(nIncrs);
                PRINT(dt);

                x.snap(start);
                PRINT(x.get());
                PRINT(x.getVelocity());
                assert(x.get() == start);
                assert(x.getVelocity() == 0.);
                assert(!x.isMoving());

                x.set(target);

                int overallDir = LT(start,target,eps) ? 1 : GT(start,target,eps) ? -1 : 0;
                double t = 0.;
                for (int i = 0; i < nIncrs + 5; ++i)
                {
                    double p0 = x.get();
                    double v0 = x.getVelocity();
                    // XXX argh, my printf is too slow for all this
                    if (false)
                        System.out.println("    Before evolve: "+
                            com.donhatchsw.compat.Format.sprintf("t = %20.17g p = %20.17g  v = %20.17g",
                                                t, p0, v0));
                    x.evolve(canonicalDistance,canonicalTime, dt, bounce);
                    t += dt;
                    double p1 = x.get();
                    double v1 = x.getVelocity();
                    if (false)
                        System.out.println("     After evolve: "+
                            com.donhatchsw.compat.Format.sprintf("t = %20.17g p = %20.17g  v = %20.17g",
                                                t, p1, v1));
                    PRINT(overallDir);
                    PRINT(p0);
                    PRINT(p1);
                    if (overallDir > 0)
                        assert(GEQ(p1,p0,eps));
                    else if (overallDir < 0)
                        assert(LEQ(p1,p0,eps));
                    else
                        assert(EQ(p1,p0,eps));

                    System.out.println();
                }
            }
        }

    } // confidenceTests



            // Stuff so I don't have to translate from mathematica
            private static double[] List(double x, double y) {return new double[]{x,y};}
            private static double[] List(double a, double b, double c, double d) {return new double[]{a,b,c,d};}
            private static double[] List(double a, double b, double c, double d, double e) {return new double[]{a,b,c,d,e};}
            private static double[][] List(double a[], double b[], double c[], double d[]) {return new double[][]{a,b,c,d};}
            private static final double Power(double x, int y) {assert(y==2); return x*x;}
            private static final double Power3(double x, int y) {assert(y==3); return x*x*x;}
            private static final double Power(double x, double y) {return Math.pow(x,y);}
            private static double Sqrt(double x) {return Math.sqrt(x);}
            private static double Log(double x) {return Math.log(x);}


            /*
                Try to get something simpler than
                the 60 lines mathematica gave me.
                Know that the integral of {x,y}/sqrt(x^2+y^2) dy
                is {x log(y+sqrt(x^2+y^2)), sqrt(x^2+y^2)}.
                Work in a coord system in which the line segment
                is parallel to the y axis.
            */
            private static double[] calcVt1FromA0At1(double v0[],
                                                     double A0[],
                                                     double At1[],
                                                     boolean twoQuadraticsMode)
            {
                double At1_minus_A0[] = VecMath.vmv(At1, A0);
                double t1sqrd = VecMath.normsqrd(At1_minus_A0);
                if (t1sqrd == 0.)
                    return v0;
                double t1 = Math.sqrt(t1sqrd);
                // Think in terms of an orthogonal basis u,v
                // where v points along the line segment
                // and u points 90 degrees ccw from v
                // (thus, either directly towards the line segment
                // or directly away from it, orthogonally)
                double v[] = VecMath.vxs(At1_minus_A0, 1./t1);
                double u[] = VecMath.xv2(v); VecMath.vxs(u,u,-1.);
                // Let (x,y0) and (x,y1) be the coords
                // of A0 and At1 respectively,
                // in that coord system.
                double x = VecMath.dot(A0, u);
                double y0 = VecMath.dot(A0, v);
                double y1 = VecMath.dot(At1, v);
                //double hypot_x_y0 = VecMath.norm(A0); // = hypot(x,y0)  NOT STABLE!
                //double hypot_x_y1 = VecMath.norm(At1); // = hypot(x,y1)  NOT STABLE!
                double hypot_x_y0 = MyMath.hypot(x,y0);
                double hypot_x_y1 = MyMath.hypot(x,y1);

                // XXX hmm, I think this might be less stable?  something is bombing when At1 is right at the origin... which means x==0 and y1==0 I think
                double answer[] = {
                    (y1 + hypot_x_y1) == 0. ? 0. : // XXX put this in because it waw making it blow some times... when this happens, x is tiny tiny, can assume 0
                    (y0 + hypot_x_y0) == 0. ? 0. :
                    x==0. ? 0.
                          : x * Math.log((y1 + hypot_x_y1)
                                       / (y0 + hypot_x_y0)), // looks scary, but gnuplot shows this being pretty stable all the way down to really small x like 1e-304.  but definitely NOT stable if we calculate hypot_x_y as norm(A), I tried it and it blew chunks
                    hypot_x_y1 - hypot_x_y0,
                };
                // Convert back to original basis
                answer = VecMath.sxvpsxv(answer[0], u,
                                         answer[1], v);
                VecMath.vpv(answer, answer, v0);
                return answer;
            } // calcVt1FromA0At1

            /*
                MyDefiniteIntegrate[fun_,{var_,a_,b_}] := Module[{temp=Integrate[fun,var]}, (temp /. var->b) - (temp /. var->a)]
                MyDefiniteIntegrate[{x,y}/Sqrt[x^2+y^2], {y, y0,y1}] // Simplify
                MyDefiniteIntegrate[MyDefiniteIntegrate[{x,y}/Sqrt[x^2+y^2], {y, y0,yy1}], {yy1,y0,y1}] // Simplify
            */
            private static double[] calcPt1FromA0At1(double p0[],
                                                     double v0[],
                                                     double A0[],
                                                     double At1[],
                                                     boolean twoQuadraticsMode)
            {
                double At1_minus_A0[] = VecMath.vmv(At1, A0);
                double t1sqrd = VecMath.normsqrd(At1_minus_A0);
                if (t1sqrd == 0.)
                    return p0;
                double t1 = Math.sqrt(t1sqrd);
                double v[] = VecMath.vxs(At1_minus_A0, 1./t1);
                double u[] = VecMath.xv2(v); VecMath.vxs(u,u,-1.);
                double x = VecMath.dot(A0, u);
                double y0 = VecMath.dot(A0, v);
                double y1 = VecMath.dot(At1, v);
                double hypot_x_y0 = MyMath.hypot(x,y0);
                double hypot_x_y1 = MyMath.hypot(x,y1);
                // so far, identical to calcVt1FromA0At1 (except for return p0 instead of v0);
                // see that function for comments.
                double answer[] = {
                    (y1 + hypot_x_y1) == 0. ? 0. :
                    (y0 + hypot_x_y0) == 0. ? 0. :
                    x==0. ? 0.
                          : x*(- hypot_x_y1
                               + hypot_x_y0
                               + y1*Math.log(y1+hypot_x_y1)
                               - y1*Math.log(y0+hypot_x_y0)), // yes, y1, not y0!  I don't friggin know why
                    .5*(y0*hypot_x_y0
                      - 2*y1*hypot_x_y0
                      + y1*hypot_x_y1
                      + ((y1 + hypot_x_y1) == 0. ? 0. :
                         (y0 + hypot_x_y0) == 0. ? 0. :
                         x*x==0. ? 0. : x*x*(Math.log((y1+hypot_x_y1)
                                                    / (y0+hypot_x_y0))))),
                };
                // Convert back to original basis
                answer = VecMath.sxvpsxv(answer[0], u,
                                         answer[1], v);
                VecMath.vpsxv(answer, answer, t1, v0);
                VecMath.vpv(answer, answer, p0);
                return answer;

            } // calcPt1FromA0At1

            private static double[] calcAcceleration(double A0[],
                                                     double A1[],
                                                     double t,
                                                     boolean twoQuadraticsMode)
            {
                if (twoQuadraticsMode)
                {
                    // Goal is to make the v trajectory
                    // consist of two segments whose total length is
                    // 2*switchTime
                    // and whose bisector is in the direction of the
                    // A trajectory.
                    double switchTime = -VecMath.dot(A0,VecMath.vmv(A1,A0));
                    if (t < switchTime)
                        return VecMath.normalize(VecMath.lerp(A0,A1, switchTime-1.));
                    else
                        return VecMath.normalize(VecMath.lerp(A0,A1, switchTime+1.));
                }
                else
                    return VecMath.normalize(
                               VecMath.lerp(A0, A1, t));
            }

            /*
                Integral from 0 to t
                of lerp(A0,A1,u)/|lerp(A0,A1,u)| du
            */
            private static double[] calcVelocity(double v0[],
                                                 double A0[],
                                                 double A1[],
                                                 double t,
                                                 boolean twoQuadraticsMode)
            {
                if (twoQuadraticsMode)
                {
                    // XXX TODO: do it differently when t < 0
                    double switchTime = -VecMath.dot(A0,VecMath.vmv(A1,A0));
                    if (t < switchTime)
                        return VecMath.vpsxv(v0, t, VecMath.normalize(VecMath.lerp(A0,A1, switchTime-1.)));
                    else
                        return VecMath.sxvpsxvpsxv(
                            1., v0,
                            switchTime, VecMath.normalize(VecMath.lerp(A0,A1, switchTime-1.)),
                            t-switchTime, VecMath.normalize(VecMath.lerp(A0,A1, switchTime+1.)));
                }
                else
                {
                    double At[] = VecMath.lerp(A0, A1, t);
                    double[] answer = calcVt1FromA0At1(v0, A0, At, twoQuadraticsMode);
                    if (t < 0.)
                    {
                        // answer = v0 - (answer-v0)
                        VecMath.sxvpsxv(answer,
                                        2., v0,
                                        -1., answer);
                    }
                    return answer;
                }
            } // calcVelocity

            /*
                Integral from 0 to t
                of integral from 0 to u
                of lerp(A0,A1,v)/|lerp(A0,A1,v)| dv du
            */
            private static double[] calcPosition(double p0[], double v0[],
                                                 double A0[],
                                                 double A1[],
                                                 double t,
                                                 boolean twoQuadraticsMode)
            {
                if (twoQuadraticsMode)
                {
                    // XXX TODO: do it differently when t < 0
                    double switchTime = -VecMath.dot(A0,VecMath.vmv(A1,A0));
                    if (t < switchTime)
                    {
                        // p0 plus integral from 0 to t
                        // of s*a0 ds
                        double answer[] = VecMath.vpsxv(p0, t, v0);
                        VecMath.vpsxv(answer,
                                      answer,
                                      SQR(t)/2, VecMath.normalize(VecMath.lerp(A0,A1, switchTime-1.)));
                        return answer;
                    }
                    else
                    {
                        // p0
                        // plus t*v0
                        // plus integral from 0 to t of s*a0 ds
                        // plus integral from 0 to t-switchTime
                        // of switchV + s*a1
                        double switchV[] = VecMath.sxv(switchTime, VecMath.normalize(VecMath.lerp(A0,A1, switchTime-1.)));
                        double answer[] = VecMath.vpsxv(p0, t, v0);
                        VecMath.vpsxv(answer,
                                      answer,
                                      SQR(switchTime)/2, VecMath.normalize(VecMath.lerp(A0,A1, switchTime-1.)));
                        VecMath.vpsxv(answer,
                                      answer,
                                      t-switchTime, switchV);
                        VecMath.vpsxv(answer,
                                      answer,
                                      SQR(t-switchTime)/2, VecMath.normalize(VecMath.lerp(A0,A1, switchTime+1.)));
                        return answer;
                    }
                }
                else
                {
                    double At[] = VecMath.lerp(A0, A1, t);
                    if (t < 0.)
                    {
                        return calcPt1FromA0At1(p0,
                                                VecMath.vxs(v0, -1.),
                                                A0, At, twoQuadraticsMode);
                    }
                    else
                    {
                        return calcPt1FromA0At1(p0, v0, A0, At, twoQuadraticsMode);
                    }
                }
            } // calcPosition

            /*
                The jacobian of v[0],v[1],p[0],p[1],
                with respect to x0,y0,x1,y1.
                I.e.:
                    {
                        {dv[0]/dx0, dv[0]/dy0, dv[0]/dx1, dv[0]/dy1},
                        {dv[1]/dx0, dv[1]/dy0, dv[1]/dx1, dv[1]/dy1},
                        {dp[0]/dx0, dp[0]/dy0, dp[0]/dx1, dp[0]/dy1},
                        {dp[1]/dx0, dp[1]/dy0, dp[1]/dx1, dp[1]/dy1},
                    }
                Woohoo, 10,000 lines!!

                This was obtained from mathematica by:
(* Integrate seems to get confused, when this is all I want *)
MyDefiniteIntegrate[fun_,{var_,a_,b_}] := Module[{temp=Integrate[fun,var]}, (temp /. var->b) - (temp /. var->a)]

Unit[{x_,y_}] := {x,y}/Sqrt[x^2+y^2]

acceleration[A0_,A1_,t_] = Unit[A0+t*(A1-A0)] // Simplify;
velocity[A0_,A1_,t_] := Module[{u}, MyDefiniteIntegrate[acceleration[A0,A1,u],{u,0,t}]] // Simplify;
position[A0_,A1_,t_] := Module[{u}, MyDefiniteIntegrate[velocity[A0,A1,u],{u,0,t}]] // Simplify;

a = acceleration[{x0,y0},{x1,y1},t] // Simplify
(* Print["a = ",a] *)
Print["a = ",CForm[a]]

v = velocity[{x0,y0},{x1,y1},t] // Simplify
(* Print["v = ",v] *)
Print["v = ",CForm[v]]

p = position[{x0,y0},{x1,y1},t] // Simplify
(* Print["p = ",p] *)
Print["p = ",CForm[p]]


PRINT((CForm[D[a, {{x0, y0, x1, y1}}]]))
PRINT((CForm[D[v, {{x0, y0, x1, y1}}]]))
PRINT((CForm[D[p, {{x0, y0, x1, y1}}]]))

J = Transpose[D[Join[v,p], {{x0, y0, x1, y1}}]] // Simplify
Print["J = ",CForm[J]]

            Argh!  "produced a code attribute that exceeds the code limit of 65535 elements."  So have to break it up into 4 pieces...
            */

            // This is like 100,000 lines if we ask mathematica to
            // compose the whole thing.
            // And, thank goodness, I already did it with respect to A0,A1,t
            // by mistake, and that resulted in only 10,000 lines.
            // So, we express it using the chain
            // rule:
            //  d{v,p}/d{A0,At1} = d{v,p}/d{A0,A1,t} * d{A0,A1,t}/d{A0,At1}
            //      4x4                 4x5                     5x4
            private static double[][] calcVelocityAndPositionJacobianWithRespectToA0At1(
                double p0[], double v0[], // constant; doesn't take part in derivatives calculation
                double A0[],
                double At1[],
                double sign_t1,
                boolean twoQuadraticsMode)
            {
                System.out.println("holy shit!");
                double t = sign_t1*VecMath.dist(A0, At1);
                double A1[] = VecMath.lerp(A0, At1, 1./t);
                double dvp_over_dA0A1T[][] = calcVelocityAndPositionJacobianWithRespectToA0A1T(p0,v0,A0,A1,t,twoQuadraticsMode);

                double x0 = A0[0];
                double y0 = A0[1];
                double xt1 = At1[0];
                double yt1 = At1[1];
                double dA0A1T_over_dA0At1[][] = {
                    {1,0,0,0},
                    {0,1,0,0},
      {1 + Power(-x0 + xt1, 2)/
                Power(Power(-x0 + xt1, 2) + Power(-y0 + yt1, 2), 1.5) - 
            1/Sqrt(Power(-x0 + xt1, 2) + 
                  Power(-y0 + yt1, 2)), ((-x0 + xt1)*(-y0 + yt1))/
              Power(Power(-x0 + xt1, 2) + Power(-y0 + yt1, 2), 
              1.5), -(Power(-x0 + xt1, 2)/
                    Power(Power(-x0 + xt1, 2) + Power(-y0 + yt1, 2), 1.5)) + 
            1/Sqrt(Power(-x0 + xt1, 2) + 
                  Power(-y0 + yt1, 2)), -(((-x0 + xt1)*(-y0 + yt1))/
                  Power(Power(-x0 + xt1, 2) + Power(-y0 + yt1, 2), 1.5))}, 
      {((-x0 + xt1)*(-y0 + yt1))/
              Power(Power(-x0 + xt1, 2) + Power(-y0 + yt1, 2), 1.5), 
          1 + Power(-y0 + yt1, 2)/
                Power(Power(-x0 + xt1, 2) + Power(-y0 + yt1, 2), 1.5) - 
            1/Sqrt(Power(-x0 + xt1, 2) + 
                  Power(-y0 + yt1, 2)), -(((-x0 + xt1)*(-y0 + yt1))/
                  Power(Power(-x0 + xt1, 2) + Power(-y0 + yt1, 2), 
                  1.5)), -(Power(-y0 + yt1, 2)/
                    Power(Power(-x0 + xt1, 2) + Power(-y0 + yt1, 2), 1.5)) + 
            1/Sqrt(Power(-x0 + xt1, 2) + Power(-y0 + yt1, 2))}, 
      {-((-x0 + xt1)/
                  Sqrt(Power(-x0 + xt1, 2) + 
                    Power(-y0 + yt1, 2))), -((-y0 + yt1)/
                  Sqrt(Power(-x0 + xt1, 2) + Power(-y0 + yt1, 2))), (-x0 + 
                  xt1)/Sqrt(Power(-x0 + xt1, 2) + 
                Power(-y0 + yt1, 2)), (-y0 + yt1)/
              Sqrt(Power(-x0 + xt1, 2) + Power(-y0 + yt1, 2))},
                };
                double answer[][] = VecMath.mxm(dvp_over_dA0A1T, dA0A1T_over_dA0At1);
                PRINT(answer.length);
                PRINT(answer[0].length);
                assert(answer.length == 4);
                assert(answer[0].length == 4);
                return answer;
            } // calcVelocityAndPositionJacobianWithRespectToA0At1
            private static double[][] calcVelocityAndPositionJacobianWithRespectToA0A1T(
                double p0[], double v0[], // constant; these don't take part in the derivatives calculation
                double A0[],
                double A1[],
                double t,
                boolean twoQuadraticsMode)
            {
                return new double[][] {
                    calcVelocity0Gradient(v0,A0,A1,t,twoQuadraticsMode),
                    calcVelocity1Gradient(v0,A0,A1,t,twoQuadraticsMode),
                    calcPosition0Gradient(p0,v0,A0,A1,t,twoQuadraticsMode),
                    calcPosition1Gradient(p0,v0,A0,A1,t,twoQuadraticsMode),
                };
            }
            private static double[] calcVelocity0Gradient(double v0[], // constant, doesn't take part in derivatives
                                                          double A0[],
                                                          double A1[],
                                                          double t,
                                                          boolean twoQuadraticsMode)
            {
                double x0 = A0[0];
                double y0 = A0[1];
                double x1 = A1[0];
                double y1 = A1[1];
                double answer[] =
List(((2*x0 - 2*x1)*(-x0 + x1)*
                    Sqrt(Power(x0, 2) + Power(y0, 2)))/
                Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                  Power(y0 - y1, 2), 
                2) - ((2*x0 - 2*x1)*(-x0 + x1)*
                    Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 2*(-1 + t)*t*x0*x1 + 
                        Power(y0, 2) + 
                        Power(t, 2)*(Power(x1, 2) + Power(y0 - y1, 2)) - 
                        2*t*y0*(y0 - y1)))/
                Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                  Power(y0 - y1, 2), 
                2) - (x0*(-x0 + x1))/(Sqrt(Power(x0, 2) + 
                      Power(y0, 2))*(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0 - y1, 2))) + 
            Sqrt(Power(x0, 2) + Power(y0, 2))/(Power(x0, 2) - 2*x0*x1 + 
                    Power(x1, 2) + 
                    Power(y0 - y1, 2)) + ((-x0 + x1)*(2*Power(-1 + t, 2)*x0 - 
                      2*(-1 + t)*t*x1))/(2.*
                  Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 2*(-1 + t)*t*x0*x1 + 
                      Power(y0, 2) + 
                      Power(t, 2)*(Power(x1, 2) + Power(y0 - y1, 2)) - 
                      2*t*y0*(y0 - y1))*(Power(x0, 2) - 2*x0*x1 + 
                      Power(x1, 2) + Power(y0 - y1, 2))) - 
            Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 2*(-1 + t)*t*x0*x1 + 
                    Power(y0, 2) + 
                    Power(t, 2)*(Power(x1, 2) + Power(y0 - y1, 2)) - 
                    2*t*y0*(y0 - y1))/(Power(x0, 2) - 2*x0*x1 + 
                    Power(x1, 2) + 
                    Power(y0 - y1, 2)) - ((y0 - y1)*(x1*y0 - 
                      x0*y1)*((2*(-2*x0 + 
                                  x1 + ((2*x0 - 2*x1)*
                                        Sqrt(Power(x0, 2) + 
                                        Power(y0, 2)))/(2.*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + 
                                        Power(y0 - y1, 2))) + (x0*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)))/
                                      Sqrt(Power(x0, 2) + Power(y0, 2))))/
                          Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0 - y1, 
                                2)) - ((2*x0 - 2*x1)*(-Power(x0, 2) + x0*x1 - 
                                  Power(y0, 2) + 
                                  Sqrt(Power(x0, 2) + Power(y0, 2))*
                                    Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                  y0*y1))/
                          Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0 - y1, 2), 1.5)))/(2.*(Power(x0, 2) - 
                      2*x0*x1 + Power(x1, 2) + 
                      Power(y0 - y1, 2))*(-Power(x0, 2) + x0*x1 - 
                      Power(y0, 2) + 
                      Sqrt(Power(x0, 2) + Power(y0, 2))*
                        Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0 - y1, 2)) + y0*y1)) + ((y0 - 
                      y1)*(x1*y0 - 
                      x0*y1)*((2*(-2*x0 + 2*t*x0 + x1 - 
                                  2*t*x1 + ((2*x0 - 2*x1)*
                                        Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 
                                        2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1)))/(2.*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + 
                                        Power(y0 - y1, 2))) + ((2*
                                        Power(-1 + t, 2)*x0 - 
                                        2*(-1 + t)*t*x1)*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + 
                                        Power(y0 - y1, 2)))/(2.*
                                        Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 
                                        2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1)))))/
                          Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0 - y1, 
                                2)) - ((2*x0 - 2*x1)*(-Power(x0, 2) + 
                                  t*Power(x0, 2) + x0*x1 - 2*t*x0*x1 + 
                                  t*Power(x1, 2) - Power(y0, 2) + 
                                  t*Power(y0, 2) + 
                                  Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 
                                        2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1))*
                                    Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                  y0*y1 - 2*t*y0*y1 + t*Power(y1, 2)))/
                          Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0 - y1, 2), 1.5)))/(2.*(Power(x0, 2) - 
                      2*x0*x1 + Power(x1, 2) + 
                      Power(y0 - y1, 2))*(-Power(x0, 2) + t*Power(x0, 2) + 
                      x0*x1 - 2*t*x0*x1 + t*Power(x1, 2) - Power(y0, 2) + 
                      t*Power(y0, 2) + 
                      Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                            2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                            Power(t, 2)*(Power(x1, 2) + Power(y0 - y1, 2)) - 
                            2*t*y0*(y0 - y1))*
                        Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0 - y1, 2)) + y0*y1 - 2*t*y0*y1 + 
                      t*Power(y1, 2))) + ((y0 - y1)*y1*
                    Log((2*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + 
                                  Sqrt(Power(x0, 2) + Power(y0, 2))*
                                    Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                  y0*y1))/
                          Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0 - y1, 2))))/
                Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                  Power(y0 - y1, 2), 
                1.5) + (3*(2*x0 - 2*x1)*(y0 - y1)*(x1*y0 - x0*y1)*
                  Log((2*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + 
                                Sqrt(Power(x0, 2) + Power(y0, 2))*
                                  Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                      Power(x1, 2) + Power(y0 - y1, 2)) + 
                                y0*y1))/
                        Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                          Power(y0 - y1, 2))))/(2.*
                  Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0 - y1, 2), 2.5)) - ((y0 - y1)*y1*
                    Log((2*(-Power(x0, 2) + t*Power(x0, 2) + x0*x1 - 
                                  2*t*x0*x1 + t*Power(x1, 2) - Power(y0, 2) + 
                                  t*Power(y0, 2) + 
                                  Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 
                                        2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1))*
                                    Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                  y0*y1 - 2*t*y0*y1 + t*Power(y1, 2)))/
                          Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0 - y1, 2))))/
                Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                  Power(y0 - y1, 2), 
                1.5) - (3*(2*x0 - 2*x1)*(y0 - y1)*(x1*y0 - x0*y1)*
                  Log((2*(-Power(x0, 2) + t*Power(x0, 2) + x0*x1 - 
                                2*t*x0*x1 + t*Power(x1, 2) - Power(y0, 2) + 
                                t*Power(y0, 2) + 
                                Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                      2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                      Power(t, 
                                        2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                      2*t*y0*(y0 - y1))*
                                  Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                      Power(x1, 2) + Power(y0 - y1, 2)) + 
                                y0*y1 - 2*t*y0*y1 + t*Power(y1, 2)))/
                        Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                          Power(y0 - y1, 2))))/(2.*
                  Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0 - y1, 2), 2.5)), ((2*x0 - 2*x1)*
                    Sqrt(Power(x0, 2) + Power(y0, 2))*(-y0 + y1))/
                Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                  Power(y0 - y1, 2), 
                2) - ((2*x0 - 2*x1)*
                    Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 2*(-1 + t)*t*x0*x1 + 
                        Power(y0, 2) + 
                        Power(t, 2)*(Power(x1, 2) + Power(y0 - y1, 2)) - 
                        2*t*y0*(y0 - y1))*(-y0 + y1))/
                Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                  Power(y0 - y1, 2), 
                2) - (x0*(-y0 + y1))/(Sqrt(Power(x0, 2) + 
                      Power(y0, 2))*(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0 - y1, 2))) + ((2*Power(-1 + t, 2)*x0 - 
                      2*(-1 + t)*t*x1)*(-y0 + y1))/(2.*
                  Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 2*(-1 + t)*t*x0*x1 + 
                      Power(y0, 2) + 
                      Power(t, 2)*(Power(x1, 2) + Power(y0 - y1, 2)) - 
                      2*t*y0*(y0 - y1))*(Power(x0, 2) - 2*x0*x1 + 
                      Power(x1, 2) + Power(y0 - y1, 2))) - ((x0 - 
                      x1)*(-(x1*y0) + 
                      x0*y1)*((2*(-2*x0 + 
                                  x1 + ((2*x0 - 2*x1)*
                                        Sqrt(Power(x0, 2) + 
                                        Power(y0, 2)))/(2.*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + 
                                        Power(y0 - y1, 2))) + (x0*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)))/
                                      Sqrt(Power(x0, 2) + Power(y0, 2))))/
                          Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0 - y1, 
                                2)) - ((2*x0 - 2*x1)*(-Power(x0, 2) + x0*x1 - 
                                  Power(y0, 2) + 
                                  Sqrt(Power(x0, 2) + Power(y0, 2))*
                                    Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                  y0*y1))/
                          Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0 - y1, 2), 1.5)))/(2.*(Power(x0, 2) - 
                      2*x0*x1 + Power(x1, 2) + 
                      Power(y0 - y1, 2))*(-Power(x0, 2) + x0*x1 - 
                      Power(y0, 2) + 
                      Sqrt(Power(x0, 2) + Power(y0, 2))*
                        Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0 - y1, 2)) + y0*y1)) + ((x0 - 
                      x1)*(-(x1*y0) + 
                      x0*y1)*((2*(-2*x0 + 2*t*x0 + x1 - 
                                  2*t*x1 + ((2*x0 - 2*x1)*
                                        Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 
                                        2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1)))/(2.*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + 
                                        Power(y0 - y1, 2))) + ((2*
                                        Power(-1 + t, 2)*x0 - 
                                        2*(-1 + t)*t*x1)*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + 
                                        Power(y0 - y1, 2)))/(2.*
                                        Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 
                                        2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1)))))/
                          Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0 - y1, 
                                2)) - ((2*x0 - 2*x1)*(-Power(x0, 2) + 
                                  t*Power(x0, 2) + x0*x1 - 2*t*x0*x1 + 
                                  t*Power(x1, 2) - Power(y0, 2) + 
                                  t*Power(y0, 2) + 
                                  Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 
                                        2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1))*
                                    Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                  y0*y1 - 2*t*y0*y1 + t*Power(y1, 2)))/
                          Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0 - y1, 2), 1.5)))/(2.*(Power(x0, 2) - 
                      2*x0*x1 + Power(x1, 2) + 
                      Power(y0 - y1, 2))*(-Power(x0, 2) + t*Power(x0, 2) + 
                      x0*x1 - 2*t*x0*x1 + t*Power(x1, 2) - Power(y0, 2) + 
                      t*Power(y0, 2) + 
                      Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                            2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                            Power(t, 2)*(Power(x1, 2) + Power(y0 - y1, 2)) - 
                            2*t*y0*(y0 - y1))*
                        Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0 - y1, 2)) + y0*y1 - 2*t*y0*y1 + 
                      t*Power(y1, 2))) - ((x0 - x1)*y1*
                    Log((2*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + 
                                  Sqrt(Power(x0, 2) + Power(y0, 2))*
                                    Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                  y0*y1))/
                          Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0 - y1, 2))))/
                Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                  Power(y0 - y1, 2), 
                1.5) + (3*(2*x0 - 2*x1)*(x0 - x1)*(-(x1*y0) + x0*y1)*
                  Log((2*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + 
                                Sqrt(Power(x0, 2) + Power(y0, 2))*
                                  Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                      Power(x1, 2) + Power(y0 - y1, 2)) + 
                                y0*y1))/
                        Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                          Power(y0 - y1, 2))))/(2.*
                  Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0 - y1, 2), 2.5)) - ((-(x1*y0) + x0*y1)*
                    Log((2*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + 
                                  Sqrt(Power(x0, 2) + Power(y0, 2))*
                                    Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                  y0*y1))/
                          Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0 - y1, 2))))/
                Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                  Power(y0 - y1, 2), 
                1.5) + ((x0 - x1)*y1*
                    Log((2*(-Power(x0, 2) + t*Power(x0, 2) + x0*x1 - 
                                  2*t*x0*x1 + t*Power(x1, 2) - Power(y0, 2) + 
                                  t*Power(y0, 2) + 
                                  Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 
                                        2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1))*
                                    Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                  y0*y1 - 2*t*y0*y1 + t*Power(y1, 2)))/
                          Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0 - y1, 2))))/
                Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                  Power(y0 - y1, 2), 
                1.5) - (3*(2*x0 - 2*x1)*(x0 - x1)*(-(x1*y0) + x0*y1)*
                  Log((2*(-Power(x0, 2) + t*Power(x0, 2) + x0*x1 - 
                                2*t*x0*x1 + t*Power(x1, 2) - Power(y0, 2) + 
                                t*Power(y0, 2) + 
                                Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                      2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                      Power(t, 
                                        2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                      2*t*y0*(y0 - y1))*
                                  Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                      Power(x1, 2) + Power(y0 - y1, 2)) + 
                                y0*y1 - 2*t*y0*y1 + t*Power(y1, 2)))/
                        Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                          Power(y0 - y1, 2))))/(2.*
                  Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0 - y1, 2), 2.5)) + ((-(x1*y0) + x0*y1)*
                    Log((2*(-Power(x0, 2) + t*Power(x0, 2) + x0*x1 - 
                                  2*t*x0*x1 + t*Power(x1, 2) - Power(y0, 2) + 
                                  t*Power(y0, 2) + 
                                  Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 
                                        2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1))*
                                    Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                  y0*y1 - 2*t*y0*y1 + t*Power(y1, 2)))/
                          Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0 - y1, 2))))/
                Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                  Power(y0 - y1, 2), 
                1.5), -((t*(2*x0 - 2*x1)*(x0 - x1)*
                        Sqrt(Power(x0, 2) + Power(y0, 2)))/
                    Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0 - y1, 2), 2)) + (t*
                  x0*(x0 - x1))/(Sqrt(Power(x0, 2) + 
                      Power(y0, 2))*(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0 - y1, 2))) + (t*
                  Sqrt(Power(x0, 2) + Power(y0, 2)))/(Power(x0, 2) - 
                  2*x0*x1 + Power(x1, 2) + 
                  Power(y0 - y1, 2)) - ((2*x0 - 2*x1)*
                  Sqrt(Power(x0, 2) + Power(y0, 2))*(y0 - y1)*(x1*y0 - 
                      x0*y1))/(2.*
                  Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0 - y1, 2), 1.5)*
                  Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0, 2) - 2*y0*y1 + Power(y1, 2), 
                    1.5)) - (Sqrt(Power(x0, 2) + Power(y0, 2))*(y0 - y1)*
                  y1)/(Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0 - y1, 2), 1.5)*
                  Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + Power(y0, 2) - 
                      2*y0*y1 + Power(y1, 2))) - (3*(2*x0 - 2*x1)*
                  Sqrt(Power(x0, 2) + Power(y0, 2))*(y0 - y1)*(x1*y0 - 
                      x0*y1))/(2.*
                  Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0 - y1, 2), 2.5)*
                  Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + Power(y0, 2) - 
                      2*y0*y1 + Power(y1, 2))) + (x0*(y0 - y1)*(x1*y0 - 
                      x0*y1))/(Sqrt(Power(x0, 2) + Power(y0, 2))*
                  Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0 - y1, 2), 1.5)*
                  Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + Power(y0, 2) - 
                      2*y0*y1 + Power(y1, 2))) - ((2*x0 - 4*t*x0 + 
                      2*Power(t, 2)*x0 + 2*t*x1 - 2*Power(t, 2)*x1)*(y0 - 
                      y1)*(x1*y0 - x0*y1))/(2.*
                  Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0 - y1, 2), 1.5)*
                  Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + Power(y0, 2) - 
                      2*y0*y1 + Power(y1, 2))*
                  Sqrt(Power(x0, 2) - 2*t*Power(x0, 2) + 
                      Power(t, 2)*Power(x0, 2) + 2*t*x0*x1 - 
                      2*Power(t, 2)*x0*x1 + Power(t, 2)*Power(x1, 2) + 
                      Power(y0, 2) - 2*t*Power(y0, 2) + 
                      Power(t, 2)*Power(y0, 2) + 2*t*y0*y1 - 
                      2*Power(t, 2)*y0*y1 + 
                      Power(t, 2)*Power(y1, 2))) + ((2*x0 - 2*x1)*(y0 - 
                      y1)*(x1*y0 - x0*y1)*
                  Sqrt(Power(x0, 2) - 2*t*Power(x0, 2) + 
                      Power(t, 2)*Power(x0, 2) + 2*t*x0*x1 - 
                      2*Power(t, 2)*x0*x1 + Power(t, 2)*Power(x1, 2) + 
                      Power(y0, 2) - 2*t*Power(y0, 2) + 
                      Power(t, 2)*Power(y0, 2) + 2*t*y0*y1 - 
                      2*Power(t, 2)*y0*y1 + Power(t, 2)*Power(y1, 2)))/(2.*
                  Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0 - y1, 2), 1.5)*
                  Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0, 2) - 2*y0*y1 + Power(y1, 2), 
                    1.5)) + ((y0 - y1)*y1*
                  Sqrt(Power(x0, 2) - 2*t*Power(x0, 2) + 
                      Power(t, 2)*Power(x0, 2) + 2*t*x0*x1 - 
                      2*Power(t, 2)*x0*x1 + Power(t, 2)*Power(x1, 2) + 
                      Power(y0, 2) - 2*t*Power(y0, 2) + 
                      Power(t, 2)*Power(y0, 2) + 2*t*y0*y1 - 
                      2*Power(t, 2)*y0*y1 + 
                      Power(t, 2)*Power(y1, 2)))/(Power(Power(x0, 2) - 
                      2*x0*x1 + Power(x1, 2) + Power(y0 - y1, 2), 1.5)*
                  Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + Power(y0, 2) - 
                      2*y0*y1 + Power(y1, 2))) + (3*(2*x0 - 2*x1)*(y0 - 
                      y1)*(x1*y0 - x0*y1)*
                  Sqrt(Power(x0, 2) - 2*t*Power(x0, 2) + 
                      Power(t, 2)*Power(x0, 2) + 2*t*x0*x1 - 
                      2*Power(t, 2)*x0*x1 + Power(t, 2)*Power(x1, 2) + 
                      Power(y0, 2) - 2*t*Power(y0, 2) + 
                      Power(t, 2)*Power(y0, 2) + 2*t*y0*y1 - 
                      2*Power(t, 2)*y0*y1 + Power(t, 2)*Power(y1, 2)))/(2.*
                  Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0 - y1, 2), 2.5)*
                  Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + Power(y0, 2) - 
                      2*y0*y1 + Power(y1, 2))) + (t*(y0 - y1)*(-(x1*y0) + 
                      x0*y1)*((2*(-2*x0 + 
                                  x1 + ((2*x0 - 2*x1)*
                                        Sqrt(Power(x0, 2) + 
                                        Power(y0, 2)))/(2.*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + 
                                        Power(y0 - y1, 2))) + (x0*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)))/
                                      Sqrt(Power(x0, 2) + Power(y0, 2))))/
                          Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0 - y1, 
                                2)) - ((2*x0 - 2*x1)*(-Power(x0, 2) + x0*x1 - 
                                  Power(y0, 2) + 
                                  Sqrt(Power(x0, 2) + Power(y0, 2))*
                                    Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                  y0*y1))/
                          Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0 - y1, 2), 1.5)))/(2.*(Power(x0, 2) - 
                      2*x0*x1 + Power(x1, 2) + 
                      Power(y0 - y1, 2))*(-Power(x0, 2) + x0*x1 - 
                      Power(y0, 2) + 
                      Sqrt(Power(x0, 2) + Power(y0, 2))*
                        Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0 - y1, 2)) + y0*y1)) - ((-x0 + x1)*
                  Sqrt(Power(x0, 2) + 
                      Power(y0, 
                          2))*(((2*x0 - 2*x1)*(x0*x1 - Power(x1, 2) + y0*y1 - 
                                Power(y1, 2)))/(2.*
                            Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                Power(y0, 2) - 2*y0*y1 + Power(y1, 2), 2)) - 
                      x1/(2.*(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                Power(y0, 2) - 2*y0*y1 + 
                                Power(y1, 2)))))/(Power(x0, 2) - 2*x0*x1 + 
                  Power(x1, 2) + Power(y0, 2) - 2*y0*y1 + 
                  Power(y1, 2)) + ((-x0 + x1)*
                  Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 2*(-1 + t)*x0*x1 - 
                      2*Power(-1 + t, 2)*x0*x1 + Power(x1, 2) + 
                      2*(-1 + t)*Power(x1, 2) + 
                      Power(-1 + t, 2)*Power(x1, 2) + 
                      Power(-1 + t, 2)*Power(y0, 2) - 2*(-1 + t)*y0*y1 - 
                      2*Power(-1 + t, 2)*y0*y1 + Power(y1, 2) + 
                      2*(-1 + t)*Power(y1, 2) + 
                      Power(-1 + t, 2)*
                        Power(y1, 
                          2))*(((2*x0 - 2*x1)*(x0*x1 - Power(x1, 2) + y0*y1 - 
                                Power(y1, 2)))/(2.*
                            Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                Power(y0, 2) - 2*y0*y1 + Power(y1, 2), 2)) - 
                      x1/(2.*(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                Power(y0, 2) - 2*y0*y1 + 
                                Power(y1, 2)))))/(Power(x0, 2) - 2*x0*x1 + 
                  Power(x1, 2) + Power(y0, 2) - 2*y0*y1 + 
                  Power(y1, 2)) + ((2*x0 - 2*x1)*(-x0 + x1)*
                    Sqrt(Power(x0, 2) + 
                        Power(y0, 
                            2))*(-0.5 - (x0*x1 - Power(x1, 2) + y0*y1 - 
                              Power(y1, 2))/(2.*(Power(x0, 2) - 2*x0*x1 + 
                                  Power(x1, 2) + Power(y0, 2) - 2*y0*y1 + 
                                  Power(y1, 2)))))/
                Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + Power(y0, 2) - 
                  2*y0*y1 + Power(y1, 2), 
                2) - (x0*(-x0 + 
                      x1)*(-0.5 - (x0*x1 - Power(x1, 2) + y0*y1 - 
                            Power(y1, 2))/(2.*(Power(x0, 2) - 2*x0*x1 + 
                                Power(x1, 2) + Power(y0, 2) - 2*y0*y1 + 
                                Power(y1, 2)))))/(Sqrt(Power(x0, 2) + 
                      Power(y0, 2))*(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0, 2) - 2*y0*y1 + 
                      Power(y1, 2))) + (Sqrt(Power(x0, 2) + 
                      Power(y0, 
                          2))*(-0.5 - (x0*x1 - Power(x1, 2) + y0*y1 - 
                            Power(y1, 2))/(2.*(Power(x0, 2) - 2*x0*x1 + 
                                Power(x1, 2) + Power(y0, 2) - 2*y0*y1 + 
                                Power(y1, 2)))))/(Power(x0, 2) - 2*x0*x1 + 
                  Power(x1, 2) + Power(y0, 2) - 2*y0*y1 + 
                  Power(y1, 2)) + ((-x0 + x1)*(2*Power(-1 + t, 2)*x0 - 
                      2*(-1 + t)*x1 - 
                      2*Power(-1 + t, 2)*x1)*((-1 + t)/
                        2. - (x0*x1 - Power(x1, 2) + y0*y1 - 
                            Power(y1, 2))/(2.*(Power(x0, 2) - 2*x0*x1 + 
                                Power(x1, 2) + Power(y0, 2) - 2*y0*y1 + 
                                Power(y1, 2)))))/(2.*(Power(x0, 2) - 
                      2*x0*x1 + Power(x1, 2) + Power(y0, 2) - 2*y0*y1 + 
                      Power(y1, 2))*
                  Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 2*(-1 + t)*x0*x1 - 
                      2*Power(-1 + t, 2)*x0*x1 + Power(x1, 2) + 
                      2*(-1 + t)*Power(x1, 2) + 
                      Power(-1 + t, 2)*Power(x1, 2) + 
                      Power(-1 + t, 2)*Power(y0, 2) - 2*(-1 + t)*y0*y1 - 
                      2*Power(-1 + t, 2)*y0*y1 + Power(y1, 2) + 
                      2*(-1 + t)*Power(y1, 2) + 
                      Power(-1 + t, 2)*Power(y1, 2))) - ((2*x0 - 2*x1)*(-x0 + 
                        x1)*Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                        2*(-1 + t)*x0*x1 - 2*Power(-1 + t, 2)*x0*x1 + 
                        Power(x1, 2) + 2*(-1 + t)*Power(x1, 2) + 
                        Power(-1 + t, 2)*Power(x1, 2) + 
                        Power(-1 + t, 2)*Power(y0, 2) - 2*(-1 + t)*y0*y1 - 
                        2*Power(-1 + t, 2)*y0*y1 + Power(y1, 2) + 
                        2*(-1 + t)*Power(y1, 2) + 
                        Power(-1 + t, 2)*Power(y1, 2))*((-1 + t)/
                          2. - (x0*x1 - Power(x1, 2) + y0*y1 - 
                              Power(y1, 2))/(2.*(Power(x0, 2) - 2*x0*x1 + 
                                  Power(x1, 2) + Power(y0, 2) - 2*y0*y1 + 
                                  Power(y1, 2)))))/
                Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + Power(y0, 2) - 
                  2*y0*y1 + Power(y1, 2), 
                2) - (Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 2*(-1 + t)*x0*x1 - 
                      2*Power(-1 + t, 2)*x0*x1 + Power(x1, 2) + 
                      2*(-1 + t)*Power(x1, 2) + 
                      Power(-1 + t, 2)*Power(x1, 2) + 
                      Power(-1 + t, 2)*Power(y0, 2) - 2*(-1 + t)*y0*y1 - 
                      2*Power(-1 + t, 2)*y0*y1 + Power(y1, 2) + 
                      2*(-1 + t)*Power(y1, 2) + 
                      Power(-1 + t, 2)*Power(y1, 2))*((-1 + t)/
                        2. - (x0*x1 - Power(x1, 2) + y0*y1 - 
                            Power(y1, 2))/(2.*(Power(x0, 2) - 2*x0*x1 + 
                                Power(x1, 2) + Power(y0, 2) - 2*y0*y1 + 
                                Power(y1, 2)))))/(Power(x0, 2) - 2*x0*x1 + 
                  Power(x1, 2) + Power(y0, 2) - 2*y0*y1 + 
                  Power(y1, 2)) - ((-x0 + x1)*
                  Power(-(x1*y0) + x0*y1, 
                    2)*((2*x0)/
                          Sqrt(Power(x0, 2) + 
                            Power(y0, 
                                2)) - ((2*x0 - 2*x1)*(-Power(x0, 2) + x0*x1 - 
                                  Power(y0, 2) + y0*y1))/
                          Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0, 2) - 2*y0*y1 + Power(y1, 2), 
                          1.5) + (2*(-2*x0 + x1))/
                          Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0, 2) - 2*y0*y1 + Power(y1, 2))))/(2.*
                  Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0, 2) - 2*y0*y1 + Power(y1, 2), 
                    2.5)*(2*
                        Sqrt(Power(x0, 2) + 
                            Power(y0, 
                                2)) + (2*(-Power(x0, 2) + x0*x1 - 
                                  Power(y0, 2) + y0*y1))/
                          Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0, 2) - 2*y0*y1 + 
                            Power(y1, 2)))) + ((-x0 + x1)*
                  Power(-(x1*y0) + x0*y1, 
                    2)*((2*(2*(-1 + t)*x0 - x1 - 2*(-1 + t)*x1))/
                          Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0, 2) - 2*y0*y1 + 
                            Power(y1, 
                                2)) - ((2*x0 - 2*x1)*((-1 + t)*Power(x0, 2) - 
                                  x0*x1 - 2*(-1 + t)*x0*x1 + 
                                  Power(x1, 2) + (-1 + t)*
                                    Power(x1, 2) + (-1 + t)*Power(y0, 2) - 
                                  y0*y1 - 2*(-1 + t)*y0*y1 + 
                                  Power(y1, 2) + (-1 + t)*Power(y1, 2)))/
                          Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0, 2) - 2*y0*y1 + Power(y1, 2), 
                          1.5) + (2*Power(-1 + t, 2)*x0 - 2*(-1 + t)*x1 - 
                              2*Power(-1 + t, 2)*x1)/
                          Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                            2*(-1 + t)*x0*x1 - 2*Power(-1 + t, 2)*x0*x1 + 
                            Power(x1, 2) + 2*(-1 + t)*Power(x1, 2) + 
                            Power(-1 + t, 2)*Power(x1, 2) + 
                            Power(-1 + t, 2)*Power(y0, 2) - 
                            2*(-1 + t)*y0*y1 - 2*Power(-1 + t, 2)*y0*y1 + 
                            Power(y1, 2) + 2*(-1 + t)*Power(y1, 2) + 
                            Power(-1 + t, 2)*Power(y1, 2))))/(2.*
                  Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0, 2) - 2*y0*y1 + Power(y1, 2), 
                    2.5)*((2*((-1 + t)*Power(x0, 2) - x0*x1 - 
                                  2*(-1 + t)*x0*x1 + 
                                  Power(x1, 2) + (-1 + t)*
                                    Power(x1, 2) + (-1 + t)*Power(y0, 2) - 
                                  y0*y1 - 2*(-1 + t)*y0*y1 + 
                                  Power(y1, 2) + (-1 + t)*Power(y1, 2)))/
                          Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0, 2) - 2*y0*y1 + Power(y1, 2)) + 
                      2*Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                            2*(-1 + t)*x0*x1 - 2*Power(-1 + t, 2)*x0*x1 + 
                            Power(x1, 2) + 2*(-1 + t)*Power(x1, 2) + 
                            Power(-1 + t, 2)*Power(x1, 2) + 
                            Power(-1 + t, 2)*Power(y0, 2) - 
                            2*(-1 + t)*y0*y1 - 2*Power(-1 + t, 2)*y0*y1 + 
                            Power(y1, 2) + 2*(-1 + t)*Power(y1, 2) + 
                            Power(-1 + t, 2)*Power(y1, 2)))) - ((y0 - 
                      y1)*(x1*y0 - x0*y1)*(-Power(x0, 2) + x0*x1 - 
                      Power(y0, 2) + 
                      y0*y1)*((2*(-2*x0 + 
                                  x1 + ((2*x0 - 2*x1)*
                                        Sqrt(Power(x0, 2) + 
                                        Power(y0, 2)))/(2.*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0, 2) - 
                                        2*y0*y1 + Power(y1, 2))) + (x0*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0, 2) - 
                                        2*y0*y1 + Power(y1, 2)))/
                                      Sqrt(Power(x0, 2) + Power(y0, 2))))/
                          Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0, 2) - 2*y0*y1 + 
                            Power(y1, 
                                2)) - ((2*x0 - 2*x1)*(-Power(x0, 2) + x0*x1 - 
                                  Power(y0, 2) + y0*y1 + 
                                  Sqrt(Power(x0, 2) + Power(y0, 2))*
                                    Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0, 2) - 
                                        2*y0*y1 + Power(y1, 2))))/
                          Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0, 2) - 2*y0*y1 + Power(y1, 2), 1.5)))/(2.*
                  Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0 - y1, 2), 1.5)*
                  Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + Power(y0, 2) - 
                      2*y0*y1 + Power(y1, 2))*(-Power(x0, 2) + x0*x1 - 
                      Power(y0, 2) + y0*y1 + 
                      Sqrt(Power(x0, 2) + Power(y0, 2))*
                        Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0, 2) - 2*y0*y1 + Power(y1, 2)))) + ((y0 - 
                      y1)*(x1*y0 - x0*y1)*(-Power(x0, 2) + x0*x1 - 
                      Power(y0, 2) + 
                      y0*y1)*((2*(-2*x0 + 2*t*x0 + x1 - 
                                  2*t*x1 + ((2*x0 - 4*t*x0 + 
                                        2*Power(t, 2)*x0 + 2*t*x1 - 
                                        2*Power(t, 2)*x1)*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0, 2) - 
                                        2*y0*y1 + Power(y1, 2)))/(2.*
                                        Sqrt(Power(x0, 2) - 
                                        2*t*Power(x0, 2) + 
                                        Power(t, 2)*Power(x0, 2) + 
                                        2*t*x0*x1 - 2*Power(t, 2)*x0*x1 + 
                                        Power(t, 2)*Power(x1, 2) + 
                                        Power(y0, 2) - 2*t*Power(y0, 2) + 
                                        Power(t, 2)*Power(y0, 2) + 
                                        2*t*y0*y1 - 2*Power(t, 2)*y0*y1 + 
                                        Power(t, 2)*Power(y1, 2))) + ((2*x0 - 
                                        2*x1)*
                                        Sqrt(Power(x0, 2) - 
                                        2*t*Power(x0, 2) + 
                                        Power(t, 2)*Power(x0, 2) + 
                                        2*t*x0*x1 - 2*Power(t, 2)*x0*x1 + 
                                        Power(t, 2)*Power(x1, 2) + 
                                        Power(y0, 2) - 2*t*Power(y0, 2) + 
                                        Power(t, 2)*Power(y0, 2) + 
                                        2*t*y0*y1 - 2*Power(t, 2)*y0*y1 + 
                                        Power(t, 2)*Power(y1, 2)))/(2.*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0, 2) - 
                                        2*y0*y1 + Power(y1, 2)))))/
                          Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0, 2) - 2*y0*y1 + 
                            Power(y1, 
                                2)) - ((2*x0 - 2*x1)*(-Power(x0, 2) + 
                                  t*Power(x0, 2) + x0*x1 - 2*t*x0*x1 + 
                                  t*Power(x1, 2) - Power(y0, 2) + 
                                  t*Power(y0, 2) + y0*y1 - 2*t*y0*y1 + 
                                  t*Power(y1, 2) + 
                                  Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0, 2) - 
                                        2*y0*y1 + Power(y1, 2))*
                                    Sqrt(Power(x0, 2) - 2*t*Power(x0, 2) + 
                                        Power(t, 2)*Power(x0, 2) + 
                                        2*t*x0*x1 - 2*Power(t, 2)*x0*x1 + 
                                        Power(t, 2)*Power(x1, 2) + 
                                        Power(y0, 2) - 2*t*Power(y0, 2) + 
                                        Power(t, 2)*Power(y0, 2) + 
                                        2*t*y0*y1 - 2*Power(t, 2)*y0*y1 + 
                                        Power(t, 2)*Power(y1, 2))))/
                          Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0, 2) - 2*y0*y1 + Power(y1, 2), 1.5)))/(2.*
                  Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0 - y1, 2), 1.5)*
                  Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + Power(y0, 2) - 
                      2*y0*y1 + Power(y1, 2))*(-Power(x0, 2) + 
                      t*Power(x0, 2) + x0*x1 - 2*t*x0*x1 + t*Power(x1, 2) - 
                      Power(y0, 2) + t*Power(y0, 2) + y0*y1 - 2*t*y0*y1 + 
                      t*Power(y1, 2) + 
                      Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0, 2) - 2*y0*y1 + Power(y1, 2))*
                        Sqrt(Power(x0, 2) - 2*t*Power(x0, 2) + 
                            Power(t, 2)*Power(x0, 2) + 2*t*x0*x1 - 
                            2*Power(t, 2)*x0*x1 + Power(t, 2)*Power(x1, 2) + 
                            Power(y0, 2) - 2*t*Power(y0, 2) + 
                            Power(t, 2)*Power(y0, 2) + 2*t*y0*y1 - 
                            2*Power(t, 2)*y0*y1 + 
                            Power(t, 2)*Power(y1, 2)))) + (t*(y0 - 
                      y1)*(x1*y0 - x0*y1)*
                  Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + Power(y0, 2) - 
                      2*y0*y1 + 
                      Power(y1, 
                          2))*((2*(-2*x0 + 2*t*x0 + x1 - 
                                  2*t*x1 + ((2*x0 - 4*t*x0 + 
                                        2*Power(t, 2)*x0 + 2*t*x1 - 
                                        2*Power(t, 2)*x1)*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0, 2) - 
                                        2*y0*y1 + Power(y1, 2)))/(2.*
                                        Sqrt(Power(x0, 2) - 
                                        2*t*Power(x0, 2) + 
                                        Power(t, 2)*Power(x0, 2) + 
                                        2*t*x0*x1 - 2*Power(t, 2)*x0*x1 + 
                                        Power(t, 2)*Power(x1, 2) + 
                                        Power(y0, 2) - 2*t*Power(y0, 2) + 
                                        Power(t, 2)*Power(y0, 2) + 
                                        2*t*y0*y1 - 2*Power(t, 2)*y0*y1 + 
                                        Power(t, 2)*Power(y1, 2))) + ((2*x0 - 
                                        2*x1)*
                                        Sqrt(Power(x0, 2) - 
                                        2*t*Power(x0, 2) + 
                                        Power(t, 2)*Power(x0, 2) + 
                                        2*t*x0*x1 - 2*Power(t, 2)*x0*x1 + 
                                        Power(t, 2)*Power(x1, 2) + 
                                        Power(y0, 2) - 2*t*Power(y0, 2) + 
                                        Power(t, 2)*Power(y0, 2) + 
                                        2*t*y0*y1 - 2*Power(t, 2)*y0*y1 + 
                                        Power(t, 2)*Power(y1, 2)))/(2.*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0, 2) - 
                                        2*y0*y1 + Power(y1, 2)))))/
                          Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0, 2) - 2*y0*y1 + 
                            Power(y1, 
                                2)) - ((2*x0 - 2*x1)*(-Power(x0, 2) + 
                                  t*Power(x0, 2) + x0*x1 - 2*t*x0*x1 + 
                                  t*Power(x1, 2) - Power(y0, 2) + 
                                  t*Power(y0, 2) + y0*y1 - 2*t*y0*y1 + 
                                  t*Power(y1, 2) + 
                                  Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0, 2) - 
                                        2*y0*y1 + Power(y1, 2))*
                                    Sqrt(Power(x0, 2) - 2*t*Power(x0, 2) + 
                                        Power(t, 2)*Power(x0, 2) + 
                                        2*t*x0*x1 - 2*Power(t, 2)*x0*x1 + 
                                        Power(t, 2)*Power(x1, 2) + 
                                        Power(y0, 2) - 2*t*Power(y0, 2) + 
                                        Power(t, 2)*Power(y0, 2) + 
                                        2*t*y0*y1 - 2*Power(t, 2)*y0*y1 + 
                                        Power(t, 2)*Power(y1, 2))))/
                          Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0, 2) - 2*y0*y1 + Power(y1, 2), 1.5)))/(2.*
                  Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0 - y1, 2), 
                    1.5)*(-Power(x0, 2) + t*Power(x0, 2) + x0*x1 - 
                      2*t*x0*x1 + t*Power(x1, 2) - Power(y0, 2) + 
                      t*Power(y0, 2) + y0*y1 - 2*t*y0*y1 + t*Power(y1, 2) + 
                      Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0, 2) - 2*y0*y1 + Power(y1, 2))*
                        Sqrt(Power(x0, 2) - 2*t*Power(x0, 2) + 
                            Power(t, 2)*Power(x0, 2) + 2*t*x0*x1 - 
                            2*Power(t, 2)*x0*x1 + Power(t, 2)*Power(x1, 2) + 
                            Power(y0, 2) - 2*t*Power(y0, 2) + 
                            Power(t, 2)*Power(y0, 2) + 2*t*y0*y1 - 
                            2*Power(t, 2)*y0*y1 + 
                            Power(t, 2)*Power(y1, 2)))) - ((y0 - y1)*(x1*y0 - 
                      x0*y1)*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + 
                      y0*y1)*((2*(-2*x0 + 
                                  x1) + ((2*x0 - 2*x1)*
                                    Sqrt(Power(x0, 2) + Power(y0, 2)))/
                                Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0, 2) - 2*y0*y1 + 
                                  Power(y1, 2)) + (2*x0*
                                    Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0, 2) - 
                                        2*y0*y1 + Power(y1, 2)))/
                                Sqrt(Power(x0, 2) + 
                                  Power(y0, 2)))/(2*(-Power(x0, 2) + x0*x1 - 
                                  Power(y0, 2) + y0*y1) + 
                            2*Sqrt(Power(x0, 2) + Power(y0, 2))*
                              Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0, 2) - 2*y0*y1 + 
                                  Power(y1, 2))) - (Sqrt(Power(x0, 2) - 
                                2*x0*x1 + Power(x1, 2) + Power(y0, 2) - 
                                2*y0*y1 + 
                                Power(y1, 
                                    2))*((2*(-2*x0 + 
                                        x1 + ((2*x0 - 2*x1)*
                                        Sqrt(Power(x0, 2) + 
                                        Power(y0, 2)))/(2.*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0, 2) - 
                                        2*y0*y1 + Power(y1, 2))) + (x0*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0, 2) - 
                                        2*y0*y1 + Power(y1, 2)))/
                                        Sqrt(Power(x0, 2) + Power(y0, 2))))/
                                    Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                      Power(x1, 2) + Power(y0, 2) - 2*y0*y1 + 
                                      Power(y1, 
                                        2)) - ((2*x0 - 2*x1)*(-Power(x0, 2) + 
                                        x0*x1 - Power(y0, 2) + y0*y1 + 
                                        Sqrt(Power(x0, 2) + Power(y0, 2))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0, 2) - 
                                        2*y0*y1 + Power(y1, 2))))/
                                    Power(Power(x0, 2) - 2*x0*x1 + 
                                      Power(x1, 2) + Power(y0, 2) - 2*y0*y1 + 
                                      Power(y1, 2), 1.5)))/(2.*(-Power(x0, 
                                    2) + x0*x1 - Power(y0, 2) + y0*y1 + 
                                Sqrt(Power(x0, 2) + Power(y0, 2))*
                                  Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                      Power(x1, 2) + Power(y0, 2) - 2*y0*y1 + 
                                      Power(y1, 2))))))/(Power(Power(x0, 2) - 
                      2*x0*x1 + Power(x1, 2) + Power(y0 - y1, 2), 
                    1.5)*(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0, 2) - 2*y0*y1 + Power(y1, 2))) + ((y0 - 
                      y1)*(x1*y0 - x0*y1)*(-Power(x0, 2) + x0*x1 - 
                      Power(y0, 2) + 
                      y0*y1)*((2*(-2*x0 + 2*t*x0 + x1 - 
                                  2*t*x1) + ((2*x0 - 4*t*x0 + 
                                        2*Power(t, 2)*x0 + 2*t*x1 - 
                                        2*Power(t, 2)*x1)*
                                    Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0, 2) - 
                                        2*y0*y1 + Power(y1, 2)))/
                                Sqrt(Power(x0, 2) - 2*t*Power(x0, 2) + 
                                  Power(t, 2)*Power(x0, 2) + 2*t*x0*x1 - 
                                  2*Power(t, 2)*x0*x1 + 
                                  Power(t, 2)*Power(x1, 2) + Power(y0, 2) - 
                                  2*t*Power(y0, 2) + 
                                  Power(t, 2)*Power(y0, 2) + 2*t*y0*y1 - 
                                  2*Power(t, 2)*y0*y1 + 
                                  Power(t, 2)*Power(y1, 2)) + ((2*x0 - 2*x1)*
                                    Sqrt(Power(x0, 2) - 2*t*Power(x0, 2) + 
                                        Power(t, 2)*Power(x0, 2) + 
                                        2*t*x0*x1 - 2*Power(t, 2)*x0*x1 + 
                                        Power(t, 2)*Power(x1, 2) + 
                                        Power(y0, 2) - 2*t*Power(y0, 2) + 
                                        Power(t, 2)*Power(y0, 2) + 
                                        2*t*y0*y1 - 2*Power(t, 2)*y0*y1 + 
                                        Power(t, 2)*Power(y1, 2)))/
                                Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0, 2) - 2*y0*y1 + 
                                  Power(y1, 2)))/(2*(-Power(x0, 2) + 
                                  t*Power(x0, 2) + x0*x1 - 2*t*x0*x1 + 
                                  t*Power(x1, 2) - Power(y0, 2) + 
                                  t*Power(y0, 2) + y0*y1 - 2*t*y0*y1 + 
                                  t*Power(y1, 2)) + 
                            2*Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0, 2) - 2*y0*y1 + Power(y1, 2))*
                              Sqrt(Power(x0, 2) - 2*t*Power(x0, 2) + 
                                  Power(t, 2)*Power(x0, 2) + 2*t*x0*x1 - 
                                  2*Power(t, 2)*x0*x1 + 
                                  Power(t, 2)*Power(x1, 2) + Power(y0, 2) - 
                                  2*t*Power(y0, 2) + 
                                  Power(t, 2)*Power(y0, 2) + 2*t*y0*y1 - 
                                  2*Power(t, 2)*y0*y1 + 
                                  Power(t, 2)*Power(y1, 2))) - (Sqrt(Power(x0,
                                     2) - 2*x0*x1 + Power(x1, 2) + 
                                Power(y0, 2) - 2*y0*y1 + 
                                Power(y1, 
                                    2))*((2*(-2*x0 + 2*t*x0 + x1 - 
                                        2*t*x1 + ((2*x0 - 4*t*x0 + 
                                        2*Power(t, 2)*x0 + 2*t*x1 - 
                                        2*Power(t, 2)*x1)*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0, 2) - 
                                        2*y0*y1 + Power(y1, 2)))/(2.*
                                        Sqrt(Power(x0, 2) - 
                                        2*t*Power(x0, 2) + 
                                        Power(t, 2)*Power(x0, 2) + 
                                        2*t*x0*x1 - 2*Power(t, 2)*x0*x1 + 
                                        Power(t, 2)*Power(x1, 2) + 
                                        Power(y0, 2) - 2*t*Power(y0, 2) + 
                                        Power(t, 2)*Power(y0, 2) + 
                                        2*t*y0*y1 - 2*Power(t, 2)*y0*y1 + 
                                        Power(t, 2)*Power(y1, 2))) + ((2*x0 - 
                                        2*x1)*Sqrt(Power(x0, 2) - 
                                        2*t*Power(x0, 2) + 
                                        Power(t, 2)*Power(x0, 2) + 
                                        2*t*x0*x1 - 2*Power(t, 2)*x0*x1 + 
                                        Power(t, 2)*Power(x1, 2) + 
                                        Power(y0, 2) - 2*t*Power(y0, 2) + 
                                        Power(t, 2)*Power(y0, 2) + 
                                        2*t*y0*y1 - 2*Power(t, 2)*y0*y1 + 
                                        Power(t, 2)*Power(y1, 2)))/(2.*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0, 2) - 
                                        2*y0*y1 + Power(y1, 2)))))/
                                    Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                      Power(x1, 2) + Power(y0, 2) - 2*y0*y1 + 
                                      Power(y1, 
                                        2)) - ((2*x0 - 2*x1)*(-Power(x0, 2) + 
                                        t*Power(x0, 2) + x0*x1 - 2*t*x0*x1 + 
                                        t*Power(x1, 2) - Power(y0, 2) + 
                                        t*Power(y0, 2) + y0*y1 - 2*t*y0*y1 + 
                                        t*Power(y1, 2) + 
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0, 2) - 
                                        2*y0*y1 + Power(y1, 2))*
                                        Sqrt(Power(x0, 2) - 
                                        2*t*Power(x0, 2) + 
                                        Power(t, 2)*Power(x0, 2) + 
                                        2*t*x0*x1 - 2*Power(t, 2)*x0*x1 + 
                                        Power(t, 2)*Power(x1, 2) + 
                                        Power(y0, 2) - 2*t*Power(y0, 2) + 
                                        Power(t, 2)*Power(y0, 2) + 
                                        2*t*y0*y1 - 2*Power(t, 2)*y0*y1 + 
                                        Power(t, 2)*Power(y1, 2))))/
                                    Power(Power(x0, 2) - 2*x0*x1 + 
                                      Power(x1, 2) + Power(y0, 2) - 2*y0*y1 + 
                                      Power(y1, 2), 1.5)))/(2.*(-Power(x0, 
                                    2) + t*Power(x0, 2) + x0*x1 - 2*t*x0*x1 + 
                                t*Power(x1, 2) - Power(y0, 2) + 
                                t*Power(y0, 2) + y0*y1 - 2*t*y0*y1 + 
                                t*Power(y1, 2) + 
                                Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                      Power(y0, 2) - 2*y0*y1 + Power(y1, 2))*
                                  Sqrt(Power(x0, 2) - 2*t*Power(x0, 2) + 
                                      Power(t, 2)*Power(x0, 2) + 2*t*x0*x1 - 
                                      2*Power(t, 2)*x0*x1 + 
                                      Power(t, 2)*Power(x1, 2) + 
                                      Power(y0, 2) - 2*t*Power(y0, 2) + 
                                      Power(t, 2)*Power(y0, 2) + 2*t*y0*y1 - 
                                      2*Power(t, 2)*y0*y1 + 
                                      Power(t, 2)*
                                        Power(y1, 2))))))/(Power(Power(x0, 
                          2) - 2*x0*x1 + Power(x1, 2) + Power(y0 - y1, 2), 
                    1.5)*(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0, 2) - 2*y0*y1 + Power(y1, 2))) + (t*(y0 - y1)*
                    y1*Log((2*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + 
                                  Sqrt(Power(x0, 2) + Power(y0, 2))*
                                    Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                  y0*y1))/
                          Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0 - y1, 2))))/
                Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                  Power(y0 - y1, 2), 
                1.5) - (3*t*(2*x0 - 2*x1)*(y0 - y1)*(-(x1*y0) + x0*y1)*
                  Log((2*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + 
                                Sqrt(Power(x0, 2) + Power(y0, 2))*
                                  Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                      Power(x1, 2) + Power(y0 - y1, 2)) + 
                                y0*y1))/
                        Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                          Power(y0 - y1, 2))))/(2.*
                  Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0 - y1, 2), 2.5)) + (5*(2*x0 - 2*x1)*(-x0 + x1)*
                  Power(-(x1*y0) + x0*y1, 2)*
                  Log(2*Sqrt(Power(x0, 2) + 
                            Power(y0, 
                                2)) + (2*(-Power(x0, 2) + x0*x1 - 
                                  Power(y0, 2) + y0*y1))/
                          Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0, 2) - 2*y0*y1 + Power(y1, 2))))/(4.*
                  Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0, 2) - 2*y0*y1 + Power(y1, 2), 
                    3.5)) - ((-x0 + x1)*y1*(-(x1*y0) + x0*y1)*
                    Log(2*Sqrt(Power(x0, 2) + 
                              Power(y0, 
                                  2)) + (2*(-Power(x0, 2) + x0*x1 - 
                                    Power(y0, 2) + y0*y1))/
                            Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                              Power(y0, 2) - 2*y0*y1 + Power(y1, 2))))/
                Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + Power(y0, 2) - 
                  2*y0*y1 + Power(y1, 2), 
                2.5) + (Power(-(x1*y0) + x0*y1, 2)*
                  Log(2*Sqrt(Power(x0, 2) + 
                            Power(y0, 
                                2)) + (2*(-Power(x0, 2) + x0*x1 - 
                                  Power(y0, 2) + y0*y1))/
                          Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0, 2) - 2*y0*y1 + Power(y1, 2))))/(2.*
                  Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0, 2) - 2*y0*y1 + Power(y1, 2), 
                    2.5)) + ((2*x0 - 2*x1)*(y0 - y1)*(x1*y0 - 
                      x0*y1)*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + y0*y1)*
                  Log((2*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + y0*y1 + 
                                Sqrt(Power(x0, 2) + Power(y0, 2))*
                                  Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                      Power(x1, 2) + Power(y0, 2) - 2*y0*y1 + 
                                      Power(y1, 2))))/
                        Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                          Power(y0, 2) - 2*y0*y1 + 
                          Power(y1, 2))))/(Power(Power(x0, 2) - 2*x0*x1 + 
                      Power(x1, 2) + Power(y0 - y1, 2), 1.5)*
                  Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0, 2) - 2*y0*y1 + Power(y1, 2), 
                    2)) - ((-2*x0 + x1)*(y0 - y1)*(x1*y0 - x0*y1)*
                  Log((2*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + y0*y1 + 
                                Sqrt(Power(x0, 2) + Power(y0, 2))*
                                  Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                      Power(x1, 2) + Power(y0, 2) - 2*y0*y1 + 
                                      Power(y1, 2))))/
                        Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                          Power(y0, 2) - 2*y0*y1 + 
                          Power(y1, 2))))/(Power(Power(x0, 2) - 2*x0*x1 + 
                      Power(x1, 2) + Power(y0 - y1, 2), 
                    1.5)*(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0, 2) - 2*y0*y1 + Power(y1, 2))) + ((y0 - y1)*
                  y1*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + y0*y1)*
                  Log((2*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + y0*y1 + 
                                Sqrt(Power(x0, 2) + Power(y0, 2))*
                                  Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                      Power(x1, 2) + Power(y0, 2) - 2*y0*y1 + 
                                      Power(y1, 2))))/
                        Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                          Power(y0, 2) - 2*y0*y1 + 
                          Power(y1, 2))))/(Power(Power(x0, 2) - 2*x0*x1 + 
                      Power(x1, 2) + Power(y0 - y1, 2), 
                    1.5)*(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0, 2) - 2*y0*y1 + Power(y1, 2))) + (3*(2*x0 - 
                      2*x1)*(y0 - y1)*(x1*y0 - x0*y1)*(-Power(x0, 2) + 
                      x0*x1 - Power(y0, 2) + y0*y1)*
                  Log((2*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + y0*y1 + 
                                Sqrt(Power(x0, 2) + Power(y0, 2))*
                                  Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                      Power(x1, 2) + Power(y0, 2) - 2*y0*y1 + 
                                      Power(y1, 2))))/
                        Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                          Power(y0, 2) - 2*y0*y1 + Power(y1, 2))))/(2.*
                  Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0 - y1, 2), 
                    2.5)*(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0, 2) - 2*y0*y1 + Power(y1, 2))) + ((2*x0 - 
                      2*x1)*(y0 - y1)*(x1*y0 - x0*y1)*(-Power(x0, 2) + 
                      x0*x1 - Power(y0, 2) + 
                      y0*y1)*(-Log((2*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + 
                                      y0*y1 + 
                                      Sqrt(Power(x0, 2) + Power(y0, 2))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0, 2) - 
                                        2*y0*y1 + Power(y1, 2))))/
                              Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                Power(y0, 2) - 2*y0*y1 + Power(y1, 2))) + 
                      Log(2*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + y0*y1) + 
                            2*Sqrt(Power(x0, 2) + Power(y0, 2))*
                              Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0, 2) - 2*y0*y1 + 
                                  Power(y1, 2)))))/(Power(Power(x0, 2) - 
                      2*x0*x1 + Power(x1, 2) + Power(y0 - y1, 2), 1.5)*
                  Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0, 2) - 2*y0*y1 + Power(y1, 2), 
                    2)) - ((-2*x0 + x1)*(y0 - y1)*(x1*y0 - 
                      x0*y1)*(-Log((2*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + 
                                      y0*y1 + 
                                      Sqrt(Power(x0, 2) + Power(y0, 2))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0, 2) - 
                                        2*y0*y1 + Power(y1, 2))))/
                              Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                Power(y0, 2) - 2*y0*y1 + Power(y1, 2))) + 
                      Log(2*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + y0*y1) + 
                            2*Sqrt(Power(x0, 2) + Power(y0, 2))*
                              Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0, 2) - 2*y0*y1 + 
                                  Power(y1, 2)))))/(Power(Power(x0, 2) - 
                      2*x0*x1 + Power(x1, 2) + Power(y0 - y1, 2), 
                    1.5)*(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0, 2) - 2*y0*y1 + Power(y1, 2))) + ((y0 - y1)*
                  y1*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + 
                      y0*y1)*(-Log((2*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + 
                                      y0*y1 + 
                                      Sqrt(Power(x0, 2) + Power(y0, 2))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0, 2) - 
                                        2*y0*y1 + Power(y1, 2))))/
                              Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                Power(y0, 2) - 2*y0*y1 + Power(y1, 2))) + 
                      Log(2*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + y0*y1) + 
                            2*Sqrt(Power(x0, 2) + Power(y0, 2))*
                              Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0, 2) - 2*y0*y1 + 
                                  Power(y1, 2)))))/(Power(Power(x0, 2) - 
                      2*x0*x1 + Power(x1, 2) + Power(y0 - y1, 2), 
                    1.5)*(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0, 2) - 2*y0*y1 + Power(y1, 2))) + (3*(2*x0 - 
                      2*x1)*(y0 - y1)*(x1*y0 - x0*y1)*(-Power(x0, 2) + 
                      x0*x1 - Power(y0, 2) + 
                      y0*y1)*(-Log((2*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + 
                                      y0*y1 + 
                                      Sqrt(Power(x0, 2) + Power(y0, 2))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0, 2) - 
                                        2*y0*y1 + Power(y1, 2))))/
                              Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                Power(y0, 2) - 2*y0*y1 + Power(y1, 2))) + 
                      Log(2*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + y0*y1) + 
                            2*Sqrt(Power(x0, 2) + Power(y0, 2))*
                              Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0, 2) - 2*y0*y1 + 
                                  Power(y1, 2)))))/(2.*
                  Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0 - y1, 2), 
                    2.5)*(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0, 2) - 2*y0*y1 + Power(y1, 2))) - (5*(2*x0 - 
                      2*x1)*(-x0 + x1)*Power(-(x1*y0) + x0*y1, 2)*
                  Log((2*((-1 + t)*Power(x0, 2) - x0*x1 - 2*(-1 + t)*x0*x1 + 
                                  Power(x1, 2) + (-1 + t)*
                                    Power(x1, 2) + (-1 + t)*Power(y0, 2) - 
                                  y0*y1 - 2*(-1 + t)*y0*y1 + 
                                  Power(y1, 2) + (-1 + t)*Power(y1, 2)))/
                          Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0, 2) - 2*y0*y1 + Power(y1, 2)) + 
                      2*Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                            2*(-1 + t)*x0*x1 - 2*Power(-1 + t, 2)*x0*x1 + 
                            Power(x1, 2) + 2*(-1 + t)*Power(x1, 2) + 
                            Power(-1 + t, 2)*Power(x1, 2) + 
                            Power(-1 + t, 2)*Power(y0, 2) - 
                            2*(-1 + t)*y0*y1 - 2*Power(-1 + t, 2)*y0*y1 + 
                            Power(y1, 2) + 2*(-1 + t)*Power(y1, 2) + 
                            Power(-1 + t, 2)*Power(y1, 2))))/(4.*
                  Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0, 2) - 2*y0*y1 + Power(y1, 2), 
                    3.5)) + ((-x0 + x1)*y1*(-(x1*y0) + x0*y1)*
                    Log((2*((-1 + t)*Power(x0, 2) - x0*x1 - 
                                    2*(-1 + t)*x0*x1 + 
                                    Power(x1, 2) + (-1 + t)*
                                      Power(x1, 2) + (-1 + t)*Power(y0, 2) - 
                                    y0*y1 - 2*(-1 + t)*y0*y1 + 
                                    Power(y1, 2) + (-1 + t)*Power(y1, 2)))/
                            Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                              Power(y0, 2) - 2*y0*y1 + Power(y1, 2)) + 
                        2*Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                              2*(-1 + t)*x0*x1 - 2*Power(-1 + t, 2)*x0*x1 + 
                              Power(x1, 2) + 2*(-1 + t)*Power(x1, 2) + 
                              Power(-1 + t, 2)*Power(x1, 2) + 
                              Power(-1 + t, 2)*Power(y0, 2) - 
                              2*(-1 + t)*y0*y1 - 2*Power(-1 + t, 2)*y0*y1 + 
                              Power(y1, 2) + 2*(-1 + t)*Power(y1, 2) + 
                              Power(-1 + t, 2)*Power(y1, 2))))/
                Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + Power(y0, 2) - 
                  2*y0*y1 + Power(y1, 2), 
                2.5) - (Power(-(x1*y0) + x0*y1, 2)*
                  Log((2*((-1 + t)*Power(x0, 2) - x0*x1 - 2*(-1 + t)*x0*x1 + 
                                  Power(x1, 2) + (-1 + t)*
                                    Power(x1, 2) + (-1 + t)*Power(y0, 2) - 
                                  y0*y1 - 2*(-1 + t)*y0*y1 + 
                                  Power(y1, 2) + (-1 + t)*Power(y1, 2)))/
                          Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0, 2) - 2*y0*y1 + Power(y1, 2)) + 
                      2*Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                            2*(-1 + t)*x0*x1 - 2*Power(-1 + t, 2)*x0*x1 + 
                            Power(x1, 2) + 2*(-1 + t)*Power(x1, 2) + 
                            Power(-1 + t, 2)*Power(x1, 2) + 
                            Power(-1 + t, 2)*Power(y0, 2) - 
                            2*(-1 + t)*y0*y1 - 2*Power(-1 + t, 2)*y0*y1 + 
                            Power(y1, 2) + 2*(-1 + t)*Power(y1, 2) + 
                            Power(-1 + t, 2)*Power(y1, 2))))/(2.*
                  Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0, 2) - 2*y0*y1 + Power(y1, 2), 
                    2.5)) - (t*(y0 - y1)*y1*
                    Log((2*(-Power(x0, 2) + t*Power(x0, 2) + x0*x1 - 
                                  2*t*x0*x1 + t*Power(x1, 2) - Power(y0, 2) + 
                                  t*Power(y0, 2) + y0*y1 - 2*t*y0*y1 + 
                                  t*Power(y1, 2) + 
                                  Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0, 2) - 
                                        2*y0*y1 + Power(y1, 2))*
                                    Sqrt(Power(x0, 2) - 2*t*Power(x0, 2) + 
                                        Power(t, 2)*Power(x0, 2) + 
                                        2*t*x0*x1 - 2*Power(t, 2)*x0*x1 + 
                                        Power(t, 2)*Power(x1, 2) + 
                                        Power(y0, 2) - 2*t*Power(y0, 2) + 
                                        Power(t, 2)*Power(y0, 2) + 
                                        2*t*y0*y1 - 2*Power(t, 2)*y0*y1 + 
                                        Power(t, 2)*Power(y1, 2))))/
                          Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0, 2) - 2*y0*y1 + Power(y1, 2))))/
                Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                  Power(y0 - y1, 2), 
                1.5) - (3*t*(2*x0 - 2*x1)*(y0 - y1)*(x1*y0 - x0*y1)*
                  Log((2*(-Power(x0, 2) + t*Power(x0, 2) + x0*x1 - 
                                2*t*x0*x1 + t*Power(x1, 2) - Power(y0, 2) + 
                                t*Power(y0, 2) + y0*y1 - 2*t*y0*y1 + 
                                t*Power(y1, 2) + 
                                Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                      Power(y0, 2) - 2*y0*y1 + Power(y1, 2))*
                                  Sqrt(Power(x0, 2) - 2*t*Power(x0, 2) + 
                                      Power(t, 2)*Power(x0, 2) + 2*t*x0*x1 - 
                                      2*Power(t, 2)*x0*x1 + 
                                      Power(t, 2)*Power(x1, 2) + 
                                      Power(y0, 2) - 2*t*Power(y0, 2) + 
                                      Power(t, 2)*Power(y0, 2) + 2*t*y0*y1 - 
                                      2*Power(t, 2)*y0*y1 + 
                                      Power(t, 2)*Power(y1, 2))))/
                        Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                          Power(y0, 2) - 2*y0*y1 + Power(y1, 2))))/(2.*
                  Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0 - y1, 2), 
                    2.5)) - ((2*x0 - 2*x1)*(y0 - y1)*(x1*y0 - 
                      x0*y1)*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + y0*y1)*
                  Log((2*(-Power(x0, 2) + t*Power(x0, 2) + x0*x1 - 
                                2*t*x0*x1 + t*Power(x1, 2) - Power(y0, 2) + 
                                t*Power(y0, 2) + y0*y1 - 2*t*y0*y1 + 
                                t*Power(y1, 2) + 
                                Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                      Power(y0, 2) - 2*y0*y1 + Power(y1, 2))*
                                  Sqrt(Power(x0, 2) - 2*t*Power(x0, 2) + 
                                      Power(t, 2)*Power(x0, 2) + 2*t*x0*x1 - 
                                      2*Power(t, 2)*x0*x1 + 
                                      Power(t, 2)*Power(x1, 2) + 
                                      Power(y0, 2) - 2*t*Power(y0, 2) + 
                                      Power(t, 2)*Power(y0, 2) + 2*t*y0*y1 - 
                                      2*Power(t, 2)*y0*y1 + 
                                      Power(t, 2)*Power(y1, 2))))/
                        Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                          Power(y0, 2) - 2*y0*y1 + 
                          Power(y1, 2))))/(Power(Power(x0, 2) - 2*x0*x1 + 
                      Power(x1, 2) + Power(y0 - y1, 2), 1.5)*
                  Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0, 2) - 2*y0*y1 + Power(y1, 2), 
                    2)) + ((-2*x0 + x1)*(y0 - y1)*(x1*y0 - x0*y1)*
                  Log((2*(-Power(x0, 2) + t*Power(x0, 2) + x0*x1 - 
                                2*t*x0*x1 + t*Power(x1, 2) - Power(y0, 2) + 
                                t*Power(y0, 2) + y0*y1 - 2*t*y0*y1 + 
                                t*Power(y1, 2) + 
                                Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                      Power(y0, 2) - 2*y0*y1 + Power(y1, 2))*
                                  Sqrt(Power(x0, 2) - 2*t*Power(x0, 2) + 
                                      Power(t, 2)*Power(x0, 2) + 2*t*x0*x1 - 
                                      2*Power(t, 2)*x0*x1 + 
                                      Power(t, 2)*Power(x1, 2) + 
                                      Power(y0, 2) - 2*t*Power(y0, 2) + 
                                      Power(t, 2)*Power(y0, 2) + 2*t*y0*y1 - 
                                      2*Power(t, 2)*y0*y1 + 
                                      Power(t, 2)*Power(y1, 2))))/
                        Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                          Power(y0, 2) - 2*y0*y1 + 
                          Power(y1, 2))))/(Power(Power(x0, 2) - 2*x0*x1 + 
                      Power(x1, 2) + Power(y0 - y1, 2), 
                    1.5)*(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0, 2) - 2*y0*y1 + Power(y1, 2))) - ((y0 - y1)*
                  y1*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + y0*y1)*
                  Log((2*(-Power(x0, 2) + t*Power(x0, 2) + x0*x1 - 
                                2*t*x0*x1 + t*Power(x1, 2) - Power(y0, 2) + 
                                t*Power(y0, 2) + y0*y1 - 2*t*y0*y1 + 
                                t*Power(y1, 2) + 
                                Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                      Power(y0, 2) - 2*y0*y1 + Power(y1, 2))*
                                  Sqrt(Power(x0, 2) - 2*t*Power(x0, 2) + 
                                      Power(t, 2)*Power(x0, 2) + 2*t*x0*x1 - 
                                      2*Power(t, 2)*x0*x1 + 
                                      Power(t, 2)*Power(x1, 2) + 
                                      Power(y0, 2) - 2*t*Power(y0, 2) + 
                                      Power(t, 2)*Power(y0, 2) + 2*t*y0*y1 - 
                                      2*Power(t, 2)*y0*y1 + 
                                      Power(t, 2)*Power(y1, 2))))/
                        Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                          Power(y0, 2) - 2*y0*y1 + 
                          Power(y1, 2))))/(Power(Power(x0, 2) - 2*x0*x1 + 
                      Power(x1, 2) + Power(y0 - y1, 2), 
                    1.5)*(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0, 2) - 2*y0*y1 + Power(y1, 2))) - (3*(2*x0 - 
                      2*x1)*(y0 - y1)*(x1*y0 - x0*y1)*(-Power(x0, 2) + 
                      x0*x1 - Power(y0, 2) + y0*y1)*
                  Log((2*(-Power(x0, 2) + t*Power(x0, 2) + x0*x1 - 
                                2*t*x0*x1 + t*Power(x1, 2) - Power(y0, 2) + 
                                t*Power(y0, 2) + y0*y1 - 2*t*y0*y1 + 
                                t*Power(y1, 2) + 
                                Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                      Power(y0, 2) - 2*y0*y1 + Power(y1, 2))*
                                  Sqrt(Power(x0, 2) - 2*t*Power(x0, 2) + 
                                      Power(t, 2)*Power(x0, 2) + 2*t*x0*x1 - 
                                      2*Power(t, 2)*x0*x1 + 
                                      Power(t, 2)*Power(x1, 2) + 
                                      Power(y0, 2) - 2*t*Power(y0, 2) + 
                                      Power(t, 2)*Power(y0, 2) + 2*t*y0*y1 - 
                                      2*Power(t, 2)*y0*y1 + 
                                      Power(t, 2)*Power(y1, 2))))/
                        Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                          Power(y0, 2) - 2*y0*y1 + Power(y1, 2))))/(2.*
                  Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0 - y1, 2), 
                    2.5)*(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0, 2) - 2*y0*y1 + Power(y1, 2))) - ((2*x0 - 
                      2*x1)*(y0 - y1)*(x1*y0 - x0*y1)*(-Power(x0, 2) + 
                      x0*x1 - Power(y0, 2) + 
                      y0*y1)*(-Log((2*(-Power(x0, 2) + t*Power(x0, 2) + 
                                      x0*x1 - 2*t*x0*x1 + t*Power(x1, 2) - 
                                      Power(y0, 2) + t*Power(y0, 2) + y0*y1 - 
                                      2*t*y0*y1 + t*Power(y1, 2) + 
                                      Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0, 2) - 
                                        2*y0*y1 + Power(y1, 2))*
                                        Sqrt(Power(x0, 2) - 
                                        2*t*Power(x0, 2) + 
                                        Power(t, 2)*Power(x0, 2) + 
                                        2*t*x0*x1 - 2*Power(t, 2)*x0*x1 + 
                                        Power(t, 2)*Power(x1, 2) + 
                                        Power(y0, 2) - 2*t*Power(y0, 2) + 
                                        Power(t, 2)*Power(y0, 2) + 
                                        2*t*y0*y1 - 2*Power(t, 2)*y0*y1 + 
                                        Power(t, 2)*Power(y1, 2))))/
                              Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                Power(y0, 2) - 2*y0*y1 + Power(y1, 2))) + 
                      Log(2*(-Power(x0, 2) + t*Power(x0, 2) + x0*x1 - 
                                  2*t*x0*x1 + t*Power(x1, 2) - Power(y0, 2) + 
                                  t*Power(y0, 2) + y0*y1 - 2*t*y0*y1 + 
                                  t*Power(y1, 2)) + 
                            2*Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0, 2) - 2*y0*y1 + Power(y1, 2))*
                              Sqrt(Power(x0, 2) - 2*t*Power(x0, 2) + 
                                  Power(t, 2)*Power(x0, 2) + 2*t*x0*x1 - 
                                  2*Power(t, 2)*x0*x1 + 
                                  Power(t, 2)*Power(x1, 2) + Power(y0, 2) - 
                                  2*t*Power(y0, 2) + 
                                  Power(t, 2)*Power(y0, 2) + 2*t*y0*y1 - 
                                  2*Power(t, 2)*y0*y1 + 
                                  Power(t, 2)*
                                    Power(y1, 2)))))/(Power(Power(x0, 2) - 
                      2*x0*x1 + Power(x1, 2) + Power(y0 - y1, 2), 1.5)*
                  Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0, 2) - 2*y0*y1 + Power(y1, 2), 
                    2)) + ((-2*x0 + x1)*(y0 - y1)*(x1*y0 - 
                      x0*y1)*(-Log((2*(-Power(x0, 2) + t*Power(x0, 2) + 
                                      x0*x1 - 2*t*x0*x1 + t*Power(x1, 2) - 
                                      Power(y0, 2) + t*Power(y0, 2) + y0*y1 - 
                                      2*t*y0*y1 + t*Power(y1, 2) + 
                                      Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0, 2) - 
                                        2*y0*y1 + Power(y1, 2))*
                                        Sqrt(Power(x0, 2) - 
                                        2*t*Power(x0, 2) + 
                                        Power(t, 2)*Power(x0, 2) + 
                                        2*t*x0*x1 - 2*Power(t, 2)*x0*x1 + 
                                        Power(t, 2)*Power(x1, 2) + 
                                        Power(y0, 2) - 2*t*Power(y0, 2) + 
                                        Power(t, 2)*Power(y0, 2) + 
                                        2*t*y0*y1 - 2*Power(t, 2)*y0*y1 + 
                                        Power(t, 2)*Power(y1, 2))))/
                              Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                Power(y0, 2) - 2*y0*y1 + Power(y1, 2))) + 
                      Log(2*(-Power(x0, 2) + t*Power(x0, 2) + x0*x1 - 
                                  2*t*x0*x1 + t*Power(x1, 2) - Power(y0, 2) + 
                                  t*Power(y0, 2) + y0*y1 - 2*t*y0*y1 + 
                                  t*Power(y1, 2)) + 
                            2*Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0, 2) - 2*y0*y1 + Power(y1, 2))*
                              Sqrt(Power(x0, 2) - 2*t*Power(x0, 2) + 
                                  Power(t, 2)*Power(x0, 2) + 2*t*x0*x1 - 
                                  2*Power(t, 2)*x0*x1 + 
                                  Power(t, 2)*Power(x1, 2) + Power(y0, 2) - 
                                  2*t*Power(y0, 2) + 
                                  Power(t, 2)*Power(y0, 2) + 2*t*y0*y1 - 
                                  2*Power(t, 2)*y0*y1 + 
                                  Power(t, 2)*
                                    Power(y1, 2)))))/(Power(Power(x0, 2) - 
                      2*x0*x1 + Power(x1, 2) + Power(y0 - y1, 2), 
                    1.5)*(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0, 2) - 2*y0*y1 + Power(y1, 2))) - ((y0 - y1)*
                  y1*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + 
                      y0*y1)*(-Log((2*(-Power(x0, 2) + t*Power(x0, 2) + 
                                      x0*x1 - 2*t*x0*x1 + t*Power(x1, 2) - 
                                      Power(y0, 2) + t*Power(y0, 2) + y0*y1 - 
                                      2*t*y0*y1 + t*Power(y1, 2) + 
                                      Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0, 2) - 
                                        2*y0*y1 + Power(y1, 2))*
                                        Sqrt(Power(x0, 2) - 
                                        2*t*Power(x0, 2) + 
                                        Power(t, 2)*Power(x0, 2) + 
                                        2*t*x0*x1 - 2*Power(t, 2)*x0*x1 + 
                                        Power(t, 2)*Power(x1, 2) + 
                                        Power(y0, 2) - 2*t*Power(y0, 2) + 
                                        Power(t, 2)*Power(y0, 2) + 
                                        2*t*y0*y1 - 2*Power(t, 2)*y0*y1 + 
                                        Power(t, 2)*Power(y1, 2))))/
                              Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                Power(y0, 2) - 2*y0*y1 + Power(y1, 2))) + 
                      Log(2*(-Power(x0, 2) + t*Power(x0, 2) + x0*x1 - 
                                  2*t*x0*x1 + t*Power(x1, 2) - Power(y0, 2) + 
                                  t*Power(y0, 2) + y0*y1 - 2*t*y0*y1 + 
                                  t*Power(y1, 2)) + 
                            2*Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0, 2) - 2*y0*y1 + Power(y1, 2))*
                              Sqrt(Power(x0, 2) - 2*t*Power(x0, 2) + 
                                  Power(t, 2)*Power(x0, 2) + 2*t*x0*x1 - 
                                  2*Power(t, 2)*x0*x1 + 
                                  Power(t, 2)*Power(x1, 2) + Power(y0, 2) - 
                                  2*t*Power(y0, 2) + 
                                  Power(t, 2)*Power(y0, 2) + 2*t*y0*y1 - 
                                  2*Power(t, 2)*y0*y1 + 
                                  Power(t, 2)*
                                    Power(y1, 2)))))/(Power(Power(x0, 2) - 
                      2*x0*x1 + Power(x1, 2) + Power(y0 - y1, 2), 
                    1.5)*(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0, 2) - 2*y0*y1 + Power(y1, 2))) - (3*(2*x0 - 
                      2*x1)*(y0 - y1)*(x1*y0 - x0*y1)*(-Power(x0, 2) + 
                      x0*x1 - Power(y0, 2) + 
                      y0*y1)*(-Log((2*(-Power(x0, 2) + t*Power(x0, 2) + 
                                      x0*x1 - 2*t*x0*x1 + t*Power(x1, 2) - 
                                      Power(y0, 2) + t*Power(y0, 2) + y0*y1 - 
                                      2*t*y0*y1 + t*Power(y1, 2) + 
                                      Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0, 2) - 
                                        2*y0*y1 + Power(y1, 2))*
                                        Sqrt(Power(x0, 2) - 
                                        2*t*Power(x0, 2) + 
                                        Power(t, 2)*Power(x0, 2) + 
                                        2*t*x0*x1 - 2*Power(t, 2)*x0*x1 + 
                                        Power(t, 2)*Power(x1, 2) + 
                                        Power(y0, 2) - 2*t*Power(y0, 2) + 
                                        Power(t, 2)*Power(y0, 2) + 
                                        2*t*y0*y1 - 2*Power(t, 2)*y0*y1 + 
                                        Power(t, 2)*Power(y1, 2))))/
                              Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                Power(y0, 2) - 2*y0*y1 + Power(y1, 2))) + 
                      Log(2*(-Power(x0, 2) + t*Power(x0, 2) + x0*x1 - 
                                  2*t*x0*x1 + t*Power(x1, 2) - Power(y0, 2) + 
                                  t*Power(y0, 2) + y0*y1 - 2*t*y0*y1 + 
                                  t*Power(y1, 2)) + 
                            2*Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0, 2) - 2*y0*y1 + Power(y1, 2))*
                              Sqrt(Power(x0, 2) - 2*t*Power(x0, 2) + 
                                  Power(t, 2)*Power(x0, 2) + 2*t*x0*x1 - 
                                  2*Power(t, 2)*x0*x1 + 
                                  Power(t, 2)*Power(x1, 2) + Power(y0, 2) - 
                                  2*t*Power(y0, 2) + 
                                  Power(t, 2)*Power(y0, 2) + 2*t*y0*y1 - 
                                  2*Power(t, 2)*y0*y1 + 
                                  Power(t, 2)*Power(y1, 2)))))/(2.*
                  Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0 - y1, 2), 
                    2.5)*(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0, 2) - 2*y0*y1 + 
                      Power(y1, 2))), (((-2*x0 + x1)*
                          Sqrt(Power(x0, 2) + Power(y0, 2))*(y0 - y1))/
                      Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                        Power(y0 - y1, 2), 
                      2) + (2*(x0 - x1)*Sqrt(Power(x0, 2) + Power(y0, 2))*y1)/
                      Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                        Power(y0 - y1, 2), 
                      2) - (4*(2*x0 - 2*x1)*(x0 - x1)*
                          Sqrt(Power(x0, 2) + Power(y0, 2))*(-(x1*y0) + 
                              x0*y1))/
                      Power3(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                        Power(y0 - y1, 2), 
                      3) + (2*
                        x0*(x0 - x1)*(-(x1*y0) + x0*y1))/(Sqrt(Power(x0, 2) + 
                            Power(y0, 2))*
                        Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0 - y1, 2), 2)) + (2*
                          Sqrt(Power(x0, 2) + Power(y0, 2))*(-(x1*y0) + 
                              x0*y1))/
                      Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                        Power(y0 - y1, 2), 
                      2) - (2*(2*x0 - 2*x1)*
                          Sqrt(Power(x0, 2) + Power(y0, 2))*(y0 - 
                              y1)*(-Power(x0, 2) + x0*x1 + y0*(-y0 + y1)))/
                      Power3(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                        Power(y0 - y1, 2), 
                      3) + (x0*(y0 - y1)*(-Power(x0, 2) + x0*x1 + 
                            y0*(-y0 + y1)))/(Sqrt(Power(x0, 2) + 
                            Power(y0, 2))*
                        Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0 - y1, 2), 2)) + ((y0 - y1)*
                        Power(x1*y0 - x0*y1, 
                          2)*((2*(-2*x0 + 
                                        x1 + ((2*x0 - 2*x1)*
                                        Sqrt(Power(x0, 2) + 
                                        Power(y0, 2)))/(2.*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + 
                                        Power(y0 - y1, 2))) + (x0*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)))/
                                        Sqrt(Power(x0, 2) + Power(y0, 2))))/
                                Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0 - y1, 
                                      2)) - ((2*x0 - 2*x1)*(-Power(x0, 2) + 
                                        x0*x1 - Power(y0, 2) + 
                                        Sqrt(Power(x0, 2) + Power(y0, 2))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1))/
                                Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0 - y1, 2), 1.5)))/(2.*
                        Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0 - y1, 2), 
                          2)*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + 
                            Sqrt(Power(x0, 2) + Power(y0, 2))*
                              Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0 - y1, 2)) + y0*y1)) + ((x0 - 
                     
                         x1)*(Power(x0, 2) - x0*x1 + 
                            y0*(y0 - y1))*(-(x1*y0) + 
                            x0*y1)*((2*(-2*x0 + 
                                        x1 + ((2*x0 - 2*x1)*
                                        Sqrt(Power(x0, 2) + 
                                        Power(y0, 2)))/(2.*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + 
                                        Power(y0 - y1, 2))) + (x0*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)))/
                                        Sqrt(Power(x0, 2) + Power(y0, 2))))/
                                Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0 - y1, 
                                      2)) - ((2*x0 - 2*x1)*(-Power(x0, 2) + 
                                        x0*x1 - Power(y0, 2) + 
                                        Sqrt(Power(x0, 2) + Power(y0, 2))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1))/
                                Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0 - y1, 2), 1.5)))/(Power(Power(x0, 
                                2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0 - y1, 2), 
                          2)*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + 
                            Sqrt(Power(x0, 2) + Power(y0, 2))*
                              Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0 - y1, 2)) + 
                            y0*y1)) - (2*(x0 - x1)*(Power(x0, 2) - x0*x1 + 
                              y0*(y0 - y1))*(-(x1*y0) + 
                              x0*y1)*(-((-2*x0 + 
                                        x1 + ((2*x0 - 2*x1)*
                                        Sqrt(Power(x0, 2) + 
                                        Power(y0, 2)))/(2.*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + 
                                        Power(y0 - y1, 2))) + (x0*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)))/
                                        Sqrt(Power(x0, 2) + 
                                        Power(y0, 2)))/(-Power(x0, 2) + 
                                        x0*x1 - Power(y0, 2) + 
                                        Sqrt(Power(x0, 2) + Power(y0, 2))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1)) + (Sqrt(Power(x0, 2) - 
                                        2*x0*x1 + Power(x1, 2) + 
                                        Power(y0 - y1, 
                                        2))*((2*(-2*x0 + 
                                        x1 + ((2*x0 - 2*x1)*
                                        Sqrt(Power(x0, 2) + Power(y0, 
                                        2)))/(2.*Sqrt(Power(x0, 2) - 
                                        2*x0*x1 + Power(x1, 2) + 
                                        Power(y0 - y1, 2))) + (x0*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)))/
                                        Sqrt(Power(x0, 2) + Power(y0, 2))))/
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + 
                                        Power(y0 - y1, 
                                        2)) - ((2*x0 - 2*x1)*(-Power(x0, 2) + 
                                        x0*x1 - Power(y0, 2) + 
                                        Sqrt(Power(x0, 2) + Power(y0, 2))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1))/
                                        Power(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2), 
                                        1.5)))/(2.*(-Power(x0, 2) + x0*x1 - 
                                        Power(y0, 2) + 
                                        Sqrt(Power(x0, 2) + Power(y0, 2))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1))))/
                      Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                        Power(y0 - y1, 2), 
                      2.5) + (2*(x0 - x1)*(Power(x0, 2) - x0*x1 + 
                              y0*(y0 - y1))*y1*
                          Log((2*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + 
                                        Sqrt(Power(x0, 2) + Power(y0, 2))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1))/
                                Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0 - y1, 2))))/
                      Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                        Power(y0 - y1, 2), 
                      2.5) - (2*(y0 - y1)*y1*(x1*y0 - x0*y1)*
                          Log((2*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + 
                                        Sqrt(Power(x0, 2) + Power(y0, 2))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1))/
                                Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0 - y1, 2))))/
                      Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                        Power(y0 - y1, 2), 
                      2.5) - (5*(2*x0 - 2*x1)*(y0 - y1)*
                        Power(x1*y0 - x0*y1, 2)*
                        Log((2*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + 
                                      Sqrt(Power(x0, 2) + Power(y0, 2))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                      y0*y1))/
                              Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                Power(y0 - y1, 2))))/(2.*
                        Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0 - y1, 2), 
                          3.5)) - (5*(2*x0 - 2*x1)*(x0 - x1)*(Power(x0, 2) - 
                              x0*x1 + y0*(y0 - y1))*(-(x1*y0) + x0*y1)*
                          Log((2*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + 
                                        Sqrt(Power(x0, 2) + Power(y0, 2))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1))/
                                Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0 - y1, 2))))/
                      Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                        Power(y0 - y1, 2), 
                      3.5) + (2*(x0 - x1)*(2*x0 - x1)*(-(x1*y0) + x0*y1)*
                          Log((2*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + 
                                        Sqrt(Power(x0, 2) + Power(y0, 2))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1))/
                                Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0 - y1, 2))))/
                      Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                        Power(y0 - y1, 2), 
                      2.5) + (2*(Power(x0, 2) - x0*x1 + 
                              y0*(y0 - y1))*(-(x1*y0) + x0*y1)*
                          Log((2*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + 
                                        Sqrt(Power(x0, 2) + Power(y0, 2))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1))/
                                Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0 - y1, 2))))/
                      Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                        Power(y0 - y1, 2), 
                      2.5) - (2*(x0 - x1)*(Power(x0, 2) - x0*x1 + 
                              y0*(y0 - y1))*
                          y1*(-Log(2*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + 
                                        Sqrt(Power(x0, 2) + Power(y0, 2))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1)) + 
                              Log((2*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + 
                                        Sqrt(Power(x0, 2) + Power(y0, 2))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1))/
                                      Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)))))/
                      Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                        Power(y0 - y1, 2), 
                      2.5) + (5*(2*x0 - 2*x1)*(x0 - x1)*(Power(x0, 2) - 
                              x0*x1 + y0*(y0 - y1))*(-(x1*y0) + 
                              x0*y1)*(-Log(2*(-Power(x0, 2) + x0*x1 - 
                                        Power(y0, 2) + 
                                        Sqrt(Power(x0, 2) + Power(y0, 2))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1)) + 
                              Log((2*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + 
                                        Sqrt(Power(x0, 2) + Power(y0, 2))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1))/
                                      Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)))))/
                      Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                        Power(y0 - y1, 2), 
                      3.5) - (2*(x0 - x1)*(2*x0 - x1)*(-(x1*y0) + 
                              x0*y1)*(-Log(2*(-Power(x0, 2) + x0*x1 - 
                                        Power(y0, 2) + 
                                        Sqrt(Power(x0, 2) + Power(y0, 2))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1)) + 
                              Log((2*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + 
                                        Sqrt(Power(x0, 2) + Power(y0, 2))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1))/
                                      Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)))))/
                      Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                        Power(y0 - y1, 2), 
                      2.5) - (2*(Power(x0, 2) - x0*x1 + 
                              y0*(y0 - y1))*(-(x1*y0) + 
                              x0*y1)*(-Log(2*(-Power(x0, 2) + x0*x1 - 
                                        Power(y0, 2) + 
                                        Sqrt(Power(x0, 2) + Power(y0, 2))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1)) + 
                              Log((2*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + 
                                        Sqrt(Power(x0, 2) + Power(y0, 2))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1))/
                                      Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)))))/
                      Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                        Power(y0 - y1, 2), 2.5))/
              2. + ((-2*t*(2*x0 - 2*x1)*
                          Sqrt(Power(x0, 2) + Power(y0, 2))*(y0 - y1))/
                      Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                        Power(y0 - y1, 2), 
                      2) - ((2*(-1 + t)*x0 + x1 - 2*t*x1)*
                          Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                              2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                              Power(t, 
                                  2)*(Power(x1, 2) + Power(y0 - y1, 2)) - 
                              2*t*y0*(y0 - y1))*(y0 - y1))/
                      Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                        Power(y0 - y1, 2), 
                      2) + (2*t*
                        x0*(y0 - y1))/(Sqrt(Power(x0, 2) + 
                            Power(y0, 2))*(Power(x0, 2) - 2*x0*x1 + 
                            Power(x1, 2) + Power(y0 - y1, 2))) - (2*(x0 - x1)*
                          Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                              2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                              Power(t, 
                                  2)*(Power(x1, 2) + Power(y0 - y1, 2)) - 
                              2*t*y0*(y0 - y1))*y1)/
                      Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                        Power(y0 - y1, 2), 
                      2) + (4*(2*x0 - 2*x1)*(x0 - x1)*
                          Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                              2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                              Power(t, 
                                  2)*(Power(x1, 2) + Power(y0 - y1, 2)) - 
                              2*t*y0*(y0 - y1))*(-(x1*y0) + x0*y1))/
                      Power3(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                        Power(y0 - y1, 2), 
                      3) - ((x0 - x1)*(2*Power(-1 + t, 2)*x0 - 
                            2*(-1 + t)*t*x1)*(-(x1*y0) + 
                            x0*y1))/(Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                            2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                            Power(t, 2)*(Power(x1, 2) + Power(y0 - y1, 2)) - 
                            2*t*y0*(y0 - y1))*
                        Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0 - y1, 2), 2)) - (2*
                          Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                              2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                              Power(t, 
                                  2)*(Power(x1, 2) + Power(y0 - y1, 2)) - 
                              2*t*y0*(y0 - y1))*(-(x1*y0) + x0*y1))/
                      Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                        Power(y0 - y1, 2), 
                      2) + (2*(2*x0 - 2*x1)*
                          Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                              2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                              Power(t, 
                                  2)*(Power(x1, 2) + Power(y0 - y1, 2)) - 
                              2*t*y0*(y0 - y1))*(y0 - 
                              y1)*((-1 + t)*Power(x0, 2) + x0*(x1 - 2*t*x1) + 
                              t*(Power(x1, 2) + Power(y0 - y1, 2)) + 
                              y0*(-y0 + y1)))/
                      Power3(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                        Power(y0 - y1, 2), 
                      3) - ((2*Power(-1 + t, 2)*x0 - 2*(-1 + t)*t*x1)*(y0 - 
                            y1)*((-1 + t)*Power(x0, 2) + x0*(x1 - 2*t*x1) + 
                            t*(Power(x1, 2) + Power(y0 - y1, 2)) + 
                            y0*(-y0 + y1)))/(2.*
                        Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                            2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                            Power(t, 2)*(Power(x1, 2) + Power(y0 - y1, 2)) - 
                            2*t*y0*(y0 - y1))*
                        Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0 - y1, 2), 
                          2)) - (t*(x0 - x1)*(-(x1*y0) + 
                            x0*y1)*((2*(-2*x0 + 
                                        x1 + ((2*x0 - 2*x1)*
                                        Sqrt(Power(x0, 2) + 
                                        Power(y0, 2)))/(2.*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + 
                                        Power(y0 - y1, 2))) + (x0*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)))/
                                        Sqrt(Power(x0, 2) + Power(y0, 2))))/
                                Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0 - y1, 
                                      2)) - ((2*x0 - 2*x1)*(-Power(x0, 2) + 
                                        x0*x1 - Power(y0, 2) + 
                                        Sqrt(Power(x0, 2) + Power(y0, 2))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1))/
                                Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0 - y1, 2), 1.5)))/((Power(x0, 2) - 
                            2*x0*x1 + Power(x1, 2) + 
                            Power(y0 - y1, 2))*(-Power(x0, 2) + x0*x1 - 
                            Power(y0, 2) + 
                            Sqrt(Power(x0, 2) + Power(y0, 2))*
                              Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0 - y1, 2)) + y0*y1)) - ((y0 - y1)*
                        Power(x1*y0 - x0*y1, 
                          2)*((2*(-2*x0 + 2*t*x0 + x1 - 
                                        2*t*x1 + ((2*x0 - 2*x1)*
                                        Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1)))/(2.*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + 
                                        Power(y0 - y1, 2))) + ((2*
                                        Power(-1 + t, 2)*x0 - 
                                        2*(-1 + t)*t*x1)*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + 
                                        Power(y0 - y1, 2)))/(2.*
                                        Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1)))))/
                                Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0 - y1, 
                                      2)) - ((2*x0 - 2*x1)*(-Power(x0, 2) + 
                                        t*Power(x0, 2) + x0*x1 - 2*t*x0*x1 + 
                                        t*Power(x1, 2) - Power(y0, 2) + 
                                        t*Power(y0, 2) + 
                                        Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1 - 2*t*y0*y1 + t*Power(y1, 2)))/
                                Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0 - y1, 2), 1.5)))/(2.*
                        Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0 - y1, 2), 
                          2)*(-Power(x0, 2) + t*Power(x0, 2) + x0*x1 - 
                            2*t*x0*x1 + t*Power(x1, 2) - Power(y0, 2) + 
                            t*Power(y0, 2) + 
                            Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                  2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                  Power(t, 
                                      2)*(Power(x1, 2) + Power(y0 - y1, 2)) - 
                                  2*t*y0*(y0 - y1))*
                              Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0 - y1, 2)) + y0*y1 - 2*t*y0*y1 + 
                            t*Power(y1, 2))) - ((x0 - x1)*(Power(x0, 2) - 
                            x0*x1 + y0*(y0 - y1))*(-(x1*y0) + 
                            x0*y1)*((2*(-2*x0 + 2*t*x0 + x1 - 
                                        2*t*x1 + ((2*x0 - 2*x1)*
                                        Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1)))/(2.*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + 
                                        Power(y0 - y1, 2))) + ((2*
                                        Power(-1 + t, 2)*x0 - 
                                        2*(-1 + t)*t*x1)*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + 
                                        Power(y0 - y1, 2)))/(2.*
                                        Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1)))))/
                                Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0 - y1, 
                                      2)) - ((2*x0 - 2*x1)*(-Power(x0, 2) + 
                                        t*Power(x0, 2) + x0*x1 - 2*t*x0*x1 + 
                                        t*Power(x1, 2) - Power(y0, 2) + 
                                        t*Power(y0, 2) + 
                                        Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1 - 2*t*y0*y1 + t*Power(y1, 2)))/
                                Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0 - y1, 2), 1.5)))/(Power(Power(x0, 
                                2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0 - y1, 2), 
                          2)*(-Power(x0, 2) + t*Power(x0, 2) + x0*x1 - 
                            2*t*x0*x1 + t*Power(x1, 2) - Power(y0, 2) + 
                            t*Power(y0, 2) + 
                            Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                  2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                  Power(t, 
                                      2)*(Power(x1, 2) + Power(y0 - y1, 2)) - 
                                  2*t*y0*(y0 - y1))*
                              Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0 - y1, 2)) + y0*y1 - 2*t*y0*y1 + 
                            t*Power(y1, 2))) + (t*(x0 - x1)*(-(x1*y0) + 
                            x0*y1)*((2*(-2*x0 + 2*t*x0 + x1 - 
                                        2*t*x1 + ((2*x0 - 2*x1)*
                                        Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1)))/(2.*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + 
                                        Power(y0 - y1, 2))) + ((2*
                                        Power(-1 + t, 2)*x0 - 
                                        2*(-1 + t)*t*x1)*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + 
                                        Power(y0 - y1, 2)))/(2.*
                                        Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1)))))/
                                Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0 - y1, 
                                      2)) - ((2*x0 - 2*x1)*(-Power(x0, 2) + 
                                        t*Power(x0, 2) + x0*x1 - 2*t*x0*x1 + 
                                        t*Power(x1, 2) - Power(y0, 2) + 
                                        t*Power(y0, 2) + 
                                        Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1 - 2*t*y0*y1 + t*Power(y1, 2)))/
                                Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0 - y1, 2), 1.5)))/((Power(x0, 2) - 
                            2*x0*x1 + Power(x1, 2) + 
                            Power(y0 - y1, 2))*(-Power(x0, 2) + 
                            t*Power(x0, 2) + x0*x1 - 2*t*x0*x1 + 
                            t*Power(x1, 2) - Power(y0, 2) + t*Power(y0, 2) + 
                            Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                  2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                  Power(t, 
                                      2)*(Power(x1, 2) + Power(y0 - y1, 2)) - 
                                  2*t*y0*(y0 - y1))*
                              Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0 - y1, 2)) + y0*y1 - 2*t*y0*y1 + 
                            t*Power(y1, 2))) + (2*(x0 - x1)*(Power(x0, 2) - 
                              x0*x1 + y0*(y0 - y1))*(-(x1*y0) + 
                              x0*y1)*(-((-2*x0 + 2*t*x0 + x1 - 
                                        2*t*x1 + ((2*x0 - 2*x1)*
                                        Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1)))/(2.*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + 
                                        Power(y0 - y1, 2))) + ((2*
                                        Power(-1 + t, 2)*x0 - 
                                        2*(-1 + t)*t*x1)*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + 
                                        Power(y0 - y1, 2)))/(2.*
                                        Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1))))/(-Power(x0, 2) + 
                                        t*Power(x0, 2) + x0*x1 - 2*t*x0*x1 + 
                                        t*Power(x1, 2) - Power(y0, 2) + 
                                        t*Power(y0, 2) + 
                                        Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1 - 2*t*y0*y1 + 
                                        t*Power(y1, 2))) + (Sqrt(Power(x0, 
                                        2) - 2*x0*x1 + Power(x1, 2) + 
                                        Power(y0 - y1, 
                                        2))*((2*(-2*x0 + 2*t*x0 + x1 - 
                                        2*t*x1 + ((2*x0 - 2*x1)*
                                        Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 2*t*
                                        y0*(y0 - y1)))/(2.*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 
                                        2))) + ((2*Power(-1 + t, 2)*x0 - 
                                        2*(-1 + t)*t*x1)*Sqrt(Power(x0, 2) - 
                                        2*x0*x1 + Power(x1, 2) + 
                                        Power(y0 - y1, 2)))/(2.*
                                        Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 2*t*
                                        y0*(y0 - y1)))))/
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + 
                                        Power(y0 - y1, 
                                        2)) - ((2*x0 - 2*x1)*(-Power(x0, 2) + 
                                        t*Power(x0, 2) + x0*x1 - 2*t*x0*x1 + 
                                        t*Power(x1, 2) - Power(y0, 2) + 
                                        t*Power(y0, 2) + 
                                        Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1 - 2*t*y0*y1 + t*Power(y1, 2)))/
                                        Power(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2), 
                                        1.5)))/(2.*(-Power(x0, 2) + 
                                        t*Power(x0, 2) + x0*x1 - 2*t*x0*x1 + 
                                        t*Power(x1, 2) - Power(y0, 2) + 
                                        t*Power(y0, 2) + 
                                        Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1 - 2*t*y0*y1 + 
                                        t*Power(y1, 2)))))/
                      Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                        Power(y0 - y1, 2), 
                      2.5) - (2*t*(x0 - x1)*y1*
                          Log((2*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + 
                                        Sqrt(Power(x0, 2) + Power(y0, 2))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1))/
                                Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0 - y1, 2))))/
                      Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                        Power(y0 - y1, 2), 
                      1.5) + (3*t*(2*x0 - 2*x1)*(x0 - x1)*(-(x1*y0) + x0*y1)*
                          Log((2*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + 
                                        Sqrt(Power(x0, 2) + Power(y0, 2))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1))/
                                Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0 - y1, 2))))/
                      Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                        Power(y0 - y1, 2), 
                      2.5) - (2*t*(-(x1*y0) + x0*y1)*
                          Log((2*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + 
                                        Sqrt(Power(x0, 2) + Power(y0, 2))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1))/
                                Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0 - y1, 2))))/
                      Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                        Power(y0 - y1, 2), 
                      1.5) - (2*(x0 - x1)*(Power(x0, 2) - x0*x1 + 
                              y0*(y0 - y1))*y1*
                          Log((2*(-Power(x0, 2) + t*Power(x0, 2) + x0*x1 - 
                                        2*t*x0*x1 + t*Power(x1, 2) - 
                                        Power(y0, 2) + t*Power(y0, 2) + 
                                        Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1 - 2*t*y0*y1 + t*Power(y1, 2)))/
                                Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0 - y1, 2))))/
                      Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                        Power(y0 - y1, 2), 
                      2.5) + (2*t*(x0 - x1)*y1*
                          Log((2*(-Power(x0, 2) + t*Power(x0, 2) + x0*x1 - 
                                        2*t*x0*x1 + t*Power(x1, 2) - 
                                        Power(y0, 2) + t*Power(y0, 2) + 
                                        Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1 - 2*t*y0*y1 + t*Power(y1, 2)))/
                                Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0 - y1, 2))))/
                      Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                        Power(y0 - y1, 2), 
                      1.5) + (2*(y0 - y1)*y1*(x1*y0 - x0*y1)*
                          Log((2*(-Power(x0, 2) + t*Power(x0, 2) + x0*x1 - 
                                        2*t*x0*x1 + t*Power(x1, 2) - 
                                        Power(y0, 2) + t*Power(y0, 2) + 
                                        Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1 - 2*t*y0*y1 + t*Power(y1, 2)))/
                                Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0 - y1, 2))))/
                      Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                        Power(y0 - y1, 2), 
                      2.5) + (5*(2*x0 - 2*x1)*(y0 - y1)*
                        Power(x1*y0 - x0*y1, 2)*
                        Log((2*(-Power(x0, 2) + t*Power(x0, 2) + x0*x1 - 
                                      2*t*x0*x1 + t*Power(x1, 2) - 
                                      Power(y0, 2) + t*Power(y0, 2) + 
                                      Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 
                                        2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                      y0*y1 - 2*t*y0*y1 + t*Power(y1, 2)))/
                              Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                Power(y0 - y1, 2))))/(2.*
                        Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0 - y1, 2), 
                          3.5)) + (5*(2*x0 - 2*x1)*(x0 - x1)*(Power(x0, 2) - 
                              x0*x1 + y0*(y0 - y1))*(-(x1*y0) + x0*y1)*
                          Log((2*(-Power(x0, 2) + t*Power(x0, 2) + x0*x1 - 
                                        2*t*x0*x1 + t*Power(x1, 2) - 
                                        Power(y0, 2) + t*Power(y0, 2) + 
                                        Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1 - 2*t*y0*y1 + t*Power(y1, 2)))/
                                Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0 - y1, 2))))/
                      Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                        Power(y0 - y1, 2), 
                      3.5) - (3*t*(2*x0 - 2*x1)*(x0 - x1)*(-(x1*y0) + x0*y1)*
                          Log((2*(-Power(x0, 2) + t*Power(x0, 2) + x0*x1 - 
                                        2*t*x0*x1 + t*Power(x1, 2) - 
                                        Power(y0, 2) + t*Power(y0, 2) + 
                                        Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1 - 2*t*y0*y1 + t*Power(y1, 2)))/
                                Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0 - y1, 2))))/
                      Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                        Power(y0 - y1, 2), 
                      2.5) - (2*(x0 - x1)*(2*x0 - x1)*(-(x1*y0) + x0*y1)*
                          Log((2*(-Power(x0, 2) + t*Power(x0, 2) + x0*x1 - 
                                        2*t*x0*x1 + t*Power(x1, 2) - 
                                        Power(y0, 2) + t*Power(y0, 2) + 
                                        Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1 - 2*t*y0*y1 + t*Power(y1, 2)))/
                                Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0 - y1, 2))))/
                      Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                        Power(y0 - y1, 2), 
                      2.5) - (2*(Power(x0, 2) - x0*x1 + 
                              y0*(y0 - y1))*(-(x1*y0) + x0*y1)*
                          Log((2*(-Power(x0, 2) + t*Power(x0, 2) + x0*x1 - 
                                        2*t*x0*x1 + t*Power(x1, 2) - 
                                        Power(y0, 2) + t*Power(y0, 2) + 
                                        Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1 - 2*t*y0*y1 + t*Power(y1, 2)))/
                                Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0 - y1, 2))))/
                      Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                        Power(y0 - y1, 2), 
                      2.5) + (2*t*(-(x1*y0) + x0*y1)*
                          Log((2*(-Power(x0, 2) + t*Power(x0, 2) + x0*x1 - 
                                        2*t*x0*x1 + t*Power(x1, 2) - 
                                        Power(y0, 2) + t*Power(y0, 2) + 
                                        Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1 - 2*t*y0*y1 + t*Power(y1, 2)))/
                                Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0 - y1, 2))))/
                      Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                        Power(y0 - y1, 2), 
                      1.5) + (2*(x0 - x1)*(Power(x0, 2) - x0*x1 + 
                              y0*(y0 - y1))*
                          y1*(-Log(2*(-Power(x0, 2) + t*Power(x0, 2) + 
                                        x0*x1 - 2*t*x0*x1 + t*Power(x1, 2) - 
                                        Power(y0, 2) + t*Power(y0, 2) + 
                                        Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1 - 2*t*y0*y1 + 
                                        t*Power(y1, 2))) + 
                              Log((2*(-Power(x0, 2) + t*Power(x0, 2) + 
                                        x0*x1 - 2*t*x0*x1 + t*Power(x1, 2) - 
                                        Power(y0, 2) + t*Power(y0, 2) + 
                                        Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1 - 2*t*y0*y1 + t*Power(y1, 2)))/
                                      Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)))))/
                      Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                        Power(y0 - y1, 2), 
                      2.5) - (5*(2*x0 - 2*x1)*(x0 - x1)*(Power(x0, 2) - 
                              x0*x1 + y0*(y0 - y1))*(-(x1*y0) + 
                              x0*y1)*(-Log(2*(-Power(x0, 2) + 
                                        t*Power(x0, 2) + x0*x1 - 2*t*x0*x1 + 
                                        t*Power(x1, 2) - Power(y0, 2) + 
                                        t*Power(y0, 2) + 
                                        Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1 - 2*t*y0*y1 + 
                                        t*Power(y1, 2))) + 
                              Log((2*(-Power(x0, 2) + t*Power(x0, 2) + 
                                        x0*x1 - 2*t*x0*x1 + t*Power(x1, 2) - 
                                        Power(y0, 2) + t*Power(y0, 2) + 
                                        Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1 - 2*t*y0*y1 + t*Power(y1, 2)))/
                                      Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)))))/
                      Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                        Power(y0 - y1, 2), 
                      3.5) + (2*(x0 - x1)*(2*x0 - x1)*(-(x1*y0) + 
                              x0*y1)*(-Log(2*(-Power(x0, 2) + 
                                        t*Power(x0, 2) + x0*x1 - 2*t*x0*x1 + 
                                        t*Power(x1, 2) - Power(y0, 2) + 
                                        t*Power(y0, 2) + 
                                        Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1 - 2*t*y0*y1 + 
                                        t*Power(y1, 2))) + 
                              Log((2*(-Power(x0, 2) + t*Power(x0, 2) + 
                                        x0*x1 - 2*t*x0*x1 + t*Power(x1, 2) - 
                                        Power(y0, 2) + t*Power(y0, 2) + 
                                        Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1 - 2*t*y0*y1 + t*Power(y1, 2)))/
                                      Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)))))/
                      Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                        Power(y0 - y1, 2), 
                      2.5) + (2*(Power(x0, 2) - x0*x1 + 
                              y0*(y0 - y1))*(-(x1*y0) + 
                              x0*y1)*(-Log(2*(-Power(x0, 2) + 
                                        t*Power(x0, 2) + x0*x1 - 2*t*x0*x1 + 
                                        t*Power(x1, 2) - Power(y0, 2) + 
                                        t*Power(y0, 2) + 
                                        Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1 - 2*t*y0*y1 + 
                                        t*Power(y1, 2))) + 
                              Log((2*(-Power(x0, 2) + t*Power(x0, 2) + 
                                        x0*x1 - 2*t*x0*x1 + t*Power(x1, 2) - 
                                        Power(y0, 2) + t*Power(y0, 2) + 
                                        Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1 - 2*t*y0*y1 + t*Power(y1, 2)))/
                                      Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)))))/
                      Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                        Power(y0 - y1, 2), 2.5))/2.,

(-(((x0 - x1)*((-1 + t)*Power(x0, 2) + x0*(x1 - 2*t*x1) + 
                    t*(Power(x1, 2) + Power(y0 - y1, 2)) + 
                    y0*(-y0 + y1)))/(Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                    2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                    Power(t, 2)*(Power(x1, 2) + Power(y0 - y1, 2)) - 
                    2*t*y0*(y0 - y1))*(Power(x0, 2) - 2*x0*x1 + 
                    Power(x1, 2) + Power(y0 - y1, 2)))) + ((y0 - y1)*(x1*y0 - 
                x0*y1)*(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                Power(y0, 2) - 2*y0*y1 + 
                Power(y1, 
                    2) + (Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0 - y1, 2))*((-1 + t)*Power(x0, 2) + 
                            x0*(x1 - 2*t*x1) + 
                            t*(Power(x1, 2) + Power(y0 - y1, 2)) + 
                            y0*(-y0 + y1)))/
                    Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 2*(-1 + t)*t*x0*x1 + 
                      Power(y0, 2) + 
                      Power(t, 2)*(Power(x1, 2) + Power(y0 - y1, 2)) - 
                      2*t*y0*(y0 - y1))))/(Power(Power(x0, 2) - 2*x0*x1 + 
                Power(x1, 2) + Power(y0 - y1, 2), 
              1.5)*(-Power(x0, 2) + t*Power(x0, 2) + x0*x1 - 2*t*x0*x1 + 
                t*Power(x1, 2) - Power(y0, 2) + t*Power(y0, 2) + 
                Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 2*(-1 + t)*t*x0*x1 + 
                      Power(y0, 2) + 
                      Power(t, 2)*(Power(x1, 2) + Power(y0 - y1, 2)) - 
                      2*t*y0*(y0 - y1))*
                  Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0 - y1, 2)) + y0*y1 - 2*t*y0*y1 + 
                t*Power(y1, 2))))


                        );
                assert(answer.length == 5);
                return answer;
            } // calcVelocity0Gradient
            private static double[] calcVelocity1Gradient(double v0[], // constant; doesn't take part in derivatives calculation
                                                          double A0[],
                                                          double A1[],
                                                          double t,
                                                          boolean twoQuadraticsMode)
            {
                double x0 = A0[0];
                double y0 = A0[1];
                double x1 = A1[0];
                double y1 = A1[1];
                double answer[] = 
      List(-(((-x0 + x1)*
                      y0)/(Sqrt(Power(x0, 2) + Power(y0, 2))*(Power(x0, 2) - 
                          2*x0*x1 + Power(x1, 2) + 
                          Power(y0 - y1, 2)))) + ((-x0 + x1)*(2*y0 - 2*t*y0 - 
                      2*t*(y0 - y1) + 2*Power(t, 2)*(y0 - y1)))/(2.*
                  Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 2*(-1 + t)*t*x0*x1 + 
                      Power(y0, 2) + 
                      Power(t, 2)*(Power(x1, 2) + Power(y0 - y1, 2)) - 
                      2*t*y0*(y0 - y1))*(Power(x0, 2) - 2*x0*x1 + 
                      Power(x1, 2) + Power(y0 - y1, 2))) + (2*(-x0 + x1)*
                    Sqrt(Power(x0, 2) + Power(y0, 2))*(y0 - y1))/
                Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                  Power(y0 - y1, 2), 
                2) - (2*(-x0 + x1)*
                    Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 2*(-1 + t)*t*x0*x1 + 
                        Power(y0, 2) + 
                        Power(t, 2)*(Power(x1, 2) + Power(y0 - y1, 2)) - 
                        2*t*y0*(y0 - y1))*(y0 - y1))/
                Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                  Power(y0 - y1, 2), 
                2) - ((y0 - y1)*(x1*y0 - 
                      x0*y1)*((2*(-2*
                                    y0 + (y0*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)))/
                                      Sqrt(Power(x0, 2) + 
                                        Power(y0, 
                                        2)) + (Sqrt(Power(x0, 2) + 
                                        Power(y0, 2))*(y0 - y1))/
                                      Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                  y1))/Sqrt(Power(x0, 2) - 2*x0*x1 + 
                            Power(x1, 2) + 
                            Power(y0 - y1, 
                                2)) - (2*(y0 - y1)*(-Power(x0, 2) + x0*x1 - 
                                  Power(y0, 2) + 
                                  Sqrt(Power(x0, 2) + Power(y0, 2))*
                                    Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                  y0*y1))/
                          Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0 - y1, 2), 1.5)))/(2.*(Power(x0, 2) - 
                      2*x0*x1 + Power(x1, 2) + 
                      Power(y0 - y1, 2))*(-Power(x0, 2) + x0*x1 - 
                      Power(y0, 2) + 
                      Sqrt(Power(x0, 2) + Power(y0, 2))*
                        Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0 - y1, 2)) + y0*y1)) + ((y0 - 
                      y1)*(x1*y0 - 
                      x0*y1)*((2*(-2*y0 + 
                                  2*t*y0 + ((2*y0 - 2*t*y0 - 2*t*(y0 - y1) + 
                                        2*Power(t, 2)*(y0 - y1))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + 
                                        Power(y0 - y1, 2)))/(2.*
                                        Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 
                                        2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - 
                                        y1))) + (Sqrt(Power(-1 + t, 2)*
                                        Power(x0, 2) - 2*(-1 + t)*t*x0*x1 + 
                                        Power(y0, 2) + 
                                        Power(t, 2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1))*(y0 - y1))/
                                      Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                  y1 - 2*t*y1))/
                          Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0 - y1, 
                                2)) - (2*(y0 - y1)*(-Power(x0, 2) + 
                                  t*Power(x0, 2) + x0*x1 - 2*t*x0*x1 + 
                                  t*Power(x1, 2) - Power(y0, 2) + 
                                  t*Power(y0, 2) + 
                                  Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 
                                        2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1))*
                                    Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                  y0*y1 - 2*t*y0*y1 + t*Power(y1, 2)))/
                          Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0 - y1, 2), 1.5)))/(2.*(Power(x0, 2) - 
                      2*x0*x1 + Power(x1, 2) + 
                      Power(y0 - y1, 2))*(-Power(x0, 2) + t*Power(x0, 2) + 
                      x0*x1 - 2*t*x0*x1 + t*Power(x1, 2) - Power(y0, 2) + 
                      t*Power(y0, 2) + 
                      Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                            2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                            Power(t, 2)*(Power(x1, 2) + Power(y0 - y1, 2)) - 
                            2*t*y0*(y0 - y1))*
                        Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0 - y1, 2)) + y0*y1 - 2*t*y0*y1 + 
                      t*Power(y1, 2))) - (x1*(y0 - y1)*
                    Log((2*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + 
                                  Sqrt(Power(x0, 2) + Power(y0, 2))*
                                    Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                  y0*y1))/
                          Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0 - y1, 2))))/
                Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                  Power(y0 - y1, 2), 
                1.5) - ((x1*y0 - x0*y1)*
                    Log((2*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + 
                                  Sqrt(Power(x0, 2) + Power(y0, 2))*
                                    Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                  y0*y1))/
                          Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0 - y1, 2))))/
                Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                  Power(y0 - y1, 2), 
                1.5) + (3*Power(y0 - y1, 2)*(x1*y0 - x0*y1)*
                    Log((2*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + 
                                  Sqrt(Power(x0, 2) + Power(y0, 2))*
                                    Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                  y0*y1))/
                          Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0 - y1, 2))))/
                Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                  Power(y0 - y1, 2), 
                2.5) + (x1*(y0 - y1)*
                    Log((2*(-Power(x0, 2) + t*Power(x0, 2) + x0*x1 - 
                                  2*t*x0*x1 + t*Power(x1, 2) - Power(y0, 2) + 
                                  t*Power(y0, 2) + 
                                  Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 
                                        2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1))*
                                    Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                  y0*y1 - 2*t*y0*y1 + t*Power(y1, 2)))/
                          Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0 - y1, 2))))/
                Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                  Power(y0 - y1, 2), 
                1.5) + ((x1*y0 - x0*y1)*
                    Log((2*(-Power(x0, 2) + t*Power(x0, 2) + x0*x1 - 
                                  2*t*x0*x1 + t*Power(x1, 2) - Power(y0, 2) + 
                                  t*Power(y0, 2) + 
                                  Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 
                                        2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1))*
                                    Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                  y0*y1 - 2*t*y0*y1 + t*Power(y1, 2)))/
                          Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0 - y1, 2))))/
                Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                  Power(y0 - y1, 2), 
                1.5) - (3*Power(y0 - y1, 2)*(x1*y0 - x0*y1)*
                    Log((2*(-Power(x0, 2) + t*Power(x0, 2) + x0*x1 - 
                                  2*t*x0*x1 + t*Power(x1, 2) - Power(y0, 2) + 
                                  t*Power(y0, 2) + 
                                  Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 
                                        2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1))*
                                    Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                  y0*y1 - 2*t*y0*y1 + t*Power(y1, 2)))/
                          Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0 - y1, 2))))/
                Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                  Power(y0 - y1, 2), 2.5), 
          Sqrt(Power(x0, 2) + Power(y0, 2))/(Power(x0, 2) - 2*x0*x1 + 
                    Power(x1, 2) + Power(y0 - y1, 2)) - 
            Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 2*(-1 + t)*t*x0*x1 + 
                    Power(y0, 2) + 
                    Power(t, 2)*(Power(x1, 2) + Power(y0 - y1, 2)) - 
                    2*t*y0*(y0 - y1))/(Power(x0, 2) - 2*x0*x1 + 
                    Power(x1, 2) + 
                    Power(y0 - y1, 2)) - (y0*(-y0 + y1))/(Sqrt(Power(x0, 2) + 
                      Power(y0, 2))*(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0 - y1, 2))) + ((2*y0 - 2*t*y0 - 2*t*(y0 - y1) + 
                      2*Power(t, 2)*(y0 - y1))*(-y0 + y1))/(2.*
                  Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 2*(-1 + t)*t*x0*x1 + 
                      Power(y0, 2) + 
                      Power(t, 2)*(Power(x1, 2) + Power(y0 - y1, 2)) - 
                      2*t*y0*(y0 - y1))*(Power(x0, 2) - 2*x0*x1 + 
                      Power(x1, 2) + Power(y0 - y1, 2))) + (2*
                    Sqrt(Power(x0, 2) + Power(y0, 2))*(y0 - y1)*(-y0 + y1))/
                Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                  Power(y0 - y1, 2), 
                2) - (2*
                    Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 2*(-1 + t)*t*x0*x1 + 
                        Power(y0, 2) + 
                        Power(t, 2)*(Power(x1, 2) + Power(y0 - y1, 2)) - 
                        2*t*y0*(y0 - y1))*(y0 - y1)*(-y0 + y1))/
                Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                  Power(y0 - y1, 2), 
                2) - ((x0 - x1)*(-(x1*y0) + 
                      x0*y1)*((2*(-2*
                                    y0 + (y0*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)))/
                                      Sqrt(Power(x0, 2) + 
                                        Power(y0, 
                                        2)) + (Sqrt(Power(x0, 2) + 
                                        Power(y0, 2))*(y0 - y1))/
                                      Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                  y1))/Sqrt(Power(x0, 2) - 2*x0*x1 + 
                            Power(x1, 2) + 
                            Power(y0 - y1, 
                                2)) - (2*(y0 - y1)*(-Power(x0, 2) + x0*x1 - 
                                  Power(y0, 2) + 
                                  Sqrt(Power(x0, 2) + Power(y0, 2))*
                                    Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                  y0*y1))/
                          Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0 - y1, 2), 1.5)))/(2.*(Power(x0, 2) - 
                      2*x0*x1 + Power(x1, 2) + 
                      Power(y0 - y1, 2))*(-Power(x0, 2) + x0*x1 - 
                      Power(y0, 2) + 
                      Sqrt(Power(x0, 2) + Power(y0, 2))*
                        Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0 - y1, 2)) + y0*y1)) + ((x0 - 
                      x1)*(-(x1*y0) + 
                      x0*y1)*((2*(-2*y0 + 
                                  2*t*y0 + ((2*y0 - 2*t*y0 - 2*t*(y0 - y1) + 
                                        2*Power(t, 2)*(y0 - y1))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + 
                                        Power(y0 - y1, 2)))/(2.*
                                        Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 
                                        2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - 
                                        y1))) + (Sqrt(Power(-1 + t, 2)*
                                        Power(x0, 2) - 2*(-1 + t)*t*x0*x1 + 
                                        Power(y0, 2) + 
                                        Power(t, 2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1))*(y0 - y1))/
                                      Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                  y1 - 2*t*y1))/
                          Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0 - y1, 
                                2)) - (2*(y0 - y1)*(-Power(x0, 2) + 
                                  t*Power(x0, 2) + x0*x1 - 2*t*x0*x1 + 
                                  t*Power(x1, 2) - Power(y0, 2) + 
                                  t*Power(y0, 2) + 
                                  Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 
                                        2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1))*
                                    Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                  y0*y1 - 2*t*y0*y1 + t*Power(y1, 2)))/
                          Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0 - y1, 2), 1.5)))/(2.*(Power(x0, 2) - 
                      2*x0*x1 + Power(x1, 2) + 
                      Power(y0 - y1, 2))*(-Power(x0, 2) + t*Power(x0, 2) + 
                      x0*x1 - 2*t*x0*x1 + t*Power(x1, 2) - Power(y0, 2) + 
                      t*Power(y0, 2) + 
                      Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                            2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                            Power(t, 2)*(Power(x1, 2) + Power(y0 - y1, 2)) - 
                            2*t*y0*(y0 - y1))*
                        Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0 - y1, 2)) + y0*y1 - 2*t*y0*y1 + 
                      t*Power(y1, 2))) + ((x0 - x1)*x1*
                    Log((2*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + 
                                  Sqrt(Power(x0, 2) + Power(y0, 2))*
                                    Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                  y0*y1))/
                          Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0 - y1, 2))))/
                Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                  Power(y0 - y1, 2), 
                1.5) + (3*(x0 - x1)*(y0 - y1)*(-(x1*y0) + x0*y1)*
                    Log((2*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + 
                                  Sqrt(Power(x0, 2) + Power(y0, 2))*
                                    Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                  y0*y1))/
                          Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0 - y1, 2))))/
                Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                  Power(y0 - y1, 2), 
                2.5) - ((x0 - x1)*x1*
                    Log((2*(-Power(x0, 2) + t*Power(x0, 2) + x0*x1 - 
                                  2*t*x0*x1 + t*Power(x1, 2) - Power(y0, 2) + 
                                  t*Power(y0, 2) + 
                                  Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 
                                        2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1))*
                                    Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                  y0*y1 - 2*t*y0*y1 + t*Power(y1, 2)))/
                          Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0 - y1, 2))))/
                Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                  Power(y0 - y1, 2), 
                1.5) - (3*(x0 - x1)*(y0 - y1)*(-(x1*y0) + x0*y1)*
                    Log((2*(-Power(x0, 2) + t*Power(x0, 2) + x0*x1 - 
                                  2*t*x0*x1 + t*Power(x1, 2) - Power(y0, 2) + 
                                  t*Power(y0, 2) + 
                                  Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 
                                        2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1))*
                                    Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                  y0*y1 - 2*t*y0*y1 + t*Power(y1, 2)))/
                          Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0 - y1, 2))))/
                Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                  Power(y0 - y1, 2), 
                2.5), (t*(x0 - x1)*
                  y0)/(Sqrt(Power(x0, 2) + Power(y0, 2))*(Power(x0, 2) - 
                      2*x0*x1 + Power(x1, 2) + Power(y0 - y1, 2))) - (2*
                    t*(x0 - x1)*Sqrt(Power(x0, 2) + Power(y0, 2))*(y0 - y1))/
                Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                  Power(y0 - y1, 2), 
                2) - (Sqrt(Power(x0, 2) + Power(y0, 2))*(2*y0 - 2*y1)*(y0 - 
                      y1)*(x1*y0 - x0*y1))/(2.*
                  Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0 - y1, 2), 1.5)*
                  Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0, 2) - 2*y0*y1 + Power(y1, 2), 1.5)) + (x1*
                  Sqrt(Power(x0, 2) + Power(y0, 2))*(y0 - 
                      y1))/(Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0 - y1, 2), 1.5)*
                  Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + Power(y0, 2) - 
                      2*y0*y1 + Power(y1, 2))) + (Sqrt(Power(x0, 2) + 
                      Power(y0, 2))*(x1*y0 - x0*y1))/(Power(Power(x0, 2) - 
                      2*x0*x1 + Power(x1, 2) + Power(y0 - y1, 2), 1.5)*
                  Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + Power(y0, 2) - 
                      2*y0*y1 + Power(y1, 2))) + (y0*(y0 - y1)*(x1*y0 - 
                      x0*y1))/(Sqrt(Power(x0, 2) + Power(y0, 2))*
                  Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0 - y1, 2), 1.5)*
                  Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + Power(y0, 2) - 
                      2*y0*y1 + Power(y1, 2))) - (3*
                  Sqrt(Power(x0, 2) + Power(y0, 2))*
                  Power(y0 - y1, 
                    2)*(x1*y0 - x0*y1))/(Power(Power(x0, 2) - 2*x0*x1 + 
                      Power(x1, 2) + Power(y0 - y1, 2), 2.5)*
                  Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + Power(y0, 2) - 
                      2*y0*y1 + Power(y1, 2))) - ((y0 - y1)*(2*y0 - 4*t*y0 + 
                      2*Power(t, 2)*y0 + 2*t*y1 - 2*Power(t, 2)*y1)*(x1*y0 - 
                      x0*y1))/(2.*
                  Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0 - y1, 2), 1.5)*
                  Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + Power(y0, 2) - 
                      2*y0*y1 + Power(y1, 2))*
                  Sqrt(Power(x0, 2) - 2*t*Power(x0, 2) + 
                      Power(t, 2)*Power(x0, 2) + 2*t*x0*x1 - 
                      2*Power(t, 2)*x0*x1 + Power(t, 2)*Power(x1, 2) + 
                      Power(y0, 2) - 2*t*Power(y0, 2) + 
                      Power(t, 2)*Power(y0, 2) + 2*t*y0*y1 - 
                      2*Power(t, 2)*y0*y1 + 
                      Power(t, 2)*Power(y1, 2))) + ((2*y0 - 2*y1)*(y0 - 
                      y1)*(x1*y0 - x0*y1)*
                  Sqrt(Power(x0, 2) - 2*t*Power(x0, 2) + 
                      Power(t, 2)*Power(x0, 2) + 2*t*x0*x1 - 
                      2*Power(t, 2)*x0*x1 + Power(t, 2)*Power(x1, 2) + 
                      Power(y0, 2) - 2*t*Power(y0, 2) + 
                      Power(t, 2)*Power(y0, 2) + 2*t*y0*y1 - 
                      2*Power(t, 2)*y0*y1 + Power(t, 2)*Power(y1, 2)))/(2.*
                  Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0 - y1, 2), 1.5)*
                  Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0, 2) - 2*y0*y1 + Power(y1, 2), 
                    1.5)) - (x1*(y0 - y1)*
                  Sqrt(Power(x0, 2) - 2*t*Power(x0, 2) + 
                      Power(t, 2)*Power(x0, 2) + 2*t*x0*x1 - 
                      2*Power(t, 2)*x0*x1 + Power(t, 2)*Power(x1, 2) + 
                      Power(y0, 2) - 2*t*Power(y0, 2) + 
                      Power(t, 2)*Power(y0, 2) + 2*t*y0*y1 - 
                      2*Power(t, 2)*y0*y1 + 
                      Power(t, 2)*Power(y1, 2)))/(Power(Power(x0, 2) - 
                      2*x0*x1 + Power(x1, 2) + Power(y0 - y1, 2), 1.5)*
                  Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + Power(y0, 2) - 
                      2*y0*y1 + Power(y1, 2))) - ((x1*y0 - x0*y1)*
                  Sqrt(Power(x0, 2) - 2*t*Power(x0, 2) + 
                      Power(t, 2)*Power(x0, 2) + 2*t*x0*x1 - 
                      2*Power(t, 2)*x0*x1 + Power(t, 2)*Power(x1, 2) + 
                      Power(y0, 2) - 2*t*Power(y0, 2) + 
                      Power(t, 2)*Power(y0, 2) + 2*t*y0*y1 - 
                      2*Power(t, 2)*y0*y1 + 
                      Power(t, 2)*Power(y1, 2)))/(Power(Power(x0, 2) - 
                      2*x0*x1 + Power(x1, 2) + Power(y0 - y1, 2), 1.5)*
                  Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + Power(y0, 2) - 
                      2*y0*y1 + Power(y1, 2))) + (3*
                  Power(y0 - y1, 2)*(x1*y0 - x0*y1)*
                  Sqrt(Power(x0, 2) - 2*t*Power(x0, 2) + 
                      Power(t, 2)*Power(x0, 2) + 2*t*x0*x1 - 
                      2*Power(t, 2)*x0*x1 + Power(t, 2)*Power(x1, 2) + 
                      Power(y0, 2) - 2*t*Power(y0, 2) + 
                      Power(t, 2)*Power(y0, 2) + 2*t*y0*y1 - 
                      2*Power(t, 2)*y0*y1 + 
                      Power(t, 2)*Power(y1, 2)))/(Power(Power(x0, 2) - 
                      2*x0*x1 + Power(x1, 2) + Power(y0 - y1, 2), 2.5)*
                  Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + Power(y0, 2) - 
                      2*y0*y1 + Power(y1, 2))) + (t*(y0 - y1)*(-(x1*y0) + 
                      x0*y1)*((2*(-2*
                                    y0 + (y0*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)))/
                                      Sqrt(Power(x0, 2) + 
                                        Power(y0, 
                                        2)) + (Sqrt(Power(x0, 2) + 
                                        Power(y0, 2))*(y0 - y1))/
                                      Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                  y1))/Sqrt(Power(x0, 2) - 2*x0*x1 + 
                            Power(x1, 2) + 
                            Power(y0 - y1, 
                                2)) - (2*(y0 - y1)*(-Power(x0, 2) + x0*x1 - 
                                  Power(y0, 2) + 
                                  Sqrt(Power(x0, 2) + Power(y0, 2))*
                                    Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                  y0*y1))/
                          Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0 - y1, 2), 1.5)))/(2.*(Power(x0, 2) - 
                      2*x0*x1 + Power(x1, 2) + 
                      Power(y0 - y1, 2))*(-Power(x0, 2) + x0*x1 - 
                      Power(y0, 2) + 
                      Sqrt(Power(x0, 2) + Power(y0, 2))*
                        Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0 - y1, 2)) + y0*y1)) - ((-x0 + x1)*
                  Sqrt(Power(x0, 2) + 
                      Power(y0, 
                          2))*(((2*y0 - 2*y1)*(x0*x1 - Power(x1, 2) + y0*y1 - 
                                Power(y1, 2)))/(2.*
                            Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                Power(y0, 2) - 2*y0*y1 + Power(y1, 2), 2)) - 
                      y1/(2.*(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                Power(y0, 2) - 2*y0*y1 + 
                                Power(y1, 2)))))/(Power(x0, 2) - 2*x0*x1 + 
                  Power(x1, 2) + Power(y0, 2) - 2*y0*y1 + 
                  Power(y1, 2)) + ((-x0 + x1)*
                  Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 2*(-1 + t)*x0*x1 - 
                      2*Power(-1 + t, 2)*x0*x1 + Power(x1, 2) + 
                      2*(-1 + t)*Power(x1, 2) + 
                      Power(-1 + t, 2)*Power(x1, 2) + 
                      Power(-1 + t, 2)*Power(y0, 2) - 2*(-1 + t)*y0*y1 - 
                      2*Power(-1 + t, 2)*y0*y1 + Power(y1, 2) + 
                      2*(-1 + t)*Power(y1, 2) + 
                      Power(-1 + t, 2)*
                        Power(y1, 
                          2))*(((2*y0 - 2*y1)*(x0*x1 - Power(x1, 2) + y0*y1 - 
                                Power(y1, 2)))/(2.*
                            Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                Power(y0, 2) - 2*y0*y1 + Power(y1, 2), 2)) - 
                      y1/(2.*(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                Power(y0, 2) - 2*y0*y1 + 
                                Power(y1, 2)))))/(Power(x0, 2) - 2*x0*x1 + 
                  Power(x1, 2) + Power(y0, 2) - 2*y0*y1 + 
                  Power(y1, 2)) + ((-x0 + x1)*
                    Sqrt(Power(x0, 2) + Power(y0, 2))*(2*y0 - 
                        2*y1)*(-0.5 - (x0*x1 - Power(x1, 2) + y0*y1 - 
                              Power(y1, 2))/(2.*(Power(x0, 2) - 2*x0*x1 + 
                                  Power(x1, 2) + Power(y0, 2) - 2*y0*y1 + 
                                  Power(y1, 2)))))/
                Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + Power(y0, 2) - 
                  2*y0*y1 + Power(y1, 2), 
                2) - ((-x0 + x1)*
                  y0*(-0.5 - (x0*x1 - Power(x1, 2) + y0*y1 - 
                            Power(y1, 2))/(2.*(Power(x0, 2) - 2*x0*x1 + 
                                Power(x1, 2) + Power(y0, 2) - 2*y0*y1 + 
                                Power(y1, 2)))))/(Sqrt(Power(x0, 2) + 
                      Power(y0, 2))*(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0, 2) - 2*y0*y1 + Power(y1, 2))) + ((-x0 + 
                      x1)*(2*Power(-1 + t, 2)*y0 - 2*(-1 + t)*y1 - 
                      2*Power(-1 + t, 2)*y1)*((-1 + t)/
                        2. - (x0*x1 - Power(x1, 2) + y0*y1 - 
                            Power(y1, 2))/(2.*(Power(x0, 2) - 2*x0*x1 + 
                                Power(x1, 2) + Power(y0, 2) - 2*y0*y1 + 
                                Power(y1, 2)))))/(2.*(Power(x0, 2) - 
                      2*x0*x1 + Power(x1, 2) + Power(y0, 2) - 2*y0*y1 + 
                      Power(y1, 2))*
                  Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 2*(-1 + t)*x0*x1 - 
                      2*Power(-1 + t, 2)*x0*x1 + Power(x1, 2) + 
                      2*(-1 + t)*Power(x1, 2) + 
                      Power(-1 + t, 2)*Power(x1, 2) + 
                      Power(-1 + t, 2)*Power(y0, 2) - 2*(-1 + t)*y0*y1 - 
                      2*Power(-1 + t, 2)*y0*y1 + Power(y1, 2) + 
                      2*(-1 + t)*Power(y1, 2) + 
                      Power(-1 + t, 2)*Power(y1, 2))) - ((-x0 + x1)*(2*y0 - 
                        2*y1)*Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                        2*(-1 + t)*x0*x1 - 2*Power(-1 + t, 2)*x0*x1 + 
                        Power(x1, 2) + 2*(-1 + t)*Power(x1, 2) + 
                        Power(-1 + t, 2)*Power(x1, 2) + 
                        Power(-1 + t, 2)*Power(y0, 2) - 2*(-1 + t)*y0*y1 - 
                        2*Power(-1 + t, 2)*y0*y1 + Power(y1, 2) + 
                        2*(-1 + t)*Power(y1, 2) + 
                        Power(-1 + t, 2)*Power(y1, 2))*((-1 + t)/
                          2. - (x0*x1 - Power(x1, 2) + y0*y1 - 
                              Power(y1, 2))/(2.*(Power(x0, 2) - 2*x0*x1 + 
                                  Power(x1, 2) + Power(y0, 2) - 2*y0*y1 + 
                                  Power(y1, 2)))))/
                Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + Power(y0, 2) - 
                  2*y0*y1 + Power(y1, 2), 
                2) - ((-x0 + x1)*
                  Power(-(x1*y0) + x0*y1, 
                    2)*((2*y0)/
                          Sqrt(Power(x0, 2) + 
                            Power(y0, 
                                2)) - ((2*y0 - 2*y1)*(-Power(x0, 2) + x0*x1 - 
                                  Power(y0, 2) + y0*y1))/
                          Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0, 2) - 2*y0*y1 + Power(y1, 2), 
                          1.5) + (2*(-2*y0 + y1))/
                          Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0, 2) - 2*y0*y1 + Power(y1, 2))))/(2.*
                  Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0, 2) - 2*y0*y1 + Power(y1, 2), 
                    2.5)*(2*
                        Sqrt(Power(x0, 2) + 
                            Power(y0, 
                                2)) + (2*(-Power(x0, 2) + x0*x1 - 
                                  Power(y0, 2) + y0*y1))/
                          Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0, 2) - 2*y0*y1 + 
                            Power(y1, 2)))) + ((-x0 + x1)*
                  Power(-(x1*y0) + x0*y1, 
                    2)*((2*(2*(-1 + t)*y0 - y1 - 2*(-1 + t)*y1))/
                          Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0, 2) - 2*y0*y1 + 
                            Power(y1, 
                                2)) - ((2*y0 - 2*y1)*((-1 + t)*Power(x0, 2) - 
                                  x0*x1 - 2*(-1 + t)*x0*x1 + 
                                  Power(x1, 2) + (-1 + t)*
                                    Power(x1, 2) + (-1 + t)*Power(y0, 2) - 
                                  y0*y1 - 2*(-1 + t)*y0*y1 + 
                                  Power(y1, 2) + (-1 + t)*Power(y1, 2)))/
                          Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0, 2) - 2*y0*y1 + Power(y1, 2), 
                          1.5) + (2*Power(-1 + t, 2)*y0 - 2*(-1 + t)*y1 - 
                              2*Power(-1 + t, 2)*y1)/
                          Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                            2*(-1 + t)*x0*x1 - 2*Power(-1 + t, 2)*x0*x1 + 
                            Power(x1, 2) + 2*(-1 + t)*Power(x1, 2) + 
                            Power(-1 + t, 2)*Power(x1, 2) + 
                            Power(-1 + t, 2)*Power(y0, 2) - 
                            2*(-1 + t)*y0*y1 - 2*Power(-1 + t, 2)*y0*y1 + 
                            Power(y1, 2) + 2*(-1 + t)*Power(y1, 2) + 
                            Power(-1 + t, 2)*Power(y1, 2))))/(2.*
                  Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0, 2) - 2*y0*y1 + Power(y1, 2), 
                    2.5)*((2*((-1 + t)*Power(x0, 2) - x0*x1 - 
                                  2*(-1 + t)*x0*x1 + 
                                  Power(x1, 2) + (-1 + t)*
                                    Power(x1, 2) + (-1 + t)*Power(y0, 2) - 
                                  y0*y1 - 2*(-1 + t)*y0*y1 + 
                                  Power(y1, 2) + (-1 + t)*Power(y1, 2)))/
                          Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0, 2) - 2*y0*y1 + Power(y1, 2)) + 
                      2*Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                            2*(-1 + t)*x0*x1 - 2*Power(-1 + t, 2)*x0*x1 + 
                            Power(x1, 2) + 2*(-1 + t)*Power(x1, 2) + 
                            Power(-1 + t, 2)*Power(x1, 2) + 
                            Power(-1 + t, 2)*Power(y0, 2) - 
                            2*(-1 + t)*y0*y1 - 2*Power(-1 + t, 2)*y0*y1 + 
                            Power(y1, 2) + 2*(-1 + t)*Power(y1, 2) + 
                            Power(-1 + t, 2)*Power(y1, 2)))) - ((y0 - 
                      y1)*(x1*y0 - x0*y1)*(-Power(x0, 2) + x0*x1 - 
                      Power(y0, 2) + 
                      y0*y1)*((2*(-2*y0 + 
                                  y1 + (Sqrt(Power(x0, 2) + 
                                        Power(y0, 2))*(2*y0 - 2*y1))/(2.*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0, 2) - 
                                        2*y0*y1 + Power(y1, 2))) + (y0*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0, 2) - 
                                        2*y0*y1 + Power(y1, 2)))/
                                      Sqrt(Power(x0, 2) + Power(y0, 2))))/
                          Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0, 2) - 2*y0*y1 + 
                            Power(y1, 
                                2)) - ((2*y0 - 2*y1)*(-Power(x0, 2) + x0*x1 - 
                                  Power(y0, 2) + y0*y1 + 
                                  Sqrt(Power(x0, 2) + Power(y0, 2))*
                                    Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0, 2) - 
                                        2*y0*y1 + Power(y1, 2))))/
                          Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0, 2) - 2*y0*y1 + Power(y1, 2), 1.5)))/(2.*
                  Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0 - y1, 2), 1.5)*
                  Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + Power(y0, 2) - 
                      2*y0*y1 + Power(y1, 2))*(-Power(x0, 2) + x0*x1 - 
                      Power(y0, 2) + y0*y1 + 
                      Sqrt(Power(x0, 2) + Power(y0, 2))*
                        Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0, 2) - 2*y0*y1 + Power(y1, 2)))) + ((y0 - 
                      y1)*(x1*y0 - x0*y1)*(-Power(x0, 2) + x0*x1 - 
                      Power(y0, 2) + 
                      y0*y1)*((2*(-2*y0 + 2*t*y0 + y1 - 
                                  2*t*y1 + ((2*y0 - 4*t*y0 + 
                                        2*Power(t, 2)*y0 + 2*t*y1 - 
                                        2*Power(t, 2)*y1)*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0, 2) - 
                                        2*y0*y1 + Power(y1, 2)))/(2.*
                                        Sqrt(Power(x0, 2) - 
                                        2*t*Power(x0, 2) + 
                                        Power(t, 2)*Power(x0, 2) + 
                                        2*t*x0*x1 - 2*Power(t, 2)*x0*x1 + 
                                        Power(t, 2)*Power(x1, 2) + 
                                        Power(y0, 2) - 2*t*Power(y0, 2) + 
                                        Power(t, 2)*Power(y0, 2) + 
                                        2*t*y0*y1 - 2*Power(t, 2)*y0*y1 + 
                                        Power(t, 2)*Power(y1, 2))) + ((2*y0 - 
                                        2*y1)*
                                        Sqrt(Power(x0, 2) - 
                                        2*t*Power(x0, 2) + 
                                        Power(t, 2)*Power(x0, 2) + 
                                        2*t*x0*x1 - 2*Power(t, 2)*x0*x1 + 
                                        Power(t, 2)*Power(x1, 2) + 
                                        Power(y0, 2) - 2*t*Power(y0, 2) + 
                                        Power(t, 2)*Power(y0, 2) + 
                                        2*t*y0*y1 - 2*Power(t, 2)*y0*y1 + 
                                        Power(t, 2)*Power(y1, 2)))/(2.*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0, 2) - 
                                        2*y0*y1 + Power(y1, 2)))))/
                          Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0, 2) - 2*y0*y1 + 
                            Power(y1, 
                                2)) - ((2*y0 - 2*y1)*(-Power(x0, 2) + 
                                  t*Power(x0, 2) + x0*x1 - 2*t*x0*x1 + 
                                  t*Power(x1, 2) - Power(y0, 2) + 
                                  t*Power(y0, 2) + y0*y1 - 2*t*y0*y1 + 
                                  t*Power(y1, 2) + 
                                  Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0, 2) - 
                                        2*y0*y1 + Power(y1, 2))*
                                    Sqrt(Power(x0, 2) - 2*t*Power(x0, 2) + 
                                        Power(t, 2)*Power(x0, 2) + 
                                        2*t*x0*x1 - 2*Power(t, 2)*x0*x1 + 
                                        Power(t, 2)*Power(x1, 2) + 
                                        Power(y0, 2) - 2*t*Power(y0, 2) + 
                                        Power(t, 2)*Power(y0, 2) + 
                                        2*t*y0*y1 - 2*Power(t, 2)*y0*y1 + 
                                        Power(t, 2)*Power(y1, 2))))/
                          Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0, 2) - 2*y0*y1 + Power(y1, 2), 1.5)))/(2.*
                  Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0 - y1, 2), 1.5)*
                  Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + Power(y0, 2) - 
                      2*y0*y1 + Power(y1, 2))*(-Power(x0, 2) + 
                      t*Power(x0, 2) + x0*x1 - 2*t*x0*x1 + t*Power(x1, 2) - 
                      Power(y0, 2) + t*Power(y0, 2) + y0*y1 - 2*t*y0*y1 + 
                      t*Power(y1, 2) + 
                      Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0, 2) - 2*y0*y1 + Power(y1, 2))*
                        Sqrt(Power(x0, 2) - 2*t*Power(x0, 2) + 
                            Power(t, 2)*Power(x0, 2) + 2*t*x0*x1 - 
                            2*Power(t, 2)*x0*x1 + Power(t, 2)*Power(x1, 2) + 
                            Power(y0, 2) - 2*t*Power(y0, 2) + 
                            Power(t, 2)*Power(y0, 2) + 2*t*y0*y1 - 
                            2*Power(t, 2)*y0*y1 + 
                            Power(t, 2)*Power(y1, 2)))) + (t*(y0 - 
                      y1)*(x1*y0 - x0*y1)*
                  Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + Power(y0, 2) - 
                      2*y0*y1 + 
                      Power(y1, 
                          2))*((2*(-2*y0 + 2*t*y0 + y1 - 
                                  2*t*y1 + ((2*y0 - 4*t*y0 + 
                                        2*Power(t, 2)*y0 + 2*t*y1 - 
                                        2*Power(t, 2)*y1)*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0, 2) - 
                                        2*y0*y1 + Power(y1, 2)))/(2.*
                                        Sqrt(Power(x0, 2) - 
                                        2*t*Power(x0, 2) + 
                                        Power(t, 2)*Power(x0, 2) + 
                                        2*t*x0*x1 - 2*Power(t, 2)*x0*x1 + 
                                        Power(t, 2)*Power(x1, 2) + 
                                        Power(y0, 2) - 2*t*Power(y0, 2) + 
                                        Power(t, 2)*Power(y0, 2) + 
                                        2*t*y0*y1 - 2*Power(t, 2)*y0*y1 + 
                                        Power(t, 2)*Power(y1, 2))) + ((2*y0 - 
                                        2*y1)*
                                        Sqrt(Power(x0, 2) - 
                                        2*t*Power(x0, 2) + 
                                        Power(t, 2)*Power(x0, 2) + 
                                        2*t*x0*x1 - 2*Power(t, 2)*x0*x1 + 
                                        Power(t, 2)*Power(x1, 2) + 
                                        Power(y0, 2) - 2*t*Power(y0, 2) + 
                                        Power(t, 2)*Power(y0, 2) + 
                                        2*t*y0*y1 - 2*Power(t, 2)*y0*y1 + 
                                        Power(t, 2)*Power(y1, 2)))/(2.*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0, 2) - 
                                        2*y0*y1 + Power(y1, 2)))))/
                          Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0, 2) - 2*y0*y1 + 
                            Power(y1, 
                                2)) - ((2*y0 - 2*y1)*(-Power(x0, 2) + 
                                  t*Power(x0, 2) + x0*x1 - 2*t*x0*x1 + 
                                  t*Power(x1, 2) - Power(y0, 2) + 
                                  t*Power(y0, 2) + y0*y1 - 2*t*y0*y1 + 
                                  t*Power(y1, 2) + 
                                  Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0, 2) - 
                                        2*y0*y1 + Power(y1, 2))*
                                    Sqrt(Power(x0, 2) - 2*t*Power(x0, 2) + 
                                        Power(t, 2)*Power(x0, 2) + 
                                        2*t*x0*x1 - 2*Power(t, 2)*x0*x1 + 
                                        Power(t, 2)*Power(x1, 2) + 
                                        Power(y0, 2) - 2*t*Power(y0, 2) + 
                                        Power(t, 2)*Power(y0, 2) + 
                                        2*t*y0*y1 - 2*Power(t, 2)*y0*y1 + 
                                        Power(t, 2)*Power(y1, 2))))/
                          Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0, 2) - 2*y0*y1 + Power(y1, 2), 1.5)))/(2.*
                  Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0 - y1, 2), 
                    1.5)*(-Power(x0, 2) + t*Power(x0, 2) + x0*x1 - 
                      2*t*x0*x1 + t*Power(x1, 2) - Power(y0, 2) + 
                      t*Power(y0, 2) + y0*y1 - 2*t*y0*y1 + t*Power(y1, 2) + 
                      Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0, 2) - 2*y0*y1 + Power(y1, 2))*
                        Sqrt(Power(x0, 2) - 2*t*Power(x0, 2) + 
                            Power(t, 2)*Power(x0, 2) + 2*t*x0*x1 - 
                            2*Power(t, 2)*x0*x1 + Power(t, 2)*Power(x1, 2) + 
                            Power(y0, 2) - 2*t*Power(y0, 2) + 
                            Power(t, 2)*Power(y0, 2) + 2*t*y0*y1 - 
                            2*Power(t, 2)*y0*y1 + 
                            Power(t, 2)*Power(y1, 2)))) - ((y0 - y1)*(x1*y0 - 
                      x0*y1)*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + 
                      y0*y1)*((2*(-2*y0 + 
                                  y1) + (Sqrt(Power(x0, 2) + 
                                        Power(y0, 2))*(2*y0 - 2*y1))/
                                Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0, 2) - 2*y0*y1 + 
                                  Power(y1, 2)) + (2*y0*
                                    Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0, 2) - 
                                        2*y0*y1 + Power(y1, 2)))/
                                Sqrt(Power(x0, 2) + 
                                  Power(y0, 2)))/(2*(-Power(x0, 2) + x0*x1 - 
                                  Power(y0, 2) + y0*y1) + 
                            2*Sqrt(Power(x0, 2) + Power(y0, 2))*
                              Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0, 2) - 2*y0*y1 + 
                                  Power(y1, 2))) - (Sqrt(Power(x0, 2) - 
                                2*x0*x1 + Power(x1, 2) + Power(y0, 2) - 
                                2*y0*y1 + 
                                Power(y1, 
                                    2))*((2*(-2*y0 + 
                                        y1 + (Sqrt(Power(x0, 2) + 
                                        Power(y0, 2))*(2*y0 - 2*y1))/(2.*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0, 2) - 
                                        2*y0*y1 + Power(y1, 2))) + (y0*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0, 2) - 
                                        2*y0*y1 + Power(y1, 2)))/
                                        Sqrt(Power(x0, 2) + Power(y0, 2))))/
                                    Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                      Power(x1, 2) + Power(y0, 2) - 2*y0*y1 + 
                                      Power(y1, 
                                        2)) - ((2*y0 - 2*y1)*(-Power(x0, 2) + 
                                        x0*x1 - Power(y0, 2) + y0*y1 + 
                                        Sqrt(Power(x0, 2) + Power(y0, 2))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0, 2) - 
                                        2*y0*y1 + Power(y1, 2))))/
                                    Power(Power(x0, 2) - 2*x0*x1 + 
                                      Power(x1, 2) + Power(y0, 2) - 2*y0*y1 + 
                                      Power(y1, 2), 1.5)))/(2.*(-Power(x0, 
                                    2) + x0*x1 - Power(y0, 2) + y0*y1 + 
                                Sqrt(Power(x0, 2) + Power(y0, 2))*
                                  Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                      Power(x1, 2) + Power(y0, 2) - 2*y0*y1 + 
                                      Power(y1, 2))))))/(Power(Power(x0, 2) - 
                      2*x0*x1 + Power(x1, 2) + Power(y0 - y1, 2), 
                    1.5)*(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0, 2) - 2*y0*y1 + Power(y1, 2))) + ((y0 - 
                      y1)*(x1*y0 - x0*y1)*(-Power(x0, 2) + x0*x1 - 
                      Power(y0, 2) + 
                      y0*y1)*((2*(-2*y0 + 2*t*y0 + y1 - 
                                  2*t*
                                    y1) + ((2*y0 - 4*t*y0 + 
                                        2*Power(t, 2)*y0 + 2*t*y1 - 
                                        2*Power(t, 2)*y1)*
                                    Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0, 2) - 
                                        2*y0*y1 + Power(y1, 2)))/
                                Sqrt(Power(x0, 2) - 2*t*Power(x0, 2) + 
                                  Power(t, 2)*Power(x0, 2) + 2*t*x0*x1 - 
                                  2*Power(t, 2)*x0*x1 + 
                                  Power(t, 2)*Power(x1, 2) + Power(y0, 2) - 
                                  2*t*Power(y0, 2) + 
                                  Power(t, 2)*Power(y0, 2) + 2*t*y0*y1 - 
                                  2*Power(t, 2)*y0*y1 + 
                                  Power(t, 2)*Power(y1, 2)) + ((2*y0 - 2*y1)*
                                    Sqrt(Power(x0, 2) - 2*t*Power(x0, 2) + 
                                        Power(t, 2)*Power(x0, 2) + 
                                        2*t*x0*x1 - 2*Power(t, 2)*x0*x1 + 
                                        Power(t, 2)*Power(x1, 2) + 
                                        Power(y0, 2) - 2*t*Power(y0, 2) + 
                                        Power(t, 2)*Power(y0, 2) + 
                                        2*t*y0*y1 - 2*Power(t, 2)*y0*y1 + 
                                        Power(t, 2)*Power(y1, 2)))/
                                Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0, 2) - 2*y0*y1 + 
                                  Power(y1, 2)))/(2*(-Power(x0, 2) + 
                                  t*Power(x0, 2) + x0*x1 - 2*t*x0*x1 + 
                                  t*Power(x1, 2) - Power(y0, 2) + 
                                  t*Power(y0, 2) + y0*y1 - 2*t*y0*y1 + 
                                  t*Power(y1, 2)) + 
                            2*Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0, 2) - 2*y0*y1 + Power(y1, 2))*
                              Sqrt(Power(x0, 2) - 2*t*Power(x0, 2) + 
                                  Power(t, 2)*Power(x0, 2) + 2*t*x0*x1 - 
                                  2*Power(t, 2)*x0*x1 + 
                                  Power(t, 2)*Power(x1, 2) + Power(y0, 2) - 
                                  2*t*Power(y0, 2) + 
                                  Power(t, 2)*Power(y0, 2) + 2*t*y0*y1 - 
                                  2*Power(t, 2)*y0*y1 + 
                                  Power(t, 2)*Power(y1, 2))) - (Sqrt(Power(x0,
                                     2) - 2*x0*x1 + Power(x1, 2) + 
                                Power(y0, 2) - 2*y0*y1 + 
                                Power(y1, 
                                    2))*((2*(-2*y0 + 2*t*y0 + y1 - 
                                        2*t*y1 + ((2*y0 - 4*t*y0 + 
                                        2*Power(t, 2)*y0 + 2*t*y1 - 
                                        2*Power(t, 2)*y1)*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0, 2) - 
                                        2*y0*y1 + Power(y1, 2)))/(2.*
                                        Sqrt(Power(x0, 2) - 
                                        2*t*Power(x0, 2) + 
                                        Power(t, 2)*Power(x0, 2) + 
                                        2*t*x0*x1 - 2*Power(t, 2)*x0*x1 + 
                                        Power(t, 2)*Power(x1, 2) + 
                                        Power(y0, 2) - 2*t*Power(y0, 2) + 
                                        Power(t, 2)*Power(y0, 2) + 
                                        2*t*y0*y1 - 2*Power(t, 2)*y0*y1 + 
                                        Power(t, 2)*Power(y1, 2))) + ((2*y0 - 
                                        2*y1)*Sqrt(Power(x0, 2) - 
                                        2*t*Power(x0, 2) + 
                                        Power(t, 2)*Power(x0, 2) + 
                                        2*t*x0*x1 - 2*Power(t, 2)*x0*x1 + 
                                        Power(t, 2)*Power(x1, 2) + 
                                        Power(y0, 2) - 2*t*Power(y0, 2) + 
                                        Power(t, 2)*Power(y0, 2) + 
                                        2*t*y0*y1 - 2*Power(t, 2)*y0*y1 + 
                                        Power(t, 2)*Power(y1, 2)))/(2.*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0, 2) - 
                                        2*y0*y1 + Power(y1, 2)))))/
                                    Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                      Power(x1, 2) + Power(y0, 2) - 2*y0*y1 + 
                                      Power(y1, 
                                        2)) - ((2*y0 - 2*y1)*(-Power(x0, 2) + 
                                        t*Power(x0, 2) + x0*x1 - 2*t*x0*x1 + 
                                        t*Power(x1, 2) - Power(y0, 2) + 
                                        t*Power(y0, 2) + y0*y1 - 2*t*y0*y1 + 
                                        t*Power(y1, 2) + 
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0, 2) - 
                                        2*y0*y1 + Power(y1, 2))*
                                        Sqrt(Power(x0, 2) - 
                                        2*t*Power(x0, 2) + 
                                        Power(t, 2)*Power(x0, 2) + 
                                        2*t*x0*x1 - 2*Power(t, 2)*x0*x1 + 
                                        Power(t, 2)*Power(x1, 2) + 
                                        Power(y0, 2) - 2*t*Power(y0, 2) + 
                                        Power(t, 2)*Power(y0, 2) + 
                                        2*t*y0*y1 - 2*Power(t, 2)*y0*y1 + 
                                        Power(t, 2)*Power(y1, 2))))/
                                    Power(Power(x0, 2) - 2*x0*x1 + 
                                      Power(x1, 2) + Power(y0, 2) - 2*y0*y1 + 
                                      Power(y1, 2), 1.5)))/(2.*(-Power(x0, 
                                    2) + t*Power(x0, 2) + x0*x1 - 2*t*x0*x1 + 
                                t*Power(x1, 2) - Power(y0, 2) + 
                                t*Power(y0, 2) + y0*y1 - 2*t*y0*y1 + 
                                t*Power(y1, 2) + 
                                Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                      Power(y0, 2) - 2*y0*y1 + Power(y1, 2))*
                                  Sqrt(Power(x0, 2) - 2*t*Power(x0, 2) + 
                                      Power(t, 2)*Power(x0, 2) + 2*t*x0*x1 - 
                                      2*Power(t, 2)*x0*x1 + 
                                      Power(t, 2)*Power(x1, 2) + 
                                      Power(y0, 2) - 2*t*Power(y0, 2) + 
                                      Power(t, 2)*Power(y0, 2) + 2*t*y0*y1 - 
                                      2*Power(t, 2)*y0*y1 + 
                                      Power(t, 2)*
                                        Power(y1, 2))))))/(Power(Power(x0, 
                          2) - 2*x0*x1 + Power(x1, 2) + Power(y0 - y1, 2), 
                    1.5)*(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0, 2) - 2*y0*y1 + Power(y1, 2))) - (t*
                    x1*(y0 - y1)*
                    Log((2*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + 
                                  Sqrt(Power(x0, 2) + Power(y0, 2))*
                                    Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                  y0*y1))/
                          Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0 - y1, 2))))/
                Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                  Power(y0 - y1, 2), 
                1.5) + (t*(-(x1*y0) + x0*y1)*
                    Log((2*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + 
                                  Sqrt(Power(x0, 2) + Power(y0, 2))*
                                    Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                  y0*y1))/
                          Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0 - y1, 2))))/
                Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                  Power(y0 - y1, 2), 
                1.5) - (3*t*Power(y0 - y1, 2)*(-(x1*y0) + x0*y1)*
                    Log((2*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + 
                                  Sqrt(Power(x0, 2) + Power(y0, 2))*
                                    Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                  y0*y1))/
                          Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0 - y1, 2))))/
                Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                  Power(y0 - y1, 2), 
                2.5) + (5*(-x0 + x1)*(2*y0 - 2*y1)*Power(-(x1*y0) + x0*y1, 2)*
                  Log(2*Sqrt(Power(x0, 2) + 
                            Power(y0, 
                                2)) + (2*(-Power(x0, 2) + x0*x1 - 
                                  Power(y0, 2) + y0*y1))/
                          Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0, 2) - 2*y0*y1 + Power(y1, 2))))/(4.*
                  Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0, 2) - 2*y0*y1 + Power(y1, 2), 
                    3.5)) + (x1*(-x0 + x1)*(-(x1*y0) + x0*y1)*
                    Log(2*Sqrt(Power(x0, 2) + 
                              Power(y0, 
                                  2)) + (2*(-Power(x0, 2) + x0*x1 - 
                                    Power(y0, 2) + y0*y1))/
                            Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                              Power(y0, 2) - 2*y0*y1 + Power(y1, 2))))/
                Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + Power(y0, 2) - 
                  2*y0*y1 + Power(y1, 2), 
                2.5) + ((2*y0 - 2*y1)*(y0 - y1)*(x1*y0 - 
                      x0*y1)*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + y0*y1)*
                  Log((2*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + y0*y1 + 
                                Sqrt(Power(x0, 2) + Power(y0, 2))*
                                  Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                      Power(x1, 2) + Power(y0, 2) - 2*y0*y1 + 
                                      Power(y1, 2))))/
                        Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                          Power(y0, 2) - 2*y0*y1 + 
                          Power(y1, 2))))/(Power(Power(x0, 2) - 2*x0*x1 + 
                      Power(x1, 2) + Power(y0 - y1, 2), 1.5)*
                  Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0, 2) - 2*y0*y1 + Power(y1, 2), 
                    2)) - ((y0 - y1)*(-2*y0 + y1)*(x1*y0 - x0*y1)*
                  Log((2*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + y0*y1 + 
                                Sqrt(Power(x0, 2) + Power(y0, 2))*
                                  Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                      Power(x1, 2) + Power(y0, 2) - 2*y0*y1 + 
                                      Power(y1, 2))))/
                        Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                          Power(y0, 2) - 2*y0*y1 + 
                          Power(y1, 2))))/(Power(Power(x0, 2) - 2*x0*x1 + 
                      Power(x1, 2) + Power(y0 - y1, 2), 
                    1.5)*(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0, 2) - 2*y0*y1 + Power(y1, 2))) - (x1*(y0 - 
                      y1)*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + y0*y1)*
                  Log((2*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + y0*y1 + 
                                Sqrt(Power(x0, 2) + Power(y0, 2))*
                                  Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                      Power(x1, 2) + Power(y0, 2) - 2*y0*y1 + 
                                      Power(y1, 2))))/
                        Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                          Power(y0, 2) - 2*y0*y1 + 
                          Power(y1, 2))))/(Power(Power(x0, 2) - 2*x0*x1 + 
                      Power(x1, 2) + Power(y0 - y1, 2), 
                    1.5)*(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0, 2) - 2*y0*y1 + Power(y1, 2))) - ((x1*y0 - 
                      x0*y1)*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + y0*y1)*
                  Log((2*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + y0*y1 + 
                                Sqrt(Power(x0, 2) + Power(y0, 2))*
                                  Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                      Power(x1, 2) + Power(y0, 2) - 2*y0*y1 + 
                                      Power(y1, 2))))/
                        Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                          Power(y0, 2) - 2*y0*y1 + 
                          Power(y1, 2))))/(Power(Power(x0, 2) - 2*x0*x1 + 
                      Power(x1, 2) + Power(y0 - y1, 2), 
                    1.5)*(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0, 2) - 2*y0*y1 + Power(y1, 2))) + (3*
                  Power(y0 - y1, 
                    2)*(x1*y0 - x0*y1)*(-Power(x0, 2) + x0*x1 - 
                      Power(y0, 2) + y0*y1)*
                  Log((2*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + y0*y1 + 
                                Sqrt(Power(x0, 2) + Power(y0, 2))*
                                  Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                      Power(x1, 2) + Power(y0, 2) - 2*y0*y1 + 
                                      Power(y1, 2))))/
                        Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                          Power(y0, 2) - 2*y0*y1 + 
                          Power(y1, 2))))/(Power(Power(x0, 2) - 2*x0*x1 + 
                      Power(x1, 2) + Power(y0 - y1, 2), 
                    2.5)*(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0, 2) - 2*y0*y1 + Power(y1, 2))) + ((2*y0 - 
                      2*y1)*(y0 - y1)*(x1*y0 - x0*y1)*(-Power(x0, 2) + 
                      x0*x1 - Power(y0, 2) + 
                      y0*y1)*(-Log((2*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + 
                                      y0*y1 + 
                                      Sqrt(Power(x0, 2) + Power(y0, 2))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0, 2) - 
                                        2*y0*y1 + Power(y1, 2))))/
                              Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                Power(y0, 2) - 2*y0*y1 + Power(y1, 2))) + 
                      Log(2*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + y0*y1) + 
                            2*Sqrt(Power(x0, 2) + Power(y0, 2))*
                              Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0, 2) - 2*y0*y1 + 
                                  Power(y1, 2)))))/(Power(Power(x0, 2) - 
                      2*x0*x1 + Power(x1, 2) + Power(y0 - y1, 2), 1.5)*
                  Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0, 2) - 2*y0*y1 + Power(y1, 2), 
                    2)) - ((y0 - y1)*(-2*y0 + y1)*(x1*y0 - 
                      x0*y1)*(-Log((2*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + 
                                      y0*y1 + 
                                      Sqrt(Power(x0, 2) + Power(y0, 2))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0, 2) - 
                                        2*y0*y1 + Power(y1, 2))))/
                              Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                Power(y0, 2) - 2*y0*y1 + Power(y1, 2))) + 
                      Log(2*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + y0*y1) + 
                            2*Sqrt(Power(x0, 2) + Power(y0, 2))*
                              Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0, 2) - 2*y0*y1 + 
                                  Power(y1, 2)))))/(Power(Power(x0, 2) - 
                      2*x0*x1 + Power(x1, 2) + Power(y0 - y1, 2), 
                    1.5)*(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0, 2) - 2*y0*y1 + Power(y1, 2))) - (x1*(y0 - 
                      y1)*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + 
                      y0*y1)*(-Log((2*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + 
                                      y0*y1 + 
                                      Sqrt(Power(x0, 2) + Power(y0, 2))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0, 2) - 
                                        2*y0*y1 + Power(y1, 2))))/
                              Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                Power(y0, 2) - 2*y0*y1 + Power(y1, 2))) + 
                      Log(2*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + y0*y1) + 
                            2*Sqrt(Power(x0, 2) + Power(y0, 2))*
                              Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0, 2) - 2*y0*y1 + 
                                  Power(y1, 2)))))/(Power(Power(x0, 2) - 
                      2*x0*x1 + Power(x1, 2) + Power(y0 - y1, 2), 
                    1.5)*(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0, 2) - 2*y0*y1 + Power(y1, 2))) - ((x1*y0 - 
                      x0*y1)*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + 
                      y0*y1)*(-Log((2*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + 
                                      y0*y1 + 
                                      Sqrt(Power(x0, 2) + Power(y0, 2))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0, 2) - 
                                        2*y0*y1 + Power(y1, 2))))/
                              Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                Power(y0, 2) - 2*y0*y1 + Power(y1, 2))) + 
                      Log(2*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + y0*y1) + 
                            2*Sqrt(Power(x0, 2) + Power(y0, 2))*
                              Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0, 2) - 2*y0*y1 + 
                                  Power(y1, 2)))))/(Power(Power(x0, 2) - 
                      2*x0*x1 + Power(x1, 2) + Power(y0 - y1, 2), 
                    1.5)*(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0, 2) - 2*y0*y1 + Power(y1, 2))) + (3*
                  Power(y0 - y1, 
                    2)*(x1*y0 - x0*y1)*(-Power(x0, 2) + x0*x1 - 
                      Power(y0, 2) + 
                      y0*y1)*(-Log((2*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + 
                                      y0*y1 + 
                                      Sqrt(Power(x0, 2) + Power(y0, 2))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0, 2) - 
                                        2*y0*y1 + Power(y1, 2))))/
                              Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                Power(y0, 2) - 2*y0*y1 + Power(y1, 2))) + 
                      Log(2*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + y0*y1) + 
                            2*Sqrt(Power(x0, 2) + Power(y0, 2))*
                              Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0, 2) - 2*y0*y1 + 
                                  Power(y1, 2)))))/(Power(Power(x0, 2) - 
                      2*x0*x1 + Power(x1, 2) + Power(y0 - y1, 2), 
                    2.5)*(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0, 2) - 2*y0*y1 + Power(y1, 2))) - (5*(-x0 + 
                      x1)*(2*y0 - 2*y1)*Power(-(x1*y0) + x0*y1, 2)*
                  Log((2*((-1 + t)*Power(x0, 2) - x0*x1 - 2*(-1 + t)*x0*x1 + 
                                  Power(x1, 2) + (-1 + t)*
                                    Power(x1, 2) + (-1 + t)*Power(y0, 2) - 
                                  y0*y1 - 2*(-1 + t)*y0*y1 + 
                                  Power(y1, 2) + (-1 + t)*Power(y1, 2)))/
                          Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0, 2) - 2*y0*y1 + Power(y1, 2)) + 
                      2*Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                            2*(-1 + t)*x0*x1 - 2*Power(-1 + t, 2)*x0*x1 + 
                            Power(x1, 2) + 2*(-1 + t)*Power(x1, 2) + 
                            Power(-1 + t, 2)*Power(x1, 2) + 
                            Power(-1 + t, 2)*Power(y0, 2) - 
                            2*(-1 + t)*y0*y1 - 2*Power(-1 + t, 2)*y0*y1 + 
                            Power(y1, 2) + 2*(-1 + t)*Power(y1, 2) + 
                            Power(-1 + t, 2)*Power(y1, 2))))/(4.*
                  Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0, 2) - 2*y0*y1 + Power(y1, 2), 
                    3.5)) - (x1*(-x0 + x1)*(-(x1*y0) + x0*y1)*
                    Log((2*((-1 + t)*Power(x0, 2) - x0*x1 - 
                                    2*(-1 + t)*x0*x1 + 
                                    Power(x1, 2) + (-1 + t)*
                                      Power(x1, 2) + (-1 + t)*Power(y0, 2) - 
                                    y0*y1 - 2*(-1 + t)*y0*y1 + 
                                    Power(y1, 2) + (-1 + t)*Power(y1, 2)))/
                            Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                              Power(y0, 2) - 2*y0*y1 + Power(y1, 2)) + 
                        2*Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                              2*(-1 + t)*x0*x1 - 2*Power(-1 + t, 2)*x0*x1 + 
                              Power(x1, 2) + 2*(-1 + t)*Power(x1, 2) + 
                              Power(-1 + t, 2)*Power(x1, 2) + 
                              Power(-1 + t, 2)*Power(y0, 2) - 
                              2*(-1 + t)*y0*y1 - 2*Power(-1 + t, 2)*y0*y1 + 
                              Power(y1, 2) + 2*(-1 + t)*Power(y1, 2) + 
                              Power(-1 + t, 2)*Power(y1, 2))))/
                Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + Power(y0, 2) - 
                  2*y0*y1 + Power(y1, 2), 
                2.5) + (t*x1*(y0 - y1)*
                    Log((2*(-Power(x0, 2) + t*Power(x0, 2) + x0*x1 - 
                                  2*t*x0*x1 + t*Power(x1, 2) - Power(y0, 2) + 
                                  t*Power(y0, 2) + y0*y1 - 2*t*y0*y1 + 
                                  t*Power(y1, 2) + 
                                  Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0, 2) - 
                                        2*y0*y1 + Power(y1, 2))*
                                    Sqrt(Power(x0, 2) - 2*t*Power(x0, 2) + 
                                        Power(t, 2)*Power(x0, 2) + 
                                        2*t*x0*x1 - 2*Power(t, 2)*x0*x1 + 
                                        Power(t, 2)*Power(x1, 2) + 
                                        Power(y0, 2) - 2*t*Power(y0, 2) + 
                                        Power(t, 2)*Power(y0, 2) + 
                                        2*t*y0*y1 - 2*Power(t, 2)*y0*y1 + 
                                        Power(t, 2)*Power(y1, 2))))/
                          Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0, 2) - 2*y0*y1 + Power(y1, 2))))/
                Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                  Power(y0 - y1, 2), 
                1.5) + (t*(x1*y0 - x0*y1)*
                    Log((2*(-Power(x0, 2) + t*Power(x0, 2) + x0*x1 - 
                                  2*t*x0*x1 + t*Power(x1, 2) - Power(y0, 2) + 
                                  t*Power(y0, 2) + y0*y1 - 2*t*y0*y1 + 
                                  t*Power(y1, 2) + 
                                  Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0, 2) - 
                                        2*y0*y1 + Power(y1, 2))*
                                    Sqrt(Power(x0, 2) - 2*t*Power(x0, 2) + 
                                        Power(t, 2)*Power(x0, 2) + 
                                        2*t*x0*x1 - 2*Power(t, 2)*x0*x1 + 
                                        Power(t, 2)*Power(x1, 2) + 
                                        Power(y0, 2) - 2*t*Power(y0, 2) + 
                                        Power(t, 2)*Power(y0, 2) + 
                                        2*t*y0*y1 - 2*Power(t, 2)*y0*y1 + 
                                        Power(t, 2)*Power(y1, 2))))/
                          Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0, 2) - 2*y0*y1 + Power(y1, 2))))/
                Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                  Power(y0 - y1, 2), 
                1.5) - (3*t*Power(y0 - y1, 2)*(x1*y0 - x0*y1)*
                    Log((2*(-Power(x0, 2) + t*Power(x0, 2) + x0*x1 - 
                                  2*t*x0*x1 + t*Power(x1, 2) - Power(y0, 2) + 
                                  t*Power(y0, 2) + y0*y1 - 2*t*y0*y1 + 
                                  t*Power(y1, 2) + 
                                  Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0, 2) - 
                                        2*y0*y1 + Power(y1, 2))*
                                    Sqrt(Power(x0, 2) - 2*t*Power(x0, 2) + 
                                        Power(t, 2)*Power(x0, 2) + 
                                        2*t*x0*x1 - 2*Power(t, 2)*x0*x1 + 
                                        Power(t, 2)*Power(x1, 2) + 
                                        Power(y0, 2) - 2*t*Power(y0, 2) + 
                                        Power(t, 2)*Power(y0, 2) + 
                                        2*t*y0*y1 - 2*Power(t, 2)*y0*y1 + 
                                        Power(t, 2)*Power(y1, 2))))/
                          Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0, 2) - 2*y0*y1 + Power(y1, 2))))/
                Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                  Power(y0 - y1, 2), 
                2.5) - ((2*y0 - 2*y1)*(y0 - y1)*(x1*y0 - 
                      x0*y1)*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + y0*y1)*
                  Log((2*(-Power(x0, 2) + t*Power(x0, 2) + x0*x1 - 
                                2*t*x0*x1 + t*Power(x1, 2) - Power(y0, 2) + 
                                t*Power(y0, 2) + y0*y1 - 2*t*y0*y1 + 
                                t*Power(y1, 2) + 
                                Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                      Power(y0, 2) - 2*y0*y1 + Power(y1, 2))*
                                  Sqrt(Power(x0, 2) - 2*t*Power(x0, 2) + 
                                      Power(t, 2)*Power(x0, 2) + 2*t*x0*x1 - 
                                      2*Power(t, 2)*x0*x1 + 
                                      Power(t, 2)*Power(x1, 2) + 
                                      Power(y0, 2) - 2*t*Power(y0, 2) + 
                                      Power(t, 2)*Power(y0, 2) + 2*t*y0*y1 - 
                                      2*Power(t, 2)*y0*y1 + 
                                      Power(t, 2)*Power(y1, 2))))/
                        Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                          Power(y0, 2) - 2*y0*y1 + 
                          Power(y1, 2))))/(Power(Power(x0, 2) - 2*x0*x1 + 
                      Power(x1, 2) + Power(y0 - y1, 2), 1.5)*
                  Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0, 2) - 2*y0*y1 + Power(y1, 2), 
                    2)) + ((y0 - y1)*(-2*y0 + y1)*(x1*y0 - x0*y1)*
                  Log((2*(-Power(x0, 2) + t*Power(x0, 2) + x0*x1 - 
                                2*t*x0*x1 + t*Power(x1, 2) - Power(y0, 2) + 
                                t*Power(y0, 2) + y0*y1 - 2*t*y0*y1 + 
                                t*Power(y1, 2) + 
                                Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                      Power(y0, 2) - 2*y0*y1 + Power(y1, 2))*
                                  Sqrt(Power(x0, 2) - 2*t*Power(x0, 2) + 
                                      Power(t, 2)*Power(x0, 2) + 2*t*x0*x1 - 
                                      2*Power(t, 2)*x0*x1 + 
                                      Power(t, 2)*Power(x1, 2) + 
                                      Power(y0, 2) - 2*t*Power(y0, 2) + 
                                      Power(t, 2)*Power(y0, 2) + 2*t*y0*y1 - 
                                      2*Power(t, 2)*y0*y1 + 
                                      Power(t, 2)*Power(y1, 2))))/
                        Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                          Power(y0, 2) - 2*y0*y1 + 
                          Power(y1, 2))))/(Power(Power(x0, 2) - 2*x0*x1 + 
                      Power(x1, 2) + Power(y0 - y1, 2), 
                    1.5)*(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0, 2) - 2*y0*y1 + Power(y1, 2))) + (x1*(y0 - 
                      y1)*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + y0*y1)*
                  Log((2*(-Power(x0, 2) + t*Power(x0, 2) + x0*x1 - 
                                2*t*x0*x1 + t*Power(x1, 2) - Power(y0, 2) + 
                                t*Power(y0, 2) + y0*y1 - 2*t*y0*y1 + 
                                t*Power(y1, 2) + 
                                Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                      Power(y0, 2) - 2*y0*y1 + Power(y1, 2))*
                                  Sqrt(Power(x0, 2) - 2*t*Power(x0, 2) + 
                                      Power(t, 2)*Power(x0, 2) + 2*t*x0*x1 - 
                                      2*Power(t, 2)*x0*x1 + 
                                      Power(t, 2)*Power(x1, 2) + 
                                      Power(y0, 2) - 2*t*Power(y0, 2) + 
                                      Power(t, 2)*Power(y0, 2) + 2*t*y0*y1 - 
                                      2*Power(t, 2)*y0*y1 + 
                                      Power(t, 2)*Power(y1, 2))))/
                        Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                          Power(y0, 2) - 2*y0*y1 + 
                          Power(y1, 2))))/(Power(Power(x0, 2) - 2*x0*x1 + 
                      Power(x1, 2) + Power(y0 - y1, 2), 
                    1.5)*(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0, 2) - 2*y0*y1 + Power(y1, 2))) + ((x1*y0 - 
                      x0*y1)*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + y0*y1)*
                  Log((2*(-Power(x0, 2) + t*Power(x0, 2) + x0*x1 - 
                                2*t*x0*x1 + t*Power(x1, 2) - Power(y0, 2) + 
                                t*Power(y0, 2) + y0*y1 - 2*t*y0*y1 + 
                                t*Power(y1, 2) + 
                                Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                      Power(y0, 2) - 2*y0*y1 + Power(y1, 2))*
                                  Sqrt(Power(x0, 2) - 2*t*Power(x0, 2) + 
                                      Power(t, 2)*Power(x0, 2) + 2*t*x0*x1 - 
                                      2*Power(t, 2)*x0*x1 + 
                                      Power(t, 2)*Power(x1, 2) + 
                                      Power(y0, 2) - 2*t*Power(y0, 2) + 
                                      Power(t, 2)*Power(y0, 2) + 2*t*y0*y1 - 
                                      2*Power(t, 2)*y0*y1 + 
                                      Power(t, 2)*Power(y1, 2))))/
                        Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                          Power(y0, 2) - 2*y0*y1 + 
                          Power(y1, 2))))/(Power(Power(x0, 2) - 2*x0*x1 + 
                      Power(x1, 2) + Power(y0 - y1, 2), 
                    1.5)*(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0, 2) - 2*y0*y1 + Power(y1, 2))) - (3*
                  Power(y0 - y1, 
                    2)*(x1*y0 - x0*y1)*(-Power(x0, 2) + x0*x1 - 
                      Power(y0, 2) + y0*y1)*
                  Log((2*(-Power(x0, 2) + t*Power(x0, 2) + x0*x1 - 
                                2*t*x0*x1 + t*Power(x1, 2) - Power(y0, 2) + 
                                t*Power(y0, 2) + y0*y1 - 2*t*y0*y1 + 
                                t*Power(y1, 2) + 
                                Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                      Power(y0, 2) - 2*y0*y1 + Power(y1, 2))*
                                  Sqrt(Power(x0, 2) - 2*t*Power(x0, 2) + 
                                      Power(t, 2)*Power(x0, 2) + 2*t*x0*x1 - 
                                      2*Power(t, 2)*x0*x1 + 
                                      Power(t, 2)*Power(x1, 2) + 
                                      Power(y0, 2) - 2*t*Power(y0, 2) + 
                                      Power(t, 2)*Power(y0, 2) + 2*t*y0*y1 - 
                                      2*Power(t, 2)*y0*y1 + 
                                      Power(t, 2)*Power(y1, 2))))/
                        Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                          Power(y0, 2) - 2*y0*y1 + 
                          Power(y1, 2))))/(Power(Power(x0, 2) - 2*x0*x1 + 
                      Power(x1, 2) + Power(y0 - y1, 2), 
                    2.5)*(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0, 2) - 2*y0*y1 + Power(y1, 2))) - ((2*y0 - 
                      2*y1)*(y0 - y1)*(x1*y0 - x0*y1)*(-Power(x0, 2) + 
                      x0*x1 - Power(y0, 2) + 
                      y0*y1)*(-Log((2*(-Power(x0, 2) + t*Power(x0, 2) + 
                                      x0*x1 - 2*t*x0*x1 + t*Power(x1, 2) - 
                                      Power(y0, 2) + t*Power(y0, 2) + y0*y1 - 
                                      2*t*y0*y1 + t*Power(y1, 2) + 
                                      Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0, 2) - 
                                        2*y0*y1 + Power(y1, 2))*
                                        Sqrt(Power(x0, 2) - 
                                        2*t*Power(x0, 2) + 
                                        Power(t, 2)*Power(x0, 2) + 
                                        2*t*x0*x1 - 2*Power(t, 2)*x0*x1 + 
                                        Power(t, 2)*Power(x1, 2) + 
                                        Power(y0, 2) - 2*t*Power(y0, 2) + 
                                        Power(t, 2)*Power(y0, 2) + 
                                        2*t*y0*y1 - 2*Power(t, 2)*y0*y1 + 
                                        Power(t, 2)*Power(y1, 2))))/
                              Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                Power(y0, 2) - 2*y0*y1 + Power(y1, 2))) + 
                      Log(2*(-Power(x0, 2) + t*Power(x0, 2) + x0*x1 - 
                                  2*t*x0*x1 + t*Power(x1, 2) - Power(y0, 2) + 
                                  t*Power(y0, 2) + y0*y1 - 2*t*y0*y1 + 
                                  t*Power(y1, 2)) + 
                            2*Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0, 2) - 2*y0*y1 + Power(y1, 2))*
                              Sqrt(Power(x0, 2) - 2*t*Power(x0, 2) + 
                                  Power(t, 2)*Power(x0, 2) + 2*t*x0*x1 - 
                                  2*Power(t, 2)*x0*x1 + 
                                  Power(t, 2)*Power(x1, 2) + Power(y0, 2) - 
                                  2*t*Power(y0, 2) + 
                                  Power(t, 2)*Power(y0, 2) + 2*t*y0*y1 - 
                                  2*Power(t, 2)*y0*y1 + 
                                  Power(t, 2)*
                                    Power(y1, 2)))))/(Power(Power(x0, 2) - 
                      2*x0*x1 + Power(x1, 2) + Power(y0 - y1, 2), 1.5)*
                  Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0, 2) - 2*y0*y1 + Power(y1, 2), 
                    2)) + ((y0 - y1)*(-2*y0 + y1)*(x1*y0 - 
                      x0*y1)*(-Log((2*(-Power(x0, 2) + t*Power(x0, 2) + 
                                      x0*x1 - 2*t*x0*x1 + t*Power(x1, 2) - 
                                      Power(y0, 2) + t*Power(y0, 2) + y0*y1 - 
                                      2*t*y0*y1 + t*Power(y1, 2) + 
                                      Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0, 2) - 
                                        2*y0*y1 + Power(y1, 2))*
                                        Sqrt(Power(x0, 2) - 
                                        2*t*Power(x0, 2) + 
                                        Power(t, 2)*Power(x0, 2) + 
                                        2*t*x0*x1 - 2*Power(t, 2)*x0*x1 + 
                                        Power(t, 2)*Power(x1, 2) + 
                                        Power(y0, 2) - 2*t*Power(y0, 2) + 
                                        Power(t, 2)*Power(y0, 2) + 
                                        2*t*y0*y1 - 2*Power(t, 2)*y0*y1 + 
                                        Power(t, 2)*Power(y1, 2))))/
                              Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                Power(y0, 2) - 2*y0*y1 + Power(y1, 2))) + 
                      Log(2*(-Power(x0, 2) + t*Power(x0, 2) + x0*x1 - 
                                  2*t*x0*x1 + t*Power(x1, 2) - Power(y0, 2) + 
                                  t*Power(y0, 2) + y0*y1 - 2*t*y0*y1 + 
                                  t*Power(y1, 2)) + 
                            2*Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0, 2) - 2*y0*y1 + Power(y1, 2))*
                              Sqrt(Power(x0, 2) - 2*t*Power(x0, 2) + 
                                  Power(t, 2)*Power(x0, 2) + 2*t*x0*x1 - 
                                  2*Power(t, 2)*x0*x1 + 
                                  Power(t, 2)*Power(x1, 2) + Power(y0, 2) - 
                                  2*t*Power(y0, 2) + 
                                  Power(t, 2)*Power(y0, 2) + 2*t*y0*y1 - 
                                  2*Power(t, 2)*y0*y1 + 
                                  Power(t, 2)*
                                    Power(y1, 2)))))/(Power(Power(x0, 2) - 
                      2*x0*x1 + Power(x1, 2) + Power(y0 - y1, 2), 
                    1.5)*(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0, 2) - 2*y0*y1 + Power(y1, 2))) + (x1*(y0 - 
                      y1)*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + 
                      y0*y1)*(-Log((2*(-Power(x0, 2) + t*Power(x0, 2) + 
                                      x0*x1 - 2*t*x0*x1 + t*Power(x1, 2) - 
                                      Power(y0, 2) + t*Power(y0, 2) + y0*y1 - 
                                      2*t*y0*y1 + t*Power(y1, 2) + 
                                      Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0, 2) - 
                                        2*y0*y1 + Power(y1, 2))*
                                        Sqrt(Power(x0, 2) - 
                                        2*t*Power(x0, 2) + 
                                        Power(t, 2)*Power(x0, 2) + 
                                        2*t*x0*x1 - 2*Power(t, 2)*x0*x1 + 
                                        Power(t, 2)*Power(x1, 2) + 
                                        Power(y0, 2) - 2*t*Power(y0, 2) + 
                                        Power(t, 2)*Power(y0, 2) + 
                                        2*t*y0*y1 - 2*Power(t, 2)*y0*y1 + 
                                        Power(t, 2)*Power(y1, 2))))/
                              Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                Power(y0, 2) - 2*y0*y1 + Power(y1, 2))) + 
                      Log(2*(-Power(x0, 2) + t*Power(x0, 2) + x0*x1 - 
                                  2*t*x0*x1 + t*Power(x1, 2) - Power(y0, 2) + 
                                  t*Power(y0, 2) + y0*y1 - 2*t*y0*y1 + 
                                  t*Power(y1, 2)) + 
                            2*Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0, 2) - 2*y0*y1 + Power(y1, 2))*
                              Sqrt(Power(x0, 2) - 2*t*Power(x0, 2) + 
                                  Power(t, 2)*Power(x0, 2) + 2*t*x0*x1 - 
                                  2*Power(t, 2)*x0*x1 + 
                                  Power(t, 2)*Power(x1, 2) + Power(y0, 2) - 
                                  2*t*Power(y0, 2) + 
                                  Power(t, 2)*Power(y0, 2) + 2*t*y0*y1 - 
                                  2*Power(t, 2)*y0*y1 + 
                                  Power(t, 2)*
                                    Power(y1, 2)))))/(Power(Power(x0, 2) - 
                      2*x0*x1 + Power(x1, 2) + Power(y0 - y1, 2), 
                    1.5)*(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0, 2) - 2*y0*y1 + Power(y1, 2))) + ((x1*y0 - 
                      x0*y1)*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + 
                      y0*y1)*(-Log((2*(-Power(x0, 2) + t*Power(x0, 2) + 
                                      x0*x1 - 2*t*x0*x1 + t*Power(x1, 2) - 
                                      Power(y0, 2) + t*Power(y0, 2) + y0*y1 - 
                                      2*t*y0*y1 + t*Power(y1, 2) + 
                                      Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0, 2) - 
                                        2*y0*y1 + Power(y1, 2))*
                                        Sqrt(Power(x0, 2) - 
                                        2*t*Power(x0, 2) + 
                                        Power(t, 2)*Power(x0, 2) + 
                                        2*t*x0*x1 - 2*Power(t, 2)*x0*x1 + 
                                        Power(t, 2)*Power(x1, 2) + 
                                        Power(y0, 2) - 2*t*Power(y0, 2) + 
                                        Power(t, 2)*Power(y0, 2) + 
                                        2*t*y0*y1 - 2*Power(t, 2)*y0*y1 + 
                                        Power(t, 2)*Power(y1, 2))))/
                              Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                Power(y0, 2) - 2*y0*y1 + Power(y1, 2))) + 
                      Log(2*(-Power(x0, 2) + t*Power(x0, 2) + x0*x1 - 
                                  2*t*x0*x1 + t*Power(x1, 2) - Power(y0, 2) + 
                                  t*Power(y0, 2) + y0*y1 - 2*t*y0*y1 + 
                                  t*Power(y1, 2)) + 
                            2*Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0, 2) - 2*y0*y1 + Power(y1, 2))*
                              Sqrt(Power(x0, 2) - 2*t*Power(x0, 2) + 
                                  Power(t, 2)*Power(x0, 2) + 2*t*x0*x1 - 
                                  2*Power(t, 2)*x0*x1 + 
                                  Power(t, 2)*Power(x1, 2) + Power(y0, 2) - 
                                  2*t*Power(y0, 2) + 
                                  Power(t, 2)*Power(y0, 2) + 2*t*y0*y1 - 
                                  2*Power(t, 2)*y0*y1 + 
                                  Power(t, 2)*
                                    Power(y1, 2)))))/(Power(Power(x0, 2) - 
                      2*x0*x1 + Power(x1, 2) + Power(y0 - y1, 2), 
                    1.5)*(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0, 2) - 2*y0*y1 + Power(y1, 2))) - (3*
                  Power(y0 - y1, 
                    2)*(x1*y0 - x0*y1)*(-Power(x0, 2) + x0*x1 - 
                      Power(y0, 2) + 
                      y0*y1)*(-Log((2*(-Power(x0, 2) + t*Power(x0, 2) + 
                                      x0*x1 - 2*t*x0*x1 + t*Power(x1, 2) - 
                                      Power(y0, 2) + t*Power(y0, 2) + y0*y1 - 
                                      2*t*y0*y1 + t*Power(y1, 2) + 
                                      Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0, 2) - 
                                        2*y0*y1 + Power(y1, 2))*
                                        Sqrt(Power(x0, 2) - 
                                        2*t*Power(x0, 2) + 
                                        Power(t, 2)*Power(x0, 2) + 
                                        2*t*x0*x1 - 2*Power(t, 2)*x0*x1 + 
                                        Power(t, 2)*Power(x1, 2) + 
                                        Power(y0, 2) - 2*t*Power(y0, 2) + 
                                        Power(t, 2)*Power(y0, 2) + 
                                        2*t*y0*y1 - 2*Power(t, 2)*y0*y1 + 
                                        Power(t, 2)*Power(y1, 2))))/
                              Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                Power(y0, 2) - 2*y0*y1 + Power(y1, 2))) + 
                      Log(2*(-Power(x0, 2) + t*Power(x0, 2) + x0*x1 - 
                                  2*t*x0*x1 + t*Power(x1, 2) - Power(y0, 2) + 
                                  t*Power(y0, 2) + y0*y1 - 2*t*y0*y1 + 
                                  t*Power(y1, 2)) + 
                            2*Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0, 2) - 2*y0*y1 + Power(y1, 2))*
                              Sqrt(Power(x0, 2) - 2*t*Power(x0, 2) + 
                                  Power(t, 2)*Power(x0, 2) + 2*t*x0*x1 - 
                                  2*Power(t, 2)*x0*x1 + 
                                  Power(t, 2)*Power(x1, 2) + Power(y0, 2) - 
                                  2*t*Power(y0, 2) + 
                                  Power(t, 2)*Power(y0, 2) + 2*t*y0*y1 - 
                                  2*Power(t, 2)*y0*y1 + 
                                  Power(t, 2)*
                                    Power(y1, 2)))))/(Power(Power(x0, 2) - 
                      2*x0*x1 + Power(x1, 2) + Power(y0 - y1, 2), 
                    2.5)*(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0, 2) - 2*y0*y1 + 
                      Power(y1, 2))), ((-2*(x0 - x1)*x1*
                          Sqrt(Power(x0, 2) + Power(y0, 2)))/
                      Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                        Power(y0 - y1, 2), 
                      2) + (Sqrt(Power(x0, 2) + Power(y0, 2))*(y0 - 
                              y1)*(-2*y0 + y1))/
                      Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                        Power(y0 - y1, 2), 
                      2) + (2*(x0 - x1)*
                        y0*(-(x1*y0) + x0*y1))/(Sqrt(Power(x0, 2) + 
                            Power(y0, 2))*
                        Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0 - y1, 2), 2)) - (8*(x0 - x1)*
                          Sqrt(Power(x0, 2) + Power(y0, 2))*(y0 - 
                              y1)*(-(x1*y0) + x0*y1))/
                      Power3(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                        Power(y0 - y1, 2), 
                      3) + (Sqrt(Power(x0, 2) + 
                              Power(y0, 2))*(-Power(x0, 2) + x0*x1 + 
                              y0*(-y0 + y1)))/
                      Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                        Power(y0 - y1, 2), 
                      2) + (y0*(y0 - y1)*(-Power(x0, 2) + x0*x1 + 
                            y0*(-y0 + y1)))/(Sqrt(Power(x0, 2) + 
                            Power(y0, 2))*
                        Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0 - y1, 2), 2)) - (4*
                          Sqrt(Power(x0, 2) + Power(y0, 2))*
                          Power(y0 - y1, 
                            2)*(-Power(x0, 2) + x0*x1 + y0*(-y0 + y1)))/
                      Power3(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                        Power(y0 - y1, 2), 
                      3) + ((y0 - y1)*
                        Power(x1*y0 - x0*y1, 
                          2)*((2*(-2*y0 + (y0*Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)))/
                                        Sqrt(Power(x0, 2) + 
                                        Power(y0, 2)) + (Sqrt(Power(x0, 2) + 
                                        Power(y0, 2))*(y0 - y1))/
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y1))/
                                Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0 - y1, 
                                      2)) - (2*(y0 - y1)*(-Power(x0, 2) + 
                                        x0*x1 - Power(y0, 2) + 
                                        Sqrt(Power(x0, 2) + Power(y0, 2))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1))/
                                Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0 - y1, 2), 1.5)))/(2.*
                        Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0 - y1, 2), 
                          2)*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + 
                            Sqrt(Power(x0, 2) + Power(y0, 2))*
                              Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0 - y1, 2)) + y0*y1)) + ((x0 - 
                            x1)*(Power(x0, 2) - x0*x1 + 
                            y0*(y0 - y1))*(-(x1*y0) + 
                            x0*y1)*((2*(-2*
                                        y0 + (y0*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)))/
                                        Sqrt(Power(x0, 2) + 
                                        Power(y0, 2)) + (Sqrt(Power(x0, 2) + 
                                        Power(y0, 2))*(y0 - y1))/
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y1))/
                                Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0 - y1, 
                                      2)) - (2*(y0 - y1)*(-Power(x0, 2) + 
                                        x0*x1 - Power(y0, 2) + 
                                        Sqrt(Power(x0, 2) + Power(y0, 2))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1))/
                                Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0 - y1, 2), 1.5)))/(Power(Power(x0, 
                                2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0 - y1, 2), 
                          2)*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + 
                            Sqrt(Power(x0, 2) + Power(y0, 2))*
                              Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0 - y1, 2)) + 
                            y0*y1)) - (2*(x0 - x1)*(Power(x0, 2) - x0*x1 + 
                              y0*(y0 - y1))*(-(x1*y0) + 
                              x0*y1)*(-((-2*
                                        y0 + (y0*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)))/
                                        Sqrt(Power(x0, 2) + 
                                        Power(y0, 2)) + (Sqrt(Power(x0, 2) + 
                                        Power(y0, 2))*(y0 - y1))/
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y1)/(-Power(x0, 2) + x0*x1 - 
                                        Power(y0, 2) + 
                                        Sqrt(Power(x0, 2) + Power(y0, 2))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1)) + (Sqrt(Power(x0, 2) - 
                                        2*x0*x1 + Power(x1, 2) + 
                                        Power(y0 - y1, 
                                        2))*((2*(-2*y0 + (y0*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)))/
                                        Sqrt(Power(x0, 2) + 
                                        Power(y0, 2)) + (Sqrt(Power(x0, 2) + 
                                        Power(y0, 2))*(y0 - y1))/
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y1))/
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + 
                                        Power(y0 - y1, 
                                        2)) - (2*(y0 - y1)*(-Power(x0, 2) + 
                                        x0*x1 - Power(y0, 2) + 
                                        Sqrt(Power(x0, 2) + Power(y0, 2))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1))/
                                        Power(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2), 
                                        1.5)))/(2.*(-Power(x0, 2) + x0*x1 - 
                                        Power(y0, 2) + 
                                        Sqrt(Power(x0, 2) + Power(y0, 2))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1))))/
                      Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                        Power(y0 - y1, 2), 
                      2.5) - (2*(x0 - x1)*
                          x1*(Power(x0, 2) - x0*x1 + y0*(y0 - y1))*
                          Log((2*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + 
                                        Sqrt(Power(x0, 2) + Power(y0, 2))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1))/
                                Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0 - y1, 2))))/
                      Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                        Power(y0 - y1, 2), 
                      2.5) + (2*x1*(y0 - y1)*(x1*y0 - x0*y1)*
                          Log((2*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + 
                                        Sqrt(Power(x0, 2) + Power(y0, 2))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1))/
                                Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0 - y1, 2))))/
                      Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                        Power(y0 - y1, 2), 
                      2.5) + (Power(x1*y0 - x0*y1, 2)*
                          Log((2*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + 
                                        Sqrt(Power(x0, 2) + Power(y0, 2))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1))/
                                Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0 - y1, 2))))/
                      Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                        Power(y0 - y1, 2), 
                      2.5) - (5*Power(y0 - y1, 2)*Power(x1*y0 - x0*y1, 2)*
                          Log((2*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + 
                                        Sqrt(Power(x0, 2) + Power(y0, 2))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1))/
                                Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0 - y1, 2))))/
                      Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                        Power(y0 - y1, 2), 
                      3.5) - (10*(x0 - x1)*(Power(x0, 2) - x0*x1 + 
                              y0*(y0 - y1))*(y0 - y1)*(-(x1*y0) + x0*y1)*
                          Log((2*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + 
                                        Sqrt(Power(x0, 2) + Power(y0, 2))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1))/
                                Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0 - y1, 2))))/
                      Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                        Power(y0 - y1, 2), 
                      3.5) + (2*(x0 - x1)*(2*y0 - y1)*(-(x1*y0) + x0*y1)*
                          Log((2*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + 
                                        Sqrt(Power(x0, 2) + Power(y0, 2))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1))/
                                Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0 - y1, 2))))/
                      Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                        Power(y0 - y1, 2), 
                      2.5) + (2*(x0 - x1)*
                          x1*(Power(x0, 2) - x0*x1 + 
                              y0*(y0 - 
                                    y1))*(-Log(2*(-Power(x0, 2) + x0*x1 - 
                                        Power(y0, 2) + 
                                        Sqrt(Power(x0, 2) + Power(y0, 2))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1)) + 
                              Log((2*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + 
                                        Sqrt(Power(x0, 2) + Power(y0, 2))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1))/
                                      Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)))))/
                      Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                        Power(y0 - y1, 2), 
                      2.5) + (10*(x0 - x1)*(Power(x0, 2) - x0*x1 + 
                              y0*(y0 - y1))*(y0 - y1)*(-(x1*y0) + 
                              x0*y1)*(-Log(2*(-Power(x0, 2) + x0*x1 - 
                                        Power(y0, 2) + 
                                        Sqrt(Power(x0, 2) + Power(y0, 2))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1)) + 
                              Log((2*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + 
                                        Sqrt(Power(x0, 2) + Power(y0, 2))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1))/
                                      Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)))))/
                      Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                        Power(y0 - y1, 2), 
                      3.5) - (2*(x0 - x1)*(2*y0 - y1)*(-(x1*y0) + 
                              x0*y1)*(-Log(2*(-Power(x0, 2) + x0*x1 - 
                                        Power(y0, 2) + 
                                        Sqrt(Power(x0, 2) + Power(y0, 2))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1)) + 
                              Log((2*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + 
                                        Sqrt(Power(x0, 2) + Power(y0, 2))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1))/
                                      Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)))))/
                      Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                        Power(y0 - y1, 2), 2.5))/
              2. + ((2*(x0 - x1)*x1*
                          Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                              2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                              Power(t, 
                                  2)*(Power(x1, 2) + Power(y0 - y1, 2)) - 
                              2*t*y0*(y0 - y1)))/
                      Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                        Power(y0 - y1, 2), 
                      2) + (2*t*
                        Sqrt(Power(x0, 2) + Power(y0, 2)))/(Power(x0, 2) - 
                        2*x0*x1 + Power(x1, 2) + Power(y0 - y1, 2)) + (2*t*
                        y0*(y0 - y1))/(Sqrt(Power(x0, 2) + 
                            Power(y0, 2))*(Power(x0, 2) - 2*x0*x1 + 
                            Power(x1, 2) + Power(y0 - y1, 2))) - (4*t*
                          Sqrt(Power(x0, 2) + Power(y0, 2))*
                          Power(y0 - y1, 2))/
                      Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                        Power(y0 - y1, 2), 
                      2) - (Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                              2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                              Power(t, 
                                  2)*(Power(x1, 2) + Power(y0 - y1, 2)) - 
                              2*t*y0*(y0 - y1))*(y0 - y1)*(-2*y0 + 
                              2*t*(y0 - y1) + y1))/
                      Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                        Power(y0 - y1, 2), 
                      2) - ((x0 - x1)*(2*y0 - 2*t*y0 - 2*t*(y0 - y1) + 
                            2*Power(t, 2)*(y0 - y1))*(-(x1*y0) + 
                            x0*y1))/(Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                            2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                            Power(t, 2)*(Power(x1, 2) + Power(y0 - y1, 2)) - 
                            2*t*y0*(y0 - y1))*
                        Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0 - y1, 2), 2)) + (8*(x0 - x1)*
                          Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                              2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                              Power(t, 
                                  2)*(Power(x1, 2) + Power(y0 - y1, 2)) - 
                              2*t*y0*(y0 - y1))*(y0 - y1)*(-(x1*y0) + x0*y1))/
                      Power3(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                        Power(y0 - y1, 2), 
                      3) - (Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                              2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                              Power(t, 
                                  2)*(Power(x1, 2) + Power(y0 - y1, 2)) - 
                              2*t*y0*(y0 - y1))*((-1 + t)*Power(x0, 2) + 
                              x0*(x1 - 2*t*x1) + 
                              t*(Power(x1, 2) + Power(y0 - y1, 2)) + 
                              y0*(-y0 + y1)))/
                      Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                        Power(y0 - y1, 2), 
                      2) - ((2*y0 - 2*t*y0 - 2*t*(y0 - y1) + 
                            2*Power(t, 2)*(y0 - y1))*(y0 - 
                            y1)*((-1 + t)*Power(x0, 2) + x0*(x1 - 2*t*x1) + 
                            t*(Power(x1, 2) + Power(y0 - y1, 2)) + 
                            y0*(-y0 + y1)))/(2.*
                        Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                            2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                            Power(t, 2)*(Power(x1, 2) + Power(y0 - y1, 2)) - 
                            2*t*y0*(y0 - y1))*
                        Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0 - y1, 2), 2)) + (4*
                          Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                              2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                              Power(t, 
                                  2)*(Power(x1, 2) + Power(y0 - y1, 2)) - 
                              2*t*y0*(y0 - y1))*
                          Power(y0 - y1, 
                            2)*((-1 + t)*Power(x0, 2) + x0*(x1 - 2*t*x1) + 
                              t*(Power(x1, 2) + Power(y0 - y1, 2)) + 
                              y0*(-y0 + y1)))/
                      Power3(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                        Power(y0 - y1, 2), 
                      3) - (t*(x0 - x1)*(-(x1*y0) + 
                            x0*y1)*((2*(-2*
                                        y0 + (y0*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)))/
                                        Sqrt(Power(x0, 2) + 
                                        Power(y0, 2)) + (Sqrt(Power(x0, 2) + 
                                        Power(y0, 2))*(y0 - y1))/
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y1))/
                                Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0 - y1, 
                                      2)) - (2*(y0 - y1)*(-Power(x0, 2) + 
                                        x0*x1 - Power(y0, 2) + 
                                        Sqrt(Power(x0, 2) + Power(y0, 2))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1))/
                                Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0 - y1, 2), 1.5)))/((Power(x0, 2) - 
                            2*x0*x1 + Power(x1, 2) + 
                            Power(y0 - y1, 2))*(-Power(x0, 2) + x0*x1 - 
                            Power(y0, 2) + 
                            Sqrt(Power(x0, 2) + Power(y0, 2))*
                              Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0 - y1, 2)) + y0*y1)) - ((y0 - y1)*
                        Power(x1*y0 - x0*y1, 
                          2)*((2*(-2*y0 + 
                                        2*t*y0 + ((2*y0 - 2*t*y0 - 
                                        2*t*(y0 - y1) + 
                                        2*Power(t, 2)*(y0 - y1))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + 
                                        Power(y0 - y1, 2)))/(2.*
                                        Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1))) + (Sqrt(Power(-1 + 
                                        t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1))*(y0 - y1))/
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y1 - 2*t*y1))/
                                Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0 - y1, 
                                      2)) - (2*(y0 - y1)*(-Power(x0, 2) + 
                                        t*Power(x0, 2) + x0*x1 - 2*t*x0*x1 + 
                                        t*Power(x1, 2) - Power(y0, 2) + 
                                        t*Power(y0, 2) + 
                                        Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1 - 2*t*y0*y1 + t*Power(y1, 2)))/
                                Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0 - y1, 2), 1.5)))/(2.*
                        Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0 - y1, 2), 
                          2)*(-Power(x0, 2) + t*Power(x0, 2) + x0*x1 - 
                            2*t*x0*x1 + t*Power(x1, 2) - Power(y0, 2) + 
                            t*Power(y0, 2) + 
                            Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                  2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                  Power(t, 
                                      2)*(Power(x1, 2) + Power(y0 - y1, 2)) - 
                                  2*t*y0*(y0 - y1))*
                              Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0 - y1, 2)) + y0*y1 - 2*t*y0*y1 + 
                            t*Power(y1, 2))) - ((x0 - x1)*(Power(x0, 2) - 
                            x0*x1 + y0*(y0 - y1))*(-(x1*y0) + 
                            x0*y1)*((2*(-2*y0 + 
                                        2*t*y0 + ((2*y0 - 2*t*y0 - 
                                        2*t*(y0 - y1) + 
                                        2*Power(t, 2)*(y0 - y1))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + 
                                        Power(y0 - y1, 2)))/(2.*
                                        Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1))) + (Sqrt(Power(-1 + 
                                        t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1))*(y0 - y1))/
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y1 - 2*t*y1))/
                                Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0 - y1, 
                                      2)) - (2*(y0 - y1)*(-Power(x0, 2) + 
                                        t*Power(x0, 2) + x0*x1 - 2*t*x0*x1 + 
                                        t*Power(x1, 2) - Power(y0, 2) + 
                                        t*Power(y0, 2) + 
                                        Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1 - 2*t*y0*y1 + t*Power(y1, 2)))/
                                Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0 - y1, 2), 1.5)))/(Power(Power(x0, 
                                2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0 - y1, 2), 
                          2)*(-Power(x0, 2) + t*Power(x0, 2) + x0*x1 - 
                            2*t*x0*x1 + t*Power(x1, 2) - Power(y0, 2) + 
                            t*Power(y0, 2) + 
                            Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                  2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                  Power(t, 
                                      2)*(Power(x1, 2) + Power(y0 - y1, 2)) - 
                                  2*t*y0*(y0 - y1))*
                              Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0 - y1, 2)) + y0*y1 - 2*t*y0*y1 + 
                            t*Power(y1, 2))) + (t*(x0 - x1)*(-(x1*y0) + 
                            x0*y1)*((2*(-2*y0 + 
                                        2*t*y0 + ((2*y0 - 2*t*y0 - 
                                        2*t*(y0 - y1) + 
                                        2*Power(t, 2)*(y0 - y1))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + 
                                        Power(y0 - y1, 2)))/(2.*
                                        Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1))) + (Sqrt(Power(-1 + 
                                        t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1))*(y0 - y1))/
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y1 - 2*t*y1))/
                                Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0 - y1, 
                                      2)) - (2*(y0 - y1)*(-Power(x0, 2) + 
                                        t*Power(x0, 2) + x0*x1 - 2*t*x0*x1 + 
                                        t*Power(x1, 2) - Power(y0, 2) + 
                                        t*Power(y0, 2) + 
                                        Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1 - 2*t*y0*y1 + t*Power(y1, 2)))/
                                Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0 - y1, 2), 1.5)))/((Power(x0, 2) - 
                            2*x0*x1 + Power(x1, 2) + 
                            Power(y0 - y1, 2))*(-Power(x0, 2) + 
                            t*Power(x0, 2) + x0*x1 - 2*t*x0*x1 + 
                            t*Power(x1, 2) - Power(y0, 2) + t*Power(y0, 2) + 
                            Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                  2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                  Power(t, 
                                      2)*(Power(x1, 2) + Power(y0 - y1, 2)) - 
                                  2*t*y0*(y0 - y1))*
                              Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0 - y1, 2)) + y0*y1 - 2*t*y0*y1 + 
                            t*Power(y1, 2))) + (2*(x0 - x1)*(Power(x0, 2) - 
                              x0*x1 + y0*(y0 - y1))*(-(x1*y0) + 
                              x0*y1)*(-((-2*y0 + 
                                        2*t*y0 + ((2*y0 - 2*t*y0 - 
                                        2*t*(y0 - y1) + 
                                        2*Power(t, 2)*(y0 - y1))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + 
                                        Power(y0 - y1, 2)))/(2.*
                                        Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1))) + (Sqrt(Power(-1 + 
                                        t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1))*(y0 - y1))/
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y1 - 2*t*y1)/(-Power(x0, 2) + 
                                        t*Power(x0, 2) + x0*x1 - 2*t*x0*x1 + 
                                        t*Power(x1, 2) - Power(y0, 2) + 
                                        t*Power(y0, 2) + 
                                        Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1 - 2*t*y0*y1 + 
                                        t*Power(y1, 2))) + (Sqrt(Power(x0, 
                                        2) - 2*x0*x1 + Power(x1, 2) + 
                                        Power(y0 - y1, 
                                        2))*((2*(-2*y0 + 
                                        2*t*y0 + ((2*y0 - 2*t*y0 - 
                                        2*t*(y0 - y1) + 2*Power(t, 
                                        2)*(y0 - y1))*Sqrt(Power(x0, 2) - 
                                        2*x0*x1 + Power(x1, 2) + 
                                        Power(y0 - y1, 2)))/(2.*
                                        Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 2*t*
                                        y0*(y0 - y1))) + (Sqrt(Power(-1 + t, 
                                        2)*Power(x0, 2) - 2*(-1 + t)*t*x0*
                                        x1 + Power(y0, 2) + Power(t, 
                                        2)*(Power(x1, 2) + Power(y0 - y1, 
                                        2)) - 2*t*y0*(y0 - y1))*(y0 - y1))/
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y1 - 2*t*y1))/
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + 
                                        Power(y0 - y1, 
                                        2)) - (2*(y0 - y1)*(-Power(x0, 2) + 
                                        t*Power(x0, 2) + x0*x1 - 2*t*x0*x1 + 
                                        t*Power(x1, 2) - Power(y0, 2) + 
                                        t*Power(y0, 2) + 
                                        Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1 - 2*t*y0*y1 + t*Power(y1, 2)))/
                                        Power(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2), 
                                        1.5)))/(2.*(-Power(x0, 2) + 
                                        t*Power(x0, 2) + x0*x1 - 2*t*x0*x1 + 
                                        t*Power(x1, 2) - Power(y0, 2) + 
                                        t*Power(y0, 2) + 
                                        Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1 - 2*t*y0*y1 + 
                                        t*Power(y1, 2)))))/
                      Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                        Power(y0 - y1, 2), 
                      2.5) + (2*t*(x0 - x1)*x1*
                          Log((2*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + 
                                        Sqrt(Power(x0, 2) + Power(y0, 2))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1))/
                                Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0 - y1, 2))))/
                      Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                        Power(y0 - y1, 2), 
                      1.5) + (6*t*(x0 - x1)*(y0 - y1)*(-(x1*y0) + x0*y1)*
                          Log((2*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + 
                                        Sqrt(Power(x0, 2) + Power(y0, 2))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1))/
                                Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0 - y1, 2))))/
                      Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                        Power(y0 - y1, 2), 
                      2.5) + (2*(x0 - x1)*
                          x1*(Power(x0, 2) - x0*x1 + y0*(y0 - y1))*
                          Log((2*(-Power(x0, 2) + t*Power(x0, 2) + x0*x1 - 
                                        2*t*x0*x1 + t*Power(x1, 2) - 
                                        Power(y0, 2) + t*Power(y0, 2) + 
                                        Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1 - 2*t*y0*y1 + t*Power(y1, 2)))/
                                Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0 - y1, 2))))/
                      Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                        Power(y0 - y1, 2), 
                      2.5) - (2*t*(x0 - x1)*x1*
                          Log((2*(-Power(x0, 2) + t*Power(x0, 2) + x0*x1 - 
                                        2*t*x0*x1 + t*Power(x1, 2) - 
                                        Power(y0, 2) + t*Power(y0, 2) + 
                                        Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1 - 2*t*y0*y1 + t*Power(y1, 2)))/
                                Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0 - y1, 2))))/
                      Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                        Power(y0 - y1, 2), 
                      1.5) - (2*x1*(y0 - y1)*(x1*y0 - x0*y1)*
                          Log((2*(-Power(x0, 2) + t*Power(x0, 2) + x0*x1 - 
                                        2*t*x0*x1 + t*Power(x1, 2) - 
                                        Power(y0, 2) + t*Power(y0, 2) + 
                                        Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1 - 2*t*y0*y1 + t*Power(y1, 2)))/
                                Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0 - y1, 2))))/
                      Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                        Power(y0 - y1, 2), 
                      2.5) - (Power(x1*y0 - x0*y1, 2)*
                          Log((2*(-Power(x0, 2) + t*Power(x0, 2) + x0*x1 - 
                                        2*t*x0*x1 + t*Power(x1, 2) - 
                                        Power(y0, 2) + t*Power(y0, 2) + 
                                        Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1 - 2*t*y0*y1 + t*Power(y1, 2)))/
                                Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0 - y1, 2))))/
                      Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                        Power(y0 - y1, 2), 
                      2.5) + (5*Power(y0 - y1, 2)*Power(x1*y0 - x0*y1, 2)*
                          Log((2*(-Power(x0, 2) + t*Power(x0, 2) + x0*x1 - 
                                        2*t*x0*x1 + t*Power(x1, 2) - 
                                        Power(y0, 2) + t*Power(y0, 2) + 
                                        Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1 - 2*t*y0*y1 + t*Power(y1, 2)))/
                                Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0 - y1, 2))))/
                      Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                        Power(y0 - y1, 2), 
                      3.5) + (10*(x0 - x1)*(Power(x0, 2) - x0*x1 + 
                              y0*(y0 - y1))*(y0 - y1)*(-(x1*y0) + x0*y1)*
                          Log((2*(-Power(x0, 2) + t*Power(x0, 2) + x0*x1 - 
                                        2*t*x0*x1 + t*Power(x1, 2) - 
                                        Power(y0, 2) + t*Power(y0, 2) + 
                                        Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1 - 2*t*y0*y1 + t*Power(y1, 2)))/
                                Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0 - y1, 2))))/
                      Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                        Power(y0 - y1, 2), 
                      3.5) - (6*t*(x0 - x1)*(y0 - y1)*(-(x1*y0) + x0*y1)*
                          Log((2*(-Power(x0, 2) + t*Power(x0, 2) + x0*x1 - 
                                        2*t*x0*x1 + t*Power(x1, 2) - 
                                        Power(y0, 2) + t*Power(y0, 2) + 
                                        Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1 - 2*t*y0*y1 + t*Power(y1, 2)))/
                                Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0 - y1, 2))))/
                      Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                        Power(y0 - y1, 2), 
                      2.5) - (2*(x0 - x1)*(2*y0 - y1)*(-(x1*y0) + x0*y1)*
                          Log((2*(-Power(x0, 2) + t*Power(x0, 2) + x0*x1 - 
                                        2*t*x0*x1 + t*Power(x1, 2) - 
                                        Power(y0, 2) + t*Power(y0, 2) + 
                                        Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1 - 2*t*y0*y1 + t*Power(y1, 2)))/
                                Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0 - y1, 2))))/
                      Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                        Power(y0 - y1, 2), 
                      2.5) - (2*(x0 - x1)*
                          x1*(Power(x0, 2) - x0*x1 + 
                              y0*(y0 - 
                                    y1))*(-Log(2*(-Power(x0, 2) + 
                                        t*Power(x0, 2) + x0*x1 - 2*t*x0*x1 + 
                                        t*Power(x1, 2) - Power(y0, 2) + 
                                        t*Power(y0, 2) + 
                                        Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1 - 2*t*y0*y1 + 
                                        t*Power(y1, 2))) + 
                              Log((2*(-Power(x0, 2) + t*Power(x0, 2) + 
                                        x0*x1 - 2*t*x0*x1 + t*Power(x1, 2) - 
                                        Power(y0, 2) + t*Power(y0, 2) + 
                                        Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1 - 2*t*y0*y1 + t*Power(y1, 2)))/
                                      Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)))))/
                      Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                        Power(y0 - y1, 2), 
                      2.5) - (10*(x0 - x1)*(Power(x0, 2) - x0*x1 + 
                              y0*(y0 - y1))*(y0 - y1)*(-(x1*y0) + 
                              x0*y1)*(-Log(2*(-Power(x0, 2) + 
                                        t*Power(x0, 2) + x0*x1 - 2*t*x0*x1 + 
                                        t*Power(x1, 2) - Power(y0, 2) + 
                                        t*Power(y0, 2) + 
                                        Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1 - 2*t*y0*y1 + 
                                        t*Power(y1, 2))) + 
                              Log((2*(-Power(x0, 2) + t*Power(x0, 2) + 
                                        x0*x1 - 2*t*x0*x1 + t*Power(x1, 2) - 
                                        Power(y0, 2) + t*Power(y0, 2) + 
                                        Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1 - 2*t*y0*y1 + t*Power(y1, 2)))/
                                      Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)))))/
                      Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                        Power(y0 - y1, 2), 
                      3.5) + (2*(x0 - x1)*(2*y0 - y1)*(-(x1*y0) + 
                              x0*y1)*(-Log(2*(-Power(x0, 2) + 
                                        t*Power(x0, 2) + x0*x1 - 2*t*x0*x1 + 
                                        t*Power(x1, 2) - Power(y0, 2) + 
                                        t*Power(y0, 2) + 
                                        Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1 - 2*t*y0*y1 + 
                                        t*Power(y1, 2))) + 
                              Log((2*(-Power(x0, 2) + t*Power(x0, 2) + 
                                        x0*x1 - 2*t*x0*x1 + t*Power(x1, 2) - 
                                        Power(y0, 2) + t*Power(y0, 2) + 
                                        Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1 - 2*t*y0*y1 + t*Power(y1, 2)))/
                                      Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)))))/
                      Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                        Power(y0 - y1, 2), 2.5))/2.,

(-(((y0 - y1)*((-1 + t)*Power(x0, 2) + 
                    x0*(x1 - 2*t*x1) + t*(Power(x1, 2) + Power(y0 - y1, 2)) + 
                    y0*(-y0 + y1)))/(Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                    2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                    Power(t, 2)*(Power(x1, 2) + Power(y0 - y1, 2)) - 
                    2*t*y0*(y0 - y1))*(Power(x0, 2) - 2*x0*x1 + 
                    Power(x1, 2) + Power(y0 - y1, 2)))) + ((x0 - 
                x1)*(-(x1*y0) + x0*y1)*(Power(x0, 2) - 2*x0*x1 + 
                Power(x1, 2) + Power(y0, 2) - 2*y0*y1 + 
                Power(y1, 
                    2) + (Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0 - y1, 2))*((-1 + t)*Power(x0, 2) + 
                            x0*(x1 - 2*t*x1) + 
                            t*(Power(x1, 2) + Power(y0 - y1, 2)) + 
                            y0*(-y0 + y1)))/
                    Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 2*(-1 + t)*t*x0*x1 + 
                      Power(y0, 2) + 
                      Power(t, 2)*(Power(x1, 2) + Power(y0 - y1, 2)) - 
                      2*t*y0*(y0 - y1))))/(Power(Power(x0, 2) - 2*x0*x1 + 
                Power(x1, 2) + Power(y0 - y1, 2), 
              1.5)*(-Power(x0, 2) + t*Power(x0, 2) + x0*x1 - 2*t*x0*x1 + 
                t*Power(x1, 2) - Power(y0, 2) + t*Power(y0, 2) + 
                Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 2*(-1 + t)*t*x0*x1 + 
                      Power(y0, 2) + 
                      Power(t, 2)*(Power(x1, 2) + Power(y0 - y1, 2)) - 
                      2*t*y0*(y0 - y1))*
                  Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0 - y1, 2)) + y0*y1 - 2*t*y0*y1 + 
                t*Power(y1, 2))))


);
                assert(answer.length == 5);
                return answer;
            } // calcVelocity1Gradient
            private static double[] calcPosition0Gradient(double p0[], double v0[], // constant, doesn't take part in derivatives
                                                          double A0[],
                                                          double A1[],
                                                          double t,
                                                          boolean twoQuadraticsMode)
            {
                double x0 = A0[0];
                double y0 = A0[1];
                double x1 = A1[0];
                double y1 = A1[1];
                double answer[] =
      List(((-x0 + x1)*(-2*x0 + 2*x1)*Sqrt(Power(x0, 2) + Power(y0, 2)))/
                Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                  Power(y0 - y1, 2), 
                2) - ((-x0 + x1)*(-2*x0 + 2*x1)*
                    Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 2*(-1 + t)*t*x0*x1 + 
                        Power(y0, 2) + 
                        Power(t, 2)*(Power(x1, 2) + Power(y0 - y1, 2)) - 
                        2*t*y0*(y0 - y1)))/
                Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                  Power(y0 - y1, 2), 2) - 
            Sqrt(Power(x0, 2) + Power(y0, 2))/(Power(x0, 2) - 2*x0*x1 + 
                    Power(x1, 2) + 
                    Power(y0 - y1, 2)) + ((-x0 + x1)*(-2*(-1 + t)*t*x0 + 
                      2*Power(t, 2)*x1))/(2.*
                  Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 2*(-1 + t)*t*x0*x1 + 
                      Power(y0, 2) + 
                      Power(t, 2)*(Power(x1, 2) + Power(y0 - y1, 2)) - 
                      2*t*y0*(y0 - y1))*(Power(x0, 2) - 2*x0*x1 + 
                      Power(x1, 2) + Power(y0 - y1, 2))) + 
            Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 2*(-1 + t)*t*x0*x1 + 
                    Power(y0, 2) + 
                    Power(t, 2)*(Power(x1, 2) + Power(y0 - y1, 2)) - 
                    2*t*y0*(y0 - y1))/(Power(x0, 2) - 2*x0*x1 + 
                    Power(x1, 2) + 
                    Power(y0 - y1, 2)) - ((y0 - y1)*(x1*y0 - 
                      x0*y1)*((2*(x0 + ((-2*x0 + 2*x1)*
                                        Sqrt(Power(x0, 2) + 
                                        Power(y0, 2)))/(2.*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)))))/
                          Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0 - y1, 
                                2)) - ((-2*x0 + 2*x1)*(-Power(x0, 2) + 
                                  x0*x1 - Power(y0, 2) + 
                                  Sqrt(Power(x0, 2) + Power(y0, 2))*
                                    Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                  y0*y1))/
                          Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0 - y1, 2), 1.5)))/(2.*(Power(x0, 2) - 
                      2*x0*x1 + Power(x1, 2) + 
                      Power(y0 - y1, 2))*(-Power(x0, 2) + x0*x1 - 
                      Power(y0, 2) + 
                      Sqrt(Power(x0, 2) + Power(y0, 2))*
                        Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0 - y1, 2)) + y0*y1)) + ((y0 - 
                      y1)*(x1*y0 - 
                      x0*y1)*((2*(x0 - 2*t*x0 + 
                                  2*t*x1 + ((-2*x0 + 2*x1)*
                                        Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 
                                        2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1)))/(2.*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + 
                                        Power(y0 - y1, 2))) + ((-2*(-1 + t)*t*
                                        x0 + 2*Power(t, 2)*x1)*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + 
                                        Power(y0 - y1, 2)))/(2.*
                                        Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 
                                        2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1)))))/
                          Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0 - y1, 
                                2)) - ((-2*x0 + 2*x1)*(-Power(x0, 2) + 
                                  t*Power(x0, 2) + x0*x1 - 2*t*x0*x1 + 
                                  t*Power(x1, 2) - Power(y0, 2) + 
                                  t*Power(y0, 2) + 
                                  Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 
                                        2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1))*
                                    Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                  y0*y1 - 2*t*y0*y1 + t*Power(y1, 2)))/
                          Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0 - y1, 2), 1.5)))/(2.*(Power(x0, 2) - 
                      2*x0*x1 + Power(x1, 2) + 
                      Power(y0 - y1, 2))*(-Power(x0, 2) + t*Power(x0, 2) + 
                      x0*x1 - 2*t*x0*x1 + t*Power(x1, 2) - Power(y0, 2) + 
                      t*Power(y0, 2) + 
                      Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                            2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                            Power(t, 2)*(Power(x1, 2) + Power(y0 - y1, 2)) - 
                            2*t*y0*(y0 - y1))*
                        Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0 - y1, 2)) + y0*y1 - 2*t*y0*y1 + 
                      t*Power(y1, 2))) - (y0*(y0 - y1)*
                    Log((2*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + 
                                  Sqrt(Power(x0, 2) + Power(y0, 2))*
                                    Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                  y0*y1))/
                          Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0 - y1, 2))))/
                Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                  Power(y0 - y1, 2), 
                1.5) + (3*(-2*x0 + 2*x1)*(y0 - y1)*(x1*y0 - x0*y1)*
                  Log((2*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + 
                                Sqrt(Power(x0, 2) + Power(y0, 2))*
                                  Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                      Power(x1, 2) + Power(y0 - y1, 2)) + 
                                y0*y1))/
                        Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                          Power(y0 - y1, 2))))/(2.*
                  Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0 - y1, 2), 2.5)) + (y0*(y0 - y1)*
                    Log((2*(-Power(x0, 2) + t*Power(x0, 2) + x0*x1 - 
                                  2*t*x0*x1 + t*Power(x1, 2) - Power(y0, 2) + 
                                  t*Power(y0, 2) + 
                                  Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 
                                        2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1))*
                                    Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                  y0*y1 - 2*t*y0*y1 + t*Power(y1, 2)))/
                          Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0 - y1, 2))))/
                Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                  Power(y0 - y1, 2), 
                1.5) - (3*(-2*x0 + 2*x1)*(y0 - y1)*(x1*y0 - x0*y1)*
                  Log((2*(-Power(x0, 2) + t*Power(x0, 2) + x0*x1 - 
                                2*t*x0*x1 + t*Power(x1, 2) - Power(y0, 2) + 
                                t*Power(y0, 2) + 
                                Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                      2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                      Power(t, 
                                        2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                      2*t*y0*(y0 - y1))*
                                  Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                      Power(x1, 2) + Power(y0 - y1, 2)) + 
                                y0*y1 - 2*t*y0*y1 + t*Power(y1, 2)))/
                        Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                          Power(y0 - y1, 2))))/(2.*
                  Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0 - y1, 2), 2.5)), ((-2*x0 + 2*x1)*
                    Sqrt(Power(x0, 2) + Power(y0, 2))*(-y0 + y1))/
                Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                  Power(y0 - y1, 2), 
                2) - ((-2*x0 + 2*x1)*
                    Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 2*(-1 + t)*t*x0*x1 + 
                        Power(y0, 2) + 
                        Power(t, 2)*(Power(x1, 2) + Power(y0 - y1, 2)) - 
                        2*t*y0*(y0 - y1))*(-y0 + y1))/
                Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                  Power(y0 - y1, 2), 
                2) + ((-2*(-1 + t)*t*x0 + 2*Power(t, 2)*x1)*(-y0 + y1))/(2.*
                  Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 2*(-1 + t)*t*x0*x1 + 
                      Power(y0, 2) + 
                      Power(t, 2)*(Power(x1, 2) + Power(y0 - y1, 2)) - 
                      2*t*y0*(y0 - y1))*(Power(x0, 2) - 2*x0*x1 + 
                      Power(x1, 2) + Power(y0 - y1, 2))) - ((x0 - 
                      x1)*(-(x1*y0) + 
                      x0*y1)*((2*(x0 + ((-2*x0 + 2*x1)*
                                        Sqrt(Power(x0, 2) + 
                                        Power(y0, 2)))/(2.*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)))))/
                          Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0 - y1, 
                                2)) - ((-2*x0 + 2*x1)*(-Power(x0, 2) + 
                                  x0*x1 - Power(y0, 2) + 
                                  Sqrt(Power(x0, 2) + Power(y0, 2))*
                                    Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                  y0*y1))/
                          Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0 - y1, 2), 1.5)))/(2.*(Power(x0, 2) - 
                      2*x0*x1 + Power(x1, 2) + 
                      Power(y0 - y1, 2))*(-Power(x0, 2) + x0*x1 - 
                      Power(y0, 2) + 
                      Sqrt(Power(x0, 2) + Power(y0, 2))*
                        Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0 - y1, 2)) + y0*y1)) + ((x0 - 
                      x1)*(-(x1*y0) + 
                      x0*y1)*((2*(x0 - 2*t*x0 + 
                                  2*t*x1 + ((-2*x0 + 2*x1)*
                                        Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 
                                        2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1)))/(2.*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + 
                                        Power(y0 - y1, 2))) + ((-2*(-1 + t)*t*
                                        x0 + 2*Power(t, 2)*x1)*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + 
                                        Power(y0 - y1, 2)))/(2.*
                                        Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 
                                        2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1)))))/
                          Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0 - y1, 
                                2)) - ((-2*x0 + 2*x1)*(-Power(x0, 2) + 
                                  t*Power(x0, 2) + x0*x1 - 2*t*x0*x1 + 
                                  t*Power(x1, 2) - Power(y0, 2) + 
                                  t*Power(y0, 2) + 
                                  Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 
                                        2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1))*
                                    Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                  y0*y1 - 2*t*y0*y1 + t*Power(y1, 2)))/
                          Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0 - y1, 2), 1.5)))/(2.*(Power(x0, 2) - 
                      2*x0*x1 + Power(x1, 2) + 
                      Power(y0 - y1, 2))*(-Power(x0, 2) + t*Power(x0, 2) + 
                      x0*x1 - 2*t*x0*x1 + t*Power(x1, 2) - Power(y0, 2) + 
                      t*Power(y0, 2) + 
                      Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                            2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                            Power(t, 2)*(Power(x1, 2) + Power(y0 - y1, 2)) - 
                            2*t*y0*(y0 - y1))*
                        Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0 - y1, 2)) + y0*y1 - 2*t*y0*y1 + 
                      t*Power(y1, 2))) + ((x0 - x1)*y0*
                    Log((2*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + 
                                  Sqrt(Power(x0, 2) + Power(y0, 2))*
                                    Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                  y0*y1))/
                          Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0 - y1, 2))))/
                Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                  Power(y0 - y1, 2), 
                1.5) + (3*(x0 - x1)*(-2*x0 + 2*x1)*(-(x1*y0) + x0*y1)*
                  Log((2*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + 
                                Sqrt(Power(x0, 2) + Power(y0, 2))*
                                  Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                      Power(x1, 2) + Power(y0 - y1, 2)) + 
                                y0*y1))/
                        Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                          Power(y0 - y1, 2))))/(2.*
                  Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0 - y1, 2), 2.5)) + ((-(x1*y0) + x0*y1)*
                    Log((2*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + 
                                  Sqrt(Power(x0, 2) + Power(y0, 2))*
                                    Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                  y0*y1))/
                          Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0 - y1, 2))))/
                Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                  Power(y0 - y1, 2), 
                1.5) - ((x0 - x1)*y0*
                    Log((2*(-Power(x0, 2) + t*Power(x0, 2) + x0*x1 - 
                                  2*t*x0*x1 + t*Power(x1, 2) - Power(y0, 2) + 
                                  t*Power(y0, 2) + 
                                  Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 
                                        2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1))*
                                    Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                  y0*y1 - 2*t*y0*y1 + t*Power(y1, 2)))/
                          Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0 - y1, 2))))/
                Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                  Power(y0 - y1, 2), 
                1.5) - (3*(x0 - x1)*(-2*x0 + 2*x1)*(-(x1*y0) + x0*y1)*
                  Log((2*(-Power(x0, 2) + t*Power(x0, 2) + x0*x1 - 
                                2*t*x0*x1 + t*Power(x1, 2) - Power(y0, 2) + 
                                t*Power(y0, 2) + 
                                Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                      2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                      Power(t, 
                                        2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                      2*t*y0*(y0 - y1))*
                                  Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                      Power(x1, 2) + Power(y0 - y1, 2)) + 
                                y0*y1 - 2*t*y0*y1 + t*Power(y1, 2)))/
                        Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                          Power(y0 - y1, 2))))/(2.*
                  Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0 - y1, 2), 2.5)) - ((-(x1*y0) + x0*y1)*
                    Log((2*(-Power(x0, 2) + t*Power(x0, 2) + x0*x1 - 
                                  2*t*x0*x1 + t*Power(x1, 2) - Power(y0, 2) + 
                                  t*Power(y0, 2) + 
                                  Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 
                                        2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1))*
                                    Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                  y0*y1 - 2*t*y0*y1 + t*Power(y1, 2)))/
                          Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0 - y1, 2))))/
                Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                  Power(y0 - y1, 2), 
                1.5), -((t*(x0 - x1)*(-2*x0 + 2*x1)*
                        Sqrt(Power(x0, 2) + Power(y0, 2)))/
                    Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0 - y1, 2), 2)) - (t*
                  Sqrt(Power(x0, 2) + Power(y0, 2)))/(Power(x0, 2) - 
                  2*x0*x1 + Power(x1, 2) + 
                  Power(y0 - y1, 2)) - ((-2*x0 + 2*x1)*
                  Sqrt(Power(x0, 2) + Power(y0, 2))*(y0 - y1)*(x1*y0 - 
                      x0*y1))/(2.*
                  Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0 - y1, 2), 1.5)*
                  Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0, 2) - 2*y0*y1 + Power(y1, 2), 1.5)) + (y0*
                  Sqrt(Power(x0, 2) + Power(y0, 2))*(y0 - 
                      y1))/(Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0 - y1, 2), 1.5)*
                  Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + Power(y0, 2) - 
                      2*y0*y1 + Power(y1, 2))) - (3*(-2*x0 + 2*x1)*
                  Sqrt(Power(x0, 2) + Power(y0, 2))*(y0 - y1)*(x1*y0 - 
                      x0*y1))/(2.*
                  Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0 - y1, 2), 2.5)*
                  Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + Power(y0, 2) - 
                      2*y0*y1 + Power(y1, 2))) - ((2*t*x0 - 
                      2*Power(t, 2)*x0 + 2*Power(t, 2)*x1)*(y0 - y1)*(x1*y0 - 
                      x0*y1))/(2.*
                  Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0 - y1, 2), 1.5)*
                  Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + Power(y0, 2) - 
                      2*y0*y1 + Power(y1, 2))*
                  Sqrt(Power(x0, 2) - 2*t*Power(x0, 2) + 
                      Power(t, 2)*Power(x0, 2) + 2*t*x0*x1 - 
                      2*Power(t, 2)*x0*x1 + Power(t, 2)*Power(x1, 2) + 
                      Power(y0, 2) - 2*t*Power(y0, 2) + 
                      Power(t, 2)*Power(y0, 2) + 2*t*y0*y1 - 
                      2*Power(t, 2)*y0*y1 + 
                      Power(t, 2)*Power(y1, 2))) + ((-2*x0 + 2*x1)*(y0 - 
                      y1)*(x1*y0 - x0*y1)*
                  Sqrt(Power(x0, 2) - 2*t*Power(x0, 2) + 
                      Power(t, 2)*Power(x0, 2) + 2*t*x0*x1 - 
                      2*Power(t, 2)*x0*x1 + Power(t, 2)*Power(x1, 2) + 
                      Power(y0, 2) - 2*t*Power(y0, 2) + 
                      Power(t, 2)*Power(y0, 2) + 2*t*y0*y1 - 
                      2*Power(t, 2)*y0*y1 + Power(t, 2)*Power(y1, 2)))/(2.*
                  Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0 - y1, 2), 1.5)*
                  Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0, 2) - 2*y0*y1 + Power(y1, 2), 
                    1.5)) - (y0*(y0 - y1)*
                  Sqrt(Power(x0, 2) - 2*t*Power(x0, 2) + 
                      Power(t, 2)*Power(x0, 2) + 2*t*x0*x1 - 
                      2*Power(t, 2)*x0*x1 + Power(t, 2)*Power(x1, 2) + 
                      Power(y0, 2) - 2*t*Power(y0, 2) + 
                      Power(t, 2)*Power(y0, 2) + 2*t*y0*y1 - 
                      2*Power(t, 2)*y0*y1 + 
                      Power(t, 2)*Power(y1, 2)))/(Power(Power(x0, 2) - 
                      2*x0*x1 + Power(x1, 2) + Power(y0 - y1, 2), 1.5)*
                  Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + Power(y0, 2) - 
                      2*y0*y1 + Power(y1, 2))) + (3*(-2*x0 + 2*x1)*(y0 - 
                      y1)*(x1*y0 - x0*y1)*
                  Sqrt(Power(x0, 2) - 2*t*Power(x0, 2) + 
                      Power(t, 2)*Power(x0, 2) + 2*t*x0*x1 - 
                      2*Power(t, 2)*x0*x1 + Power(t, 2)*Power(x1, 2) + 
                      Power(y0, 2) - 2*t*Power(y0, 2) + 
                      Power(t, 2)*Power(y0, 2) + 2*t*y0*y1 - 
                      2*Power(t, 2)*y0*y1 + Power(t, 2)*Power(y1, 2)))/(2.*
                  Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0 - y1, 2), 2.5)*
                  Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + Power(y0, 2) - 
                      2*y0*y1 + Power(y1, 2))) + (t*(y0 - y1)*(-(x1*y0) + 
                      x0*y1)*((2*(x0 + ((-2*x0 + 2*x1)*
                                        Sqrt(Power(x0, 2) + 
                                        Power(y0, 2)))/(2.*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)))))/
                          Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0 - y1, 
                                2)) - ((-2*x0 + 2*x1)*(-Power(x0, 2) + 
                                  x0*x1 - Power(y0, 2) + 
                                  Sqrt(Power(x0, 2) + Power(y0, 2))*
                                    Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                  y0*y1))/
                          Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0 - y1, 2), 1.5)))/(2.*(Power(x0, 2) - 
                      2*x0*x1 + Power(x1, 2) + 
                      Power(y0 - y1, 2))*(-Power(x0, 2) + x0*x1 - 
                      Power(y0, 2) + 
                      Sqrt(Power(x0, 2) + Power(y0, 2))*
                        Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0 - y1, 2)) + y0*y1)) - ((-x0 + x1)*
                  Sqrt(Power(x0, 2) + 
                      Power(y0, 
                          2))*(((-2*x0 + 2*x1)*(x0*x1 - Power(x1, 2) + 
                                y0*y1 - Power(y1, 2)))/(2.*
                            Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                Power(y0, 2) - 2*y0*y1 + Power(y1, 2), 
                              2)) - (x0 - 
                            2*x1)/(2.*(Power(x0, 2) - 2*x0*x1 + 
                                Power(x1, 2) + Power(y0, 2) - 2*y0*y1 + 
                                Power(y1, 2)))))/(Power(x0, 2) - 2*x0*x1 + 
                  Power(x1, 2) + Power(y0, 2) - 2*y0*y1 + 
                  Power(y1, 2)) + ((-x0 + x1)*
                  Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 2*(-1 + t)*x0*x1 - 
                      2*Power(-1 + t, 2)*x0*x1 + Power(x1, 2) + 
                      2*(-1 + t)*Power(x1, 2) + 
                      Power(-1 + t, 2)*Power(x1, 2) + 
                      Power(-1 + t, 2)*Power(y0, 2) - 2*(-1 + t)*y0*y1 - 
                      2*Power(-1 + t, 2)*y0*y1 + Power(y1, 2) + 
                      2*(-1 + t)*Power(y1, 2) + 
                      Power(-1 + t, 2)*
                        Power(y1, 
                          2))*(((-2*x0 + 2*x1)*(x0*x1 - Power(x1, 2) + 
                                y0*y1 - Power(y1, 2)))/(2.*
                            Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                Power(y0, 2) - 2*y0*y1 + Power(y1, 2), 
                              2)) - (x0 - 
                            2*x1)/(2.*(Power(x0, 2) - 2*x0*x1 + 
                                Power(x1, 2) + Power(y0, 2) - 2*y0*y1 + 
                                Power(y1, 2)))))/(Power(x0, 2) - 2*x0*x1 + 
                  Power(x1, 2) + Power(y0, 2) - 2*y0*y1 + 
                  Power(y1, 2)) + ((-x0 + x1)*(-2*x0 + 2*x1)*
                    Sqrt(Power(x0, 2) + 
                        Power(y0, 
                            2))*(-0.5 - (x0*x1 - Power(x1, 2) + y0*y1 - 
                              Power(y1, 2))/(2.*(Power(x0, 2) - 2*x0*x1 + 
                                  Power(x1, 2) + Power(y0, 2) - 2*y0*y1 + 
                                  Power(y1, 2)))))/
                Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + Power(y0, 2) - 
                  2*y0*y1 + Power(y1, 2), 
                2) - (Sqrt(Power(x0, 2) + 
                      Power(y0, 
                          2))*(-0.5 - (x0*x1 - Power(x1, 2) + y0*y1 - 
                            Power(y1, 2))/(2.*(Power(x0, 2) - 2*x0*x1 + 
                                Power(x1, 2) + Power(y0, 2) - 2*y0*y1 + 
                                Power(y1, 2)))))/(Power(x0, 2) - 2*x0*x1 + 
                  Power(x1, 2) + Power(y0, 2) - 2*y0*y1 + 
                  Power(y1, 2)) + ((-x0 + x1)*(-2*(-1 + t)*x0 - 
                      2*Power(-1 + t, 2)*x0 + 2*x1 + 4*(-1 + t)*x1 + 
                      2*Power(-1 + t, 2)*x1)*((-1 + t)/
                        2. - (x0*x1 - Power(x1, 2) + y0*y1 - 
                            Power(y1, 2))/(2.*(Power(x0, 2) - 2*x0*x1 + 
                                Power(x1, 2) + Power(y0, 2) - 2*y0*y1 + 
                                Power(y1, 2)))))/(2.*(Power(x0, 2) - 
                      2*x0*x1 + Power(x1, 2) + Power(y0, 2) - 2*y0*y1 + 
                      Power(y1, 2))*
                  Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 2*(-1 + t)*x0*x1 - 
                      2*Power(-1 + t, 2)*x0*x1 + Power(x1, 2) + 
                      2*(-1 + t)*Power(x1, 2) + 
                      Power(-1 + t, 2)*Power(x1, 2) + 
                      Power(-1 + t, 2)*Power(y0, 2) - 2*(-1 + t)*y0*y1 - 
                      2*Power(-1 + t, 2)*y0*y1 + Power(y1, 2) + 
                      2*(-1 + t)*Power(y1, 2) + 
                      Power(-1 + t, 2)*Power(y1, 2))) - ((-x0 + x1)*(-2*x0 + 
                        2*x1)*Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                        2*(-1 + t)*x0*x1 - 2*Power(-1 + t, 2)*x0*x1 + 
                        Power(x1, 2) + 2*(-1 + t)*Power(x1, 2) + 
                        Power(-1 + t, 2)*Power(x1, 2) + 
                        Power(-1 + t, 2)*Power(y0, 2) - 2*(-1 + t)*y0*y1 - 
                        2*Power(-1 + t, 2)*y0*y1 + Power(y1, 2) + 
                        2*(-1 + t)*Power(y1, 2) + 
                        Power(-1 + t, 2)*Power(y1, 2))*((-1 + t)/
                          2. - (x0*x1 - Power(x1, 2) + y0*y1 - 
                              Power(y1, 2))/(2.*(Power(x0, 2) - 2*x0*x1 + 
                                  Power(x1, 2) + Power(y0, 2) - 2*y0*y1 + 
                                  Power(y1, 2)))))/
                Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + Power(y0, 2) - 
                  2*y0*y1 + Power(y1, 2), 
                2) + (Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 2*(-1 + t)*x0*x1 - 
                      2*Power(-1 + t, 2)*x0*x1 + Power(x1, 2) + 
                      2*(-1 + t)*Power(x1, 2) + 
                      Power(-1 + t, 2)*Power(x1, 2) + 
                      Power(-1 + t, 2)*Power(y0, 2) - 2*(-1 + t)*y0*y1 - 
                      2*Power(-1 + t, 2)*y0*y1 + Power(y1, 2) + 
                      2*(-1 + t)*Power(y1, 2) + 
                      Power(-1 + t, 2)*Power(y1, 2))*((-1 + t)/
                        2. - (x0*x1 - Power(x1, 2) + y0*y1 - 
                            Power(y1, 2))/(2.*(Power(x0, 2) - 2*x0*x1 + 
                                Power(x1, 2) + Power(y0, 2) - 2*y0*y1 + 
                                Power(y1, 2)))))/(Power(x0, 2) - 2*x0*x1 + 
                  Power(x1, 2) + Power(y0, 2) - 2*y0*y1 + 
                  Power(y1, 2)) - ((-x0 + x1)*
                  Power(-(x1*y0) + x0*y1, 
                    2)*(-(((-2*x0 + 2*x1)*(-Power(x0, 2) + x0*x1 - 
                                      Power(y0, 2) + y0*y1))/
                              Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                Power(y0, 2) - 2*y0*y1 + Power(y1, 2), 
                              1.5)) + (2*x0)/
                          Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0, 2) - 2*y0*y1 + Power(y1, 2))))/(2.*
                  Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0, 2) - 2*y0*y1 + Power(y1, 2), 
                    2.5)*(2*
                        Sqrt(Power(x0, 2) + 
                            Power(y0, 
                                2)) + (2*(-Power(x0, 2) + x0*x1 - 
                                  Power(y0, 2) + y0*y1))/
                          Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0, 2) - 2*y0*y1 + 
                            Power(y1, 2)))) + ((-x0 + x1)*
                  Power(-(x1*y0) + x0*y1, 
                    2)*((2*(-x0 - 2*(-1 + t)*x0 + 2*x1 + 2*(-1 + t)*x1))/
                          Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0, 2) - 2*y0*y1 + 
                            Power(y1, 
                                2)) - ((-2*x0 + 
                                  2*x1)*((-1 + t)*Power(x0, 2) - x0*x1 - 
                                  2*(-1 + t)*x0*x1 + 
                                  Power(x1, 2) + (-1 + t)*
                                    Power(x1, 2) + (-1 + t)*Power(y0, 2) - 
                                  y0*y1 - 2*(-1 + t)*y0*y1 + 
                                  Power(y1, 2) + (-1 + t)*Power(y1, 2)))/
                          Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0, 2) - 2*y0*y1 + Power(y1, 2), 
                          1.5) + (-2*(-1 + t)*x0 - 2*Power(-1 + t, 2)*x0 + 
                              2*x1 + 4*(-1 + t)*x1 + 2*Power(-1 + t, 2)*x1)/
                          Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                            2*(-1 + t)*x0*x1 - 2*Power(-1 + t, 2)*x0*x1 + 
                            Power(x1, 2) + 2*(-1 + t)*Power(x1, 2) + 
                            Power(-1 + t, 2)*Power(x1, 2) + 
                            Power(-1 + t, 2)*Power(y0, 2) - 
                            2*(-1 + t)*y0*y1 - 2*Power(-1 + t, 2)*y0*y1 + 
                            Power(y1, 2) + 2*(-1 + t)*Power(y1, 2) + 
                            Power(-1 + t, 2)*Power(y1, 2))))/(2.*
                  Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0, 2) - 2*y0*y1 + Power(y1, 2), 
                    2.5)*((2*((-1 + t)*Power(x0, 2) - x0*x1 - 
                                  2*(-1 + t)*x0*x1 + 
                                  Power(x1, 2) + (-1 + t)*
                                    Power(x1, 2) + (-1 + t)*Power(y0, 2) - 
                                  y0*y1 - 2*(-1 + t)*y0*y1 + 
                                  Power(y1, 2) + (-1 + t)*Power(y1, 2)))/
                          Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0, 2) - 2*y0*y1 + Power(y1, 2)) + 
                      2*Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                            2*(-1 + t)*x0*x1 - 2*Power(-1 + t, 2)*x0*x1 + 
                            Power(x1, 2) + 2*(-1 + t)*Power(x1, 2) + 
                            Power(-1 + t, 2)*Power(x1, 2) + 
                            Power(-1 + t, 2)*Power(y0, 2) - 
                            2*(-1 + t)*y0*y1 - 2*Power(-1 + t, 2)*y0*y1 + 
                            Power(y1, 2) + 2*(-1 + t)*Power(y1, 2) + 
                            Power(-1 + t, 2)*Power(y1, 2)))) - ((y0 - 
                      y1)*(x1*y0 - x0*y1)*(-Power(x0, 2) + x0*x1 - 
                      Power(y0, 2) + 
                      y0*y1)*((2*(x0 + ((-2*x0 + 2*x1)*
                                        Sqrt(Power(x0, 2) + 
                                        Power(y0, 2)))/(2.*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0, 2) - 
                                        2*y0*y1 + Power(y1, 2)))))/
                          Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0, 2) - 2*y0*y1 + 
                            Power(y1, 
                                2)) - ((-2*x0 + 2*x1)*(-Power(x0, 2) + 
                                  x0*x1 - Power(y0, 2) + y0*y1 + 
                                  Sqrt(Power(x0, 2) + Power(y0, 2))*
                                    Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0, 2) - 
                                        2*y0*y1 + Power(y1, 2))))/
                          Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0, 2) - 2*y0*y1 + Power(y1, 2), 1.5)))/(2.*
                  Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0 - y1, 2), 1.5)*
                  Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + Power(y0, 2) - 
                      2*y0*y1 + Power(y1, 2))*(-Power(x0, 2) + x0*x1 - 
                      Power(y0, 2) + y0*y1 + 
                      Sqrt(Power(x0, 2) + Power(y0, 2))*
                        Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0, 2) - 2*y0*y1 + Power(y1, 2)))) + ((y0 - 
                      y1)*(x1*y0 - x0*y1)*(-Power(x0, 2) + x0*x1 - 
                      Power(y0, 2) + 
                      y0*y1)*((2*(x0 - 2*t*x0 + 
                                  2*t*x1 + ((2*t*x0 - 2*Power(t, 2)*x0 + 
                                        2*Power(t, 2)*x1)*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0, 2) - 
                                        2*y0*y1 + Power(y1, 2)))/(2.*
                                        Sqrt(Power(x0, 2) - 
                                        2*t*Power(x0, 2) + 
                                        Power(t, 2)*Power(x0, 2) + 
                                        2*t*x0*x1 - 2*Power(t, 2)*x0*x1 + 
                                        Power(t, 2)*Power(x1, 2) + 
                                        Power(y0, 2) - 2*t*Power(y0, 2) + 
                                        Power(t, 2)*Power(y0, 2) + 
                                        2*t*y0*y1 - 2*Power(t, 2)*y0*y1 + 
                                        Power(t, 2)*Power(y1, 2))) + ((-2*
                                        x0 + 2*x1)*
                                        Sqrt(Power(x0, 2) - 
                                        2*t*Power(x0, 2) + 
                                        Power(t, 2)*Power(x0, 2) + 
                                        2*t*x0*x1 - 2*Power(t, 2)*x0*x1 + 
                                        Power(t, 2)*Power(x1, 2) + 
                                        Power(y0, 2) - 2*t*Power(y0, 2) + 
                                        Power(t, 2)*Power(y0, 2) + 
                                        2*t*y0*y1 - 2*Power(t, 2)*y0*y1 + 
                                        Power(t, 2)*Power(y1, 2)))/(2.*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0, 2) - 
                                        2*y0*y1 + Power(y1, 2)))))/
                          Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0, 2) - 2*y0*y1 + 
                            Power(y1, 
                                2)) - ((-2*x0 + 2*x1)*(-Power(x0, 2) + 
                                  t*Power(x0, 2) + x0*x1 - 2*t*x0*x1 + 
                                  t*Power(x1, 2) - Power(y0, 2) + 
                                  t*Power(y0, 2) + y0*y1 - 2*t*y0*y1 + 
                                  t*Power(y1, 2) + 
                                  Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0, 2) - 
                                        2*y0*y1 + Power(y1, 2))*
                                    Sqrt(Power(x0, 2) - 2*t*Power(x0, 2) + 
                                        Power(t, 2)*Power(x0, 2) + 
                                        2*t*x0*x1 - 2*Power(t, 2)*x0*x1 + 
                                        Power(t, 2)*Power(x1, 2) + 
                                        Power(y0, 2) - 2*t*Power(y0, 2) + 
                                        Power(t, 2)*Power(y0, 2) + 
                                        2*t*y0*y1 - 2*Power(t, 2)*y0*y1 + 
                                        Power(t, 2)*Power(y1, 2))))/
                          Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0, 2) - 2*y0*y1 + Power(y1, 2), 1.5)))/(2.*
                  Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0 - y1, 2), 1.5)*
                  Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + Power(y0, 2) - 
                      2*y0*y1 + Power(y1, 2))*(-Power(x0, 2) + 
                      t*Power(x0, 2) + x0*x1 - 2*t*x0*x1 + t*Power(x1, 2) - 
                      Power(y0, 2) + t*Power(y0, 2) + y0*y1 - 2*t*y0*y1 + 
                      t*Power(y1, 2) + 
                      Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0, 2) - 2*y0*y1 + Power(y1, 2))*
                        Sqrt(Power(x0, 2) - 2*t*Power(x0, 2) + 
                            Power(t, 2)*Power(x0, 2) + 2*t*x0*x1 - 
                            2*Power(t, 2)*x0*x1 + Power(t, 2)*Power(x1, 2) + 
                            Power(y0, 2) - 2*t*Power(y0, 2) + 
                            Power(t, 2)*Power(y0, 2) + 2*t*y0*y1 - 
                            2*Power(t, 2)*y0*y1 + 
                            Power(t, 2)*Power(y1, 2)))) + (t*(y0 - 
                      y1)*(x1*y0 - x0*y1)*
                  Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + Power(y0, 2) - 
                      2*y0*y1 + 
                      Power(y1, 
                          2))*((2*(x0 - 2*t*x0 + 
                                  2*t*x1 + ((2*t*x0 - 2*Power(t, 2)*x0 + 
                                        2*Power(t, 2)*x1)*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0, 2) - 
                                        2*y0*y1 + Power(y1, 2)))/(2.*
                                        Sqrt(Power(x0, 2) - 
                                        2*t*Power(x0, 2) + 
                                        Power(t, 2)*Power(x0, 2) + 
                                        2*t*x0*x1 - 2*Power(t, 2)*x0*x1 + 
                                        Power(t, 2)*Power(x1, 2) + 
                                        Power(y0, 2) - 2*t*Power(y0, 2) + 
                                        Power(t, 2)*Power(y0, 2) + 
                                        2*t*y0*y1 - 2*Power(t, 2)*y0*y1 + 
                                        Power(t, 2)*Power(y1, 2))) + ((-2*
                                        x0 + 2*x1)*
                                        Sqrt(Power(x0, 2) - 
                                        2*t*Power(x0, 2) + 
                                        Power(t, 2)*Power(x0, 2) + 
                                        2*t*x0*x1 - 2*Power(t, 2)*x0*x1 + 
                                        Power(t, 2)*Power(x1, 2) + 
                                        Power(y0, 2) - 2*t*Power(y0, 2) + 
                                        Power(t, 2)*Power(y0, 2) + 
                                        2*t*y0*y1 - 2*Power(t, 2)*y0*y1 + 
                                        Power(t, 2)*Power(y1, 2)))/(2.*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0, 2) - 
                                        2*y0*y1 + Power(y1, 2)))))/
                          Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0, 2) - 2*y0*y1 + 
                            Power(y1, 
                                2)) - ((-2*x0 + 2*x1)*(-Power(x0, 2) + 
                                  t*Power(x0, 2) + x0*x1 - 2*t*x0*x1 + 
                                  t*Power(x1, 2) - Power(y0, 2) + 
                                  t*Power(y0, 2) + y0*y1 - 2*t*y0*y1 + 
                                  t*Power(y1, 2) + 
                                  Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0, 2) - 
                                        2*y0*y1 + Power(y1, 2))*
                                    Sqrt(Power(x0, 2) - 2*t*Power(x0, 2) + 
                                        Power(t, 2)*Power(x0, 2) + 
                                        2*t*x0*x1 - 2*Power(t, 2)*x0*x1 + 
                                        Power(t, 2)*Power(x1, 2) + 
                                        Power(y0, 2) - 2*t*Power(y0, 2) + 
                                        Power(t, 2)*Power(y0, 2) + 
                                        2*t*y0*y1 - 2*Power(t, 2)*y0*y1 + 
                                        Power(t, 2)*Power(y1, 2))))/
                          Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0, 2) - 2*y0*y1 + Power(y1, 2), 1.5)))/(2.*
                  Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0 - y1, 2), 
                    1.5)*(-Power(x0, 2) + t*Power(x0, 2) + x0*x1 - 
                      2*t*x0*x1 + t*Power(x1, 2) - Power(y0, 2) + 
                      t*Power(y0, 2) + y0*y1 - 2*t*y0*y1 + t*Power(y1, 2) + 
                      Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0, 2) - 2*y0*y1 + Power(y1, 2))*
                        Sqrt(Power(x0, 2) - 2*t*Power(x0, 2) + 
                            Power(t, 2)*Power(x0, 2) + 2*t*x0*x1 - 
                            2*Power(t, 2)*x0*x1 + Power(t, 2)*Power(x1, 2) + 
                            Power(y0, 2) - 2*t*Power(y0, 2) + 
                            Power(t, 2)*Power(y0, 2) + 2*t*y0*y1 - 
                            2*Power(t, 2)*y0*y1 + 
                            Power(t, 2)*Power(y1, 2)))) - ((y0 - y1)*(x1*y0 - 
                      x0*y1)*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + 
                      y0*y1)*((2*
                              x0 + ((-2*x0 + 2*x1)*
                                    Sqrt(Power(x0, 2) + Power(y0, 2)))/
                                Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0, 2) - 2*y0*y1 + 
                                  Power(y1, 2)))/(2*(-Power(x0, 2) + x0*x1 - 
                                  Power(y0, 2) + y0*y1) + 
                            2*Sqrt(Power(x0, 2) + Power(y0, 2))*
                              Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0, 2) - 2*y0*y1 + 
                                  Power(y1, 2))) - (Sqrt(Power(x0, 2) - 
                                2*x0*x1 + Power(x1, 2) + Power(y0, 2) - 
                                2*y0*y1 + 
                                Power(y1, 
                                    2))*((2*(x0 + ((-2*x0 + 2*x1)*
                                        Sqrt(Power(x0, 2) + 
                                        Power(y0, 2)))/(2.*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0, 2) - 
                                        2*y0*y1 + Power(y1, 2)))))/
                                    Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                      Power(x1, 2) + Power(y0, 2) - 2*y0*y1 + 
                                      Power(y1, 
                                        2)) - ((-2*x0 + 
                                        2*x1)*(-Power(x0, 2) + x0*x1 - 
                                        Power(y0, 2) + y0*y1 + 
                                        Sqrt(Power(x0, 2) + Power(y0, 2))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0, 2) - 
                                        2*y0*y1 + Power(y1, 2))))/
                                    Power(Power(x0, 2) - 2*x0*x1 + 
                                      Power(x1, 2) + Power(y0, 2) - 2*y0*y1 + 
                                      Power(y1, 2), 1.5)))/(2.*(-Power(x0, 
                                    2) + x0*x1 - Power(y0, 2) + y0*y1 + 
                                Sqrt(Power(x0, 2) + Power(y0, 2))*
                                  Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                      Power(x1, 2) + Power(y0, 2) - 2*y0*y1 + 
                                      Power(y1, 2))))))/(Power(Power(x0, 2) - 
                      2*x0*x1 + Power(x1, 2) + Power(y0 - y1, 2), 
                    1.5)*(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0, 2) - 2*y0*y1 + Power(y1, 2))) + ((y0 - 
                      y1)*(x1*y0 - x0*y1)*(-Power(x0, 2) + x0*x1 - 
                      Power(y0, 2) + 
                      y0*y1)*((2*(x0 - 2*t*x0 + 
                                  2*t*x1) + ((2*t*x0 - 2*Power(t, 2)*x0 + 
                                        2*Power(t, 2)*x1)*
                                    Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0, 2) - 
                                        2*y0*y1 + Power(y1, 2)))/
                                Sqrt(Power(x0, 2) - 2*t*Power(x0, 2) + 
                                  Power(t, 2)*Power(x0, 2) + 2*t*x0*x1 - 
                                  2*Power(t, 2)*x0*x1 + 
                                  Power(t, 2)*Power(x1, 2) + Power(y0, 2) - 
                                  2*t*Power(y0, 2) + 
                                  Power(t, 2)*Power(y0, 2) + 2*t*y0*y1 - 
                                  2*Power(t, 2)*y0*y1 + 
                                  Power(t, 2)*Power(y1, 2)) + ((-2*x0 + 2*x1)*
                                    Sqrt(Power(x0, 2) - 2*t*Power(x0, 2) + 
                                        Power(t, 2)*Power(x0, 2) + 
                                        2*t*x0*x1 - 2*Power(t, 2)*x0*x1 + 
                                        Power(t, 2)*Power(x1, 2) + 
                                        Power(y0, 2) - 2*t*Power(y0, 2) + 
                                        Power(t, 2)*Power(y0, 2) + 
                                        2*t*y0*y1 - 2*Power(t, 2)*y0*y1 + 
                                        Power(t, 2)*Power(y1, 2)))/
                                Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0, 2) - 2*y0*y1 + 
                                  Power(y1, 2)))/(2*(-Power(x0, 2) + 
                                  t*Power(x0, 2) + x0*x1 - 2*t*x0*x1 + 
                                  t*Power(x1, 2) - Power(y0, 2) + 
                                  t*Power(y0, 2) + y0*y1 - 2*t*y0*y1 + 
                                  t*Power(y1, 2)) + 
                            2*Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0, 2) - 2*y0*y1 + Power(y1, 2))*
                              Sqrt(Power(x0, 2) - 2*t*Power(x0, 2) + 
                                  Power(t, 2)*Power(x0, 2) + 2*t*x0*x1 - 
                                  2*Power(t, 2)*x0*x1 + 
                                  Power(t, 2)*Power(x1, 2) + Power(y0, 2) - 
                                  2*t*Power(y0, 2) + 
                                  Power(t, 2)*Power(y0, 2) + 2*t*y0*y1 - 
                                  2*Power(t, 2)*y0*y1 + 
                                  Power(t, 2)*Power(y1, 2))) - (Sqrt(Power(x0,
                                     2) - 2*x0*x1 + Power(x1, 2) + 
                                Power(y0, 2) - 2*y0*y1 + 
                                Power(y1, 
                                    2))*((2*(x0 - 2*t*x0 + 
                                        2*t*x1 + ((2*t*x0 - 
                                        2*Power(t, 2)*x0 + 2*Power(t, 2)*x1)*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0, 2) - 
                                        2*y0*y1 + Power(y1, 2)))/(2.*
                                        Sqrt(Power(x0, 2) - 
                                        2*t*Power(x0, 2) + 
                                        Power(t, 2)*Power(x0, 2) + 
                                        2*t*x0*x1 - 2*Power(t, 2)*x0*x1 + 
                                        Power(t, 2)*Power(x1, 2) + 
                                        Power(y0, 2) - 2*t*Power(y0, 2) + 
                                        Power(t, 2)*Power(y0, 2) + 
                                        2*t*y0*y1 - 2*Power(t, 2)*y0*y1 + 
                                        Power(t, 2)*Power(y1, 2))) + ((-2*
                                        x0 + 2*x1)*
                                        Sqrt(Power(x0, 2) - 
                                        2*t*Power(x0, 2) + 
                                        Power(t, 2)*Power(x0, 2) + 
                                        2*t*x0*x1 - 2*Power(t, 2)*x0*x1 + 
                                        Power(t, 2)*Power(x1, 2) + 
                                        Power(y0, 2) - 2*t*Power(y0, 2) + 
                                        Power(t, 2)*Power(y0, 2) + 
                                        2*t*y0*y1 - 2*Power(t, 2)*y0*y1 + 
                                        Power(t, 2)*Power(y1, 2)))/(2.*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0, 2) - 
                                        2*y0*y1 + Power(y1, 2)))))/
                                    Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                      Power(x1, 2) + Power(y0, 2) - 2*y0*y1 + 
                                      Power(y1, 
                                        2)) - ((-2*x0 + 
                                        2*x1)*(-Power(x0, 2) + 
                                        t*Power(x0, 2) + x0*x1 - 2*t*x0*x1 + 
                                        t*Power(x1, 2) - Power(y0, 2) + 
                                        t*Power(y0, 2) + y0*y1 - 2*t*y0*y1 + 
                                        t*Power(y1, 2) + 
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0, 2) - 
                                        2*y0*y1 + Power(y1, 2))*
                                        Sqrt(Power(x0, 2) - 
                                        2*t*Power(x0, 2) + 
                                        Power(t, 2)*Power(x0, 2) + 
                                        2*t*x0*x1 - 2*Power(t, 2)*x0*x1 + 
                                        Power(t, 2)*Power(x1, 2) + 
                                        Power(y0, 2) - 2*t*Power(y0, 2) + 
                                        Power(t, 2)*Power(y0, 2) + 
                                        2*t*y0*y1 - 2*Power(t, 2)*y0*y1 + 
                                        Power(t, 2)*Power(y1, 2))))/
                                    Power(Power(x0, 2) - 2*x0*x1 + 
                                      Power(x1, 2) + Power(y0, 2) - 2*y0*y1 + 
                                      Power(y1, 2), 1.5)))/(2.*(-Power(x0, 
                                    2) + t*Power(x0, 2) + x0*x1 - 2*t*x0*x1 + 
                                t*Power(x1, 2) - Power(y0, 2) + 
                                t*Power(y0, 2) + y0*y1 - 2*t*y0*y1 + 
                                t*Power(y1, 2) + 
                                Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                      Power(y0, 2) - 2*y0*y1 + Power(y1, 2))*
                                  Sqrt(Power(x0, 2) - 2*t*Power(x0, 2) + 
                                      Power(t, 2)*Power(x0, 2) + 2*t*x0*x1 - 
                                      2*Power(t, 2)*x0*x1 + 
                                      Power(t, 2)*Power(x1, 2) + 
                                      Power(y0, 2) - 2*t*Power(y0, 2) + 
                                      Power(t, 2)*Power(y0, 2) + 2*t*y0*y1 - 
                                      2*Power(t, 2)*y0*y1 + 
                                      Power(t, 2)*
                                        Power(y1, 2))))))/(Power(Power(x0, 
                          2) - 2*x0*x1 + Power(x1, 2) + Power(y0 - y1, 2), 
                    1.5)*(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0, 2) - 2*y0*y1 + Power(y1, 2))) - (t*
                    y0*(y0 - y1)*
                    Log((2*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + 
                                  Sqrt(Power(x0, 2) + Power(y0, 2))*
                                    Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                  y0*y1))/
                          Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0 - y1, 2))))/
                Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                  Power(y0 - y1, 2), 
                1.5) - (3*t*(-2*x0 + 2*x1)*(y0 - y1)*(-(x1*y0) + x0*y1)*
                  Log((2*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + 
                                Sqrt(Power(x0, 2) + Power(y0, 2))*
                                  Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                      Power(x1, 2) + Power(y0 - y1, 2)) + 
                                y0*y1))/
                        Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                          Power(y0 - y1, 2))))/(2.*
                  Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0 - y1, 2), 2.5)) + (5*(-x0 + x1)*(-2*x0 + 2*x1)*
                  Power(-(x1*y0) + x0*y1, 2)*
                  Log(2*Sqrt(Power(x0, 2) + 
                            Power(y0, 
                                2)) + (2*(-Power(x0, 2) + x0*x1 - 
                                  Power(y0, 2) + y0*y1))/
                          Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0, 2) - 2*y0*y1 + Power(y1, 2))))/(4.*
                  Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0, 2) - 2*y0*y1 + Power(y1, 2), 
                    3.5)) + ((-x0 + x1)*y0*(-(x1*y0) + x0*y1)*
                    Log(2*Sqrt(Power(x0, 2) + 
                              Power(y0, 
                                  2)) + (2*(-Power(x0, 2) + x0*x1 - 
                                    Power(y0, 2) + y0*y1))/
                            Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                              Power(y0, 2) - 2*y0*y1 + Power(y1, 2))))/
                Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + Power(y0, 2) - 
                  2*y0*y1 + Power(y1, 2), 
                2.5) - (Power(-(x1*y0) + x0*y1, 2)*
                  Log(2*Sqrt(Power(x0, 2) + 
                            Power(y0, 
                                2)) + (2*(-Power(x0, 2) + x0*x1 - 
                                  Power(y0, 2) + y0*y1))/
                          Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0, 2) - 2*y0*y1 + Power(y1, 2))))/(2.*
                  Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0, 2) - 2*y0*y1 + Power(y1, 2), 
                    2.5)) + ((-2*x0 + 2*x1)*(y0 - y1)*(x1*y0 - 
                      x0*y1)*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + y0*y1)*
                  Log((2*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + y0*y1 + 
                                Sqrt(Power(x0, 2) + Power(y0, 2))*
                                  Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                      Power(x1, 2) + Power(y0, 2) - 2*y0*y1 + 
                                      Power(y1, 2))))/
                        Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                          Power(y0, 2) - 2*y0*y1 + 
                          Power(y1, 2))))/(Power(Power(x0, 2) - 2*x0*x1 + 
                      Power(x1, 2) + Power(y0 - y1, 2), 1.5)*
                  Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0, 2) - 2*y0*y1 + Power(y1, 2), 
                    2)) - (x0*(y0 - y1)*(x1*y0 - x0*y1)*
                  Log((2*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + y0*y1 + 
                                Sqrt(Power(x0, 2) + Power(y0, 2))*
                                  Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                      Power(x1, 2) + Power(y0, 2) - 2*y0*y1 + 
                                      Power(y1, 2))))/
                        Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                          Power(y0, 2) - 2*y0*y1 + 
                          Power(y1, 2))))/(Power(Power(x0, 2) - 2*x0*x1 + 
                      Power(x1, 2) + Power(y0 - y1, 2), 
                    1.5)*(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0, 2) - 2*y0*y1 + Power(y1, 2))) - (y0*(y0 - 
                      y1)*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + y0*y1)*
                  Log((2*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + y0*y1 + 
                                Sqrt(Power(x0, 2) + Power(y0, 2))*
                                  Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                      Power(x1, 2) + Power(y0, 2) - 2*y0*y1 + 
                                      Power(y1, 2))))/
                        Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                          Power(y0, 2) - 2*y0*y1 + 
                          Power(y1, 2))))/(Power(Power(x0, 2) - 2*x0*x1 + 
                      Power(x1, 2) + Power(y0 - y1, 2), 
                    1.5)*(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0, 2) - 2*y0*y1 + Power(y1, 2))) + (3*(-2*x0 + 
                      2*x1)*(y0 - y1)*(x1*y0 - x0*y1)*(-Power(x0, 2) + 
                      x0*x1 - Power(y0, 2) + y0*y1)*
                  Log((2*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + y0*y1 + 
                                Sqrt(Power(x0, 2) + Power(y0, 2))*
                                  Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                      Power(x1, 2) + Power(y0, 2) - 2*y0*y1 + 
                                      Power(y1, 2))))/
                        Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                          Power(y0, 2) - 2*y0*y1 + Power(y1, 2))))/(2.*
                  Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0 - y1, 2), 
                    2.5)*(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0, 2) - 2*y0*y1 + Power(y1, 2))) + ((-2*x0 + 
                      2*x1)*(y0 - y1)*(x1*y0 - x0*y1)*(-Power(x0, 2) + 
                      x0*x1 - Power(y0, 2) + 
                      y0*y1)*(-Log((2*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + 
                                      y0*y1 + 
                                      Sqrt(Power(x0, 2) + Power(y0, 2))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0, 2) - 
                                        2*y0*y1 + Power(y1, 2))))/
                              Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                Power(y0, 2) - 2*y0*y1 + Power(y1, 2))) + 
                      Log(2*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + y0*y1) + 
                            2*Sqrt(Power(x0, 2) + Power(y0, 2))*
                              Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0, 2) - 2*y0*y1 + 
                                  Power(y1, 2)))))/(Power(Power(x0, 2) - 
                      2*x0*x1 + Power(x1, 2) + Power(y0 - y1, 2), 1.5)*
                  Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0, 2) - 2*y0*y1 + Power(y1, 2), 
                    2)) - (x0*(y0 - y1)*(x1*y0 - 
                      x0*y1)*(-Log((2*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + 
                                      y0*y1 + 
                                      Sqrt(Power(x0, 2) + Power(y0, 2))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0, 2) - 
                                        2*y0*y1 + Power(y1, 2))))/
                              Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                Power(y0, 2) - 2*y0*y1 + Power(y1, 2))) + 
                      Log(2*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + y0*y1) + 
                            2*Sqrt(Power(x0, 2) + Power(y0, 2))*
                              Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0, 2) - 2*y0*y1 + 
                                  Power(y1, 2)))))/(Power(Power(x0, 2) - 
                      2*x0*x1 + Power(x1, 2) + Power(y0 - y1, 2), 
                    1.5)*(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0, 2) - 2*y0*y1 + Power(y1, 2))) - (y0*(y0 - 
                      y1)*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + 
                      y0*y1)*(-Log((2*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + 
                                      y0*y1 + 
                                      Sqrt(Power(x0, 2) + Power(y0, 2))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0, 2) - 
                                        2*y0*y1 + Power(y1, 2))))/
                              Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                Power(y0, 2) - 2*y0*y1 + Power(y1, 2))) + 
                      Log(2*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + y0*y1) + 
                            2*Sqrt(Power(x0, 2) + Power(y0, 2))*
                              Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0, 2) - 2*y0*y1 + 
                                  Power(y1, 2)))))/(Power(Power(x0, 2) - 
                      2*x0*x1 + Power(x1, 2) + Power(y0 - y1, 2), 
                    1.5)*(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0, 2) - 2*y0*y1 + Power(y1, 2))) + (3*(-2*x0 + 
                      2*x1)*(y0 - y1)*(x1*y0 - x0*y1)*(-Power(x0, 2) + 
                      x0*x1 - Power(y0, 2) + 
                      y0*y1)*(-Log((2*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + 
                                      y0*y1 + 
                                      Sqrt(Power(x0, 2) + Power(y0, 2))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0, 2) - 
                                        2*y0*y1 + Power(y1, 2))))/
                              Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                Power(y0, 2) - 2*y0*y1 + Power(y1, 2))) + 
                      Log(2*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + y0*y1) + 
                            2*Sqrt(Power(x0, 2) + Power(y0, 2))*
                              Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0, 2) - 2*y0*y1 + 
                                  Power(y1, 2)))))/(2.*
                  Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0 - y1, 2), 
                    2.5)*(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0, 2) - 2*y0*y1 + Power(y1, 2))) - (5*(-x0 + 
                      x1)*(-2*x0 + 2*x1)*Power(-(x1*y0) + x0*y1, 2)*
                  Log((2*((-1 + t)*Power(x0, 2) - x0*x1 - 2*(-1 + t)*x0*x1 + 
                                  Power(x1, 2) + (-1 + t)*
                                    Power(x1, 2) + (-1 + t)*Power(y0, 2) - 
                                  y0*y1 - 2*(-1 + t)*y0*y1 + 
                                  Power(y1, 2) + (-1 + t)*Power(y1, 2)))/
                          Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0, 2) - 2*y0*y1 + Power(y1, 2)) + 
                      2*Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                            2*(-1 + t)*x0*x1 - 2*Power(-1 + t, 2)*x0*x1 + 
                            Power(x1, 2) + 2*(-1 + t)*Power(x1, 2) + 
                            Power(-1 + t, 2)*Power(x1, 2) + 
                            Power(-1 + t, 2)*Power(y0, 2) - 
                            2*(-1 + t)*y0*y1 - 2*Power(-1 + t, 2)*y0*y1 + 
                            Power(y1, 2) + 2*(-1 + t)*Power(y1, 2) + 
                            Power(-1 + t, 2)*Power(y1, 2))))/(4.*
                  Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0, 2) - 2*y0*y1 + Power(y1, 2), 
                    3.5)) - ((-x0 + x1)*y0*(-(x1*y0) + x0*y1)*
                    Log((2*((-1 + t)*Power(x0, 2) - x0*x1 - 
                                    2*(-1 + t)*x0*x1 + 
                                    Power(x1, 2) + (-1 + t)*
                                      Power(x1, 2) + (-1 + t)*Power(y0, 2) - 
                                    y0*y1 - 2*(-1 + t)*y0*y1 + 
                                    Power(y1, 2) + (-1 + t)*Power(y1, 2)))/
                            Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                              Power(y0, 2) - 2*y0*y1 + Power(y1, 2)) + 
                        2*Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                              2*(-1 + t)*x0*x1 - 2*Power(-1 + t, 2)*x0*x1 + 
                              Power(x1, 2) + 2*(-1 + t)*Power(x1, 2) + 
                              Power(-1 + t, 2)*Power(x1, 2) + 
                              Power(-1 + t, 2)*Power(y0, 2) - 
                              2*(-1 + t)*y0*y1 - 2*Power(-1 + t, 2)*y0*y1 + 
                              Power(y1, 2) + 2*(-1 + t)*Power(y1, 2) + 
                              Power(-1 + t, 2)*Power(y1, 2))))/
                Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + Power(y0, 2) - 
                  2*y0*y1 + Power(y1, 2), 
                2.5) + (Power(-(x1*y0) + x0*y1, 2)*
                  Log((2*((-1 + t)*Power(x0, 2) - x0*x1 - 2*(-1 + t)*x0*x1 + 
                                  Power(x1, 2) + (-1 + t)*
                                    Power(x1, 2) + (-1 + t)*Power(y0, 2) - 
                                  y0*y1 - 2*(-1 + t)*y0*y1 + 
                                  Power(y1, 2) + (-1 + t)*Power(y1, 2)))/
                          Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0, 2) - 2*y0*y1 + Power(y1, 2)) + 
                      2*Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                            2*(-1 + t)*x0*x1 - 2*Power(-1 + t, 2)*x0*x1 + 
                            Power(x1, 2) + 2*(-1 + t)*Power(x1, 2) + 
                            Power(-1 + t, 2)*Power(x1, 2) + 
                            Power(-1 + t, 2)*Power(y0, 2) - 
                            2*(-1 + t)*y0*y1 - 2*Power(-1 + t, 2)*y0*y1 + 
                            Power(y1, 2) + 2*(-1 + t)*Power(y1, 2) + 
                            Power(-1 + t, 2)*Power(y1, 2))))/(2.*
                  Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0, 2) - 2*y0*y1 + Power(y1, 2), 2.5)) + (t*
                    y0*(y0 - y1)*
                    Log((2*(-Power(x0, 2) + t*Power(x0, 2) + x0*x1 - 
                                  2*t*x0*x1 + t*Power(x1, 2) - Power(y0, 2) + 
                                  t*Power(y0, 2) + y0*y1 - 2*t*y0*y1 + 
                                  t*Power(y1, 2) + 
                                  Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0, 2) - 
                                        2*y0*y1 + Power(y1, 2))*
                                    Sqrt(Power(x0, 2) - 2*t*Power(x0, 2) + 
                                        Power(t, 2)*Power(x0, 2) + 
                                        2*t*x0*x1 - 2*Power(t, 2)*x0*x1 + 
                                        Power(t, 2)*Power(x1, 2) + 
                                        Power(y0, 2) - 2*t*Power(y0, 2) + 
                                        Power(t, 2)*Power(y0, 2) + 
                                        2*t*y0*y1 - 2*Power(t, 2)*y0*y1 + 
                                        Power(t, 2)*Power(y1, 2))))/
                          Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0, 2) - 2*y0*y1 + Power(y1, 2))))/
                Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                  Power(y0 - y1, 2), 
                1.5) - (3*t*(-2*x0 + 2*x1)*(y0 - y1)*(x1*y0 - x0*y1)*
                  Log((2*(-Power(x0, 2) + t*Power(x0, 2) + x0*x1 - 
                                2*t*x0*x1 + t*Power(x1, 2) - Power(y0, 2) + 
                                t*Power(y0, 2) + y0*y1 - 2*t*y0*y1 + 
                                t*Power(y1, 2) + 
                                Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                      Power(y0, 2) - 2*y0*y1 + Power(y1, 2))*
                                  Sqrt(Power(x0, 2) - 2*t*Power(x0, 2) + 
                                      Power(t, 2)*Power(x0, 2) + 2*t*x0*x1 - 
                                      2*Power(t, 2)*x0*x1 + 
                                      Power(t, 2)*Power(x1, 2) + 
                                      Power(y0, 2) - 2*t*Power(y0, 2) + 
                                      Power(t, 2)*Power(y0, 2) + 2*t*y0*y1 - 
                                      2*Power(t, 2)*y0*y1 + 
                                      Power(t, 2)*Power(y1, 2))))/
                        Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                          Power(y0, 2) - 2*y0*y1 + Power(y1, 2))))/(2.*
                  Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0 - y1, 2), 
                    2.5)) - ((-2*x0 + 2*x1)*(y0 - y1)*(x1*y0 - 
                      x0*y1)*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + y0*y1)*
                  Log((2*(-Power(x0, 2) + t*Power(x0, 2) + x0*x1 - 
                                2*t*x0*x1 + t*Power(x1, 2) - Power(y0, 2) + 
                                t*Power(y0, 2) + y0*y1 - 2*t*y0*y1 + 
                                t*Power(y1, 2) + 
                                Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                      Power(y0, 2) - 2*y0*y1 + Power(y1, 2))*
                                  Sqrt(Power(x0, 2) - 2*t*Power(x0, 2) + 
                                      Power(t, 2)*Power(x0, 2) + 2*t*x0*x1 - 
                                      2*Power(t, 2)*x0*x1 + 
                                      Power(t, 2)*Power(x1, 2) + 
                                      Power(y0, 2) - 2*t*Power(y0, 2) + 
                                      Power(t, 2)*Power(y0, 2) + 2*t*y0*y1 - 
                                      2*Power(t, 2)*y0*y1 + 
                                      Power(t, 2)*Power(y1, 2))))/
                        Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                          Power(y0, 2) - 2*y0*y1 + 
                          Power(y1, 2))))/(Power(Power(x0, 2) - 2*x0*x1 + 
                      Power(x1, 2) + Power(y0 - y1, 2), 1.5)*
                  Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0, 2) - 2*y0*y1 + Power(y1, 2), 
                    2)) + (x0*(y0 - y1)*(x1*y0 - x0*y1)*
                  Log((2*(-Power(x0, 2) + t*Power(x0, 2) + x0*x1 - 
                                2*t*x0*x1 + t*Power(x1, 2) - Power(y0, 2) + 
                                t*Power(y0, 2) + y0*y1 - 2*t*y0*y1 + 
                                t*Power(y1, 2) + 
                                Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                      Power(y0, 2) - 2*y0*y1 + Power(y1, 2))*
                                  Sqrt(Power(x0, 2) - 2*t*Power(x0, 2) + 
                                      Power(t, 2)*Power(x0, 2) + 2*t*x0*x1 - 
                                      2*Power(t, 2)*x0*x1 + 
                                      Power(t, 2)*Power(x1, 2) + 
                                      Power(y0, 2) - 2*t*Power(y0, 2) + 
                                      Power(t, 2)*Power(y0, 2) + 2*t*y0*y1 - 
                                      2*Power(t, 2)*y0*y1 + 
                                      Power(t, 2)*Power(y1, 2))))/
                        Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                          Power(y0, 2) - 2*y0*y1 + 
                          Power(y1, 2))))/(Power(Power(x0, 2) - 2*x0*x1 + 
                      Power(x1, 2) + Power(y0 - y1, 2), 
                    1.5)*(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0, 2) - 2*y0*y1 + Power(y1, 2))) + (y0*(y0 - 
                      y1)*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + y0*y1)*
                  Log((2*(-Power(x0, 2) + t*Power(x0, 2) + x0*x1 - 
                                2*t*x0*x1 + t*Power(x1, 2) - Power(y0, 2) + 
                                t*Power(y0, 2) + y0*y1 - 2*t*y0*y1 + 
                                t*Power(y1, 2) + 
                                Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                      Power(y0, 2) - 2*y0*y1 + Power(y1, 2))*
                                  Sqrt(Power(x0, 2) - 2*t*Power(x0, 2) + 
                                      Power(t, 2)*Power(x0, 2) + 2*t*x0*x1 - 
                                      2*Power(t, 2)*x0*x1 + 
                                      Power(t, 2)*Power(x1, 2) + 
                                      Power(y0, 2) - 2*t*Power(y0, 2) + 
                                      Power(t, 2)*Power(y0, 2) + 2*t*y0*y1 - 
                                      2*Power(t, 2)*y0*y1 + 
                                      Power(t, 2)*Power(y1, 2))))/
                        Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                          Power(y0, 2) - 2*y0*y1 + 
                          Power(y1, 2))))/(Power(Power(x0, 2) - 2*x0*x1 + 
                      Power(x1, 2) + Power(y0 - y1, 2), 
                    1.5)*(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0, 2) - 2*y0*y1 + Power(y1, 2))) - (3*(-2*x0 + 
                      2*x1)*(y0 - y1)*(x1*y0 - x0*y1)*(-Power(x0, 2) + 
                      x0*x1 - Power(y0, 2) + y0*y1)*
                  Log((2*(-Power(x0, 2) + t*Power(x0, 2) + x0*x1 - 
                                2*t*x0*x1 + t*Power(x1, 2) - Power(y0, 2) + 
                                t*Power(y0, 2) + y0*y1 - 2*t*y0*y1 + 
                                t*Power(y1, 2) + 
                                Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                      Power(y0, 2) - 2*y0*y1 + Power(y1, 2))*
                                  Sqrt(Power(x0, 2) - 2*t*Power(x0, 2) + 
                                      Power(t, 2)*Power(x0, 2) + 2*t*x0*x1 - 
                                      2*Power(t, 2)*x0*x1 + 
                                      Power(t, 2)*Power(x1, 2) + 
                                      Power(y0, 2) - 2*t*Power(y0, 2) + 
                                      Power(t, 2)*Power(y0, 2) + 2*t*y0*y1 - 
                                      2*Power(t, 2)*y0*y1 + 
                                      Power(t, 2)*Power(y1, 2))))/
                        Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                          Power(y0, 2) - 2*y0*y1 + Power(y1, 2))))/(2.*
                  Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0 - y1, 2), 
                    2.5)*(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0, 2) - 2*y0*y1 + Power(y1, 2))) - ((-2*x0 + 
                      2*x1)*(y0 - y1)*(x1*y0 - x0*y1)*(-Power(x0, 2) + 
                      x0*x1 - Power(y0, 2) + 
                      y0*y1)*(-Log((2*(-Power(x0, 2) + t*Power(x0, 2) + 
                                      x0*x1 - 2*t*x0*x1 + t*Power(x1, 2) - 
                                      Power(y0, 2) + t*Power(y0, 2) + y0*y1 - 
                                      2*t*y0*y1 + t*Power(y1, 2) + 
                                      Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0, 2) - 
                                        2*y0*y1 + Power(y1, 2))*
                                        Sqrt(Power(x0, 2) - 
                                        2*t*Power(x0, 2) + 
                                        Power(t, 2)*Power(x0, 2) + 
                                        2*t*x0*x1 - 2*Power(t, 2)*x0*x1 + 
                                        Power(t, 2)*Power(x1, 2) + 
                                        Power(y0, 2) - 2*t*Power(y0, 2) + 
                                        Power(t, 2)*Power(y0, 2) + 
                                        2*t*y0*y1 - 2*Power(t, 2)*y0*y1 + 
                                        Power(t, 2)*Power(y1, 2))))/
                              Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                Power(y0, 2) - 2*y0*y1 + Power(y1, 2))) + 
                      Log(2*(-Power(x0, 2) + t*Power(x0, 2) + x0*x1 - 
                                  2*t*x0*x1 + t*Power(x1, 2) - Power(y0, 2) + 
                                  t*Power(y0, 2) + y0*y1 - 2*t*y0*y1 + 
                                  t*Power(y1, 2)) + 
                            2*Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0, 2) - 2*y0*y1 + Power(y1, 2))*
                              Sqrt(Power(x0, 2) - 2*t*Power(x0, 2) + 
                                  Power(t, 2)*Power(x0, 2) + 2*t*x0*x1 - 
                                  2*Power(t, 2)*x0*x1 + 
                                  Power(t, 2)*Power(x1, 2) + Power(y0, 2) - 
                                  2*t*Power(y0, 2) + 
                                  Power(t, 2)*Power(y0, 2) + 2*t*y0*y1 - 
                                  2*Power(t, 2)*y0*y1 + 
                                  Power(t, 2)*
                                    Power(y1, 2)))))/(Power(Power(x0, 2) - 
                      2*x0*x1 + Power(x1, 2) + Power(y0 - y1, 2), 1.5)*
                  Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0, 2) - 2*y0*y1 + Power(y1, 2), 
                    2)) + (x0*(y0 - y1)*(x1*y0 - 
                      x0*y1)*(-Log((2*(-Power(x0, 2) + t*Power(x0, 2) + 
                                      x0*x1 - 2*t*x0*x1 + t*Power(x1, 2) - 
                                      Power(y0, 2) + t*Power(y0, 2) + y0*y1 - 
                                      2*t*y0*y1 + t*Power(y1, 2) + 
                                      Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0, 2) - 
                                        2*y0*y1 + Power(y1, 2))*
                                        Sqrt(Power(x0, 2) - 
                                        2*t*Power(x0, 2) + 
                                        Power(t, 2)*Power(x0, 2) + 
                                        2*t*x0*x1 - 2*Power(t, 2)*x0*x1 + 
                                        Power(t, 2)*Power(x1, 2) + 
                                        Power(y0, 2) - 2*t*Power(y0, 2) + 
                                        Power(t, 2)*Power(y0, 2) + 
                                        2*t*y0*y1 - 2*Power(t, 2)*y0*y1 + 
                                        Power(t, 2)*Power(y1, 2))))/
                              Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                Power(y0, 2) - 2*y0*y1 + Power(y1, 2))) + 
                      Log(2*(-Power(x0, 2) + t*Power(x0, 2) + x0*x1 - 
                                  2*t*x0*x1 + t*Power(x1, 2) - Power(y0, 2) + 
                                  t*Power(y0, 2) + y0*y1 - 2*t*y0*y1 + 
                                  t*Power(y1, 2)) + 
                            2*Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0, 2) - 2*y0*y1 + Power(y1, 2))*
                              Sqrt(Power(x0, 2) - 2*t*Power(x0, 2) + 
                                  Power(t, 2)*Power(x0, 2) + 2*t*x0*x1 - 
                                  2*Power(t, 2)*x0*x1 + 
                                  Power(t, 2)*Power(x1, 2) + Power(y0, 2) - 
                                  2*t*Power(y0, 2) + 
                                  Power(t, 2)*Power(y0, 2) + 2*t*y0*y1 - 
                                  2*Power(t, 2)*y0*y1 + 
                                  Power(t, 2)*
                                    Power(y1, 2)))))/(Power(Power(x0, 2) - 
                      2*x0*x1 + Power(x1, 2) + Power(y0 - y1, 2), 
                    1.5)*(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0, 2) - 2*y0*y1 + Power(y1, 2))) + (y0*(y0 - 
                      y1)*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + 
                      y0*y1)*(-Log((2*(-Power(x0, 2) + t*Power(x0, 2) + 
                                      x0*x1 - 2*t*x0*x1 + t*Power(x1, 2) - 
                                      Power(y0, 2) + t*Power(y0, 2) + y0*y1 - 
                                      2*t*y0*y1 + t*Power(y1, 2) + 
                                      Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0, 2) - 
                                        2*y0*y1 + Power(y1, 2))*
                                        Sqrt(Power(x0, 2) - 
                                        2*t*Power(x0, 2) + 
                                        Power(t, 2)*Power(x0, 2) + 
                                        2*t*x0*x1 - 2*Power(t, 2)*x0*x1 + 
                                        Power(t, 2)*Power(x1, 2) + 
                                        Power(y0, 2) - 2*t*Power(y0, 2) + 
                                        Power(t, 2)*Power(y0, 2) + 
                                        2*t*y0*y1 - 2*Power(t, 2)*y0*y1 + 
                                        Power(t, 2)*Power(y1, 2))))/
                              Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                Power(y0, 2) - 2*y0*y1 + Power(y1, 2))) + 
                      Log(2*(-Power(x0, 2) + t*Power(x0, 2) + x0*x1 - 
                                  2*t*x0*x1 + t*Power(x1, 2) - Power(y0, 2) + 
                                  t*Power(y0, 2) + y0*y1 - 2*t*y0*y1 + 
                                  t*Power(y1, 2)) + 
                            2*Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0, 2) - 2*y0*y1 + Power(y1, 2))*
                              Sqrt(Power(x0, 2) - 2*t*Power(x0, 2) + 
                                  Power(t, 2)*Power(x0, 2) + 2*t*x0*x1 - 
                                  2*Power(t, 2)*x0*x1 + 
                                  Power(t, 2)*Power(x1, 2) + Power(y0, 2) - 
                                  2*t*Power(y0, 2) + 
                                  Power(t, 2)*Power(y0, 2) + 2*t*y0*y1 - 
                                  2*Power(t, 2)*y0*y1 + 
                                  Power(t, 2)*
                                    Power(y1, 2)))))/(Power(Power(x0, 2) - 
                      2*x0*x1 + Power(x1, 2) + Power(y0 - y1, 2), 
                    1.5)*(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0, 2) - 2*y0*y1 + Power(y1, 2))) - (3*(-2*x0 + 
                      2*x1)*(y0 - y1)*(x1*y0 - x0*y1)*(-Power(x0, 2) + 
                      x0*x1 - Power(y0, 2) + 
                      y0*y1)*(-Log((2*(-Power(x0, 2) + t*Power(x0, 2) + 
                                      x0*x1 - 2*t*x0*x1 + t*Power(x1, 2) - 
                                      Power(y0, 2) + t*Power(y0, 2) + y0*y1 - 
                                      2*t*y0*y1 + t*Power(y1, 2) + 
                                      Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0, 2) - 
                                        2*y0*y1 + Power(y1, 2))*
                                        Sqrt(Power(x0, 2) - 
                                        2*t*Power(x0, 2) + 
                                        Power(t, 2)*Power(x0, 2) + 
                                        2*t*x0*x1 - 2*Power(t, 2)*x0*x1 + 
                                        Power(t, 2)*Power(x1, 2) + 
                                        Power(y0, 2) - 2*t*Power(y0, 2) + 
                                        Power(t, 2)*Power(y0, 2) + 
                                        2*t*y0*y1 - 2*Power(t, 2)*y0*y1 + 
                                        Power(t, 2)*Power(y1, 2))))/
                              Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                Power(y0, 2) - 2*y0*y1 + Power(y1, 2))) + 
                      Log(2*(-Power(x0, 2) + t*Power(x0, 2) + x0*x1 - 
                                  2*t*x0*x1 + t*Power(x1, 2) - Power(y0, 2) + 
                                  t*Power(y0, 2) + y0*y1 - 2*t*y0*y1 + 
                                  t*Power(y1, 2)) + 
                            2*Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0, 2) - 2*y0*y1 + Power(y1, 2))*
                              Sqrt(Power(x0, 2) - 2*t*Power(x0, 2) + 
                                  Power(t, 2)*Power(x0, 2) + 2*t*x0*x1 - 
                                  2*Power(t, 2)*x0*x1 + 
                                  Power(t, 2)*Power(x1, 2) + Power(y0, 2) - 
                                  2*t*Power(y0, 2) + 
                                  Power(t, 2)*Power(y0, 2) + 2*t*y0*y1 - 
                                  2*Power(t, 2)*y0*y1 + 
                                  Power(t, 2)*Power(y1, 2)))))/(2.*
                  Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0 - y1, 2), 
                    2.5)*(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0, 2) - 2*y0*y1 + 
                      Power(y1, 2))), ((-2*(x0 - x1)*y0*
                          Sqrt(Power(x0, 2) + Power(y0, 2)))/
                      Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                        Power(y0 - y1, 2), 
                      2) + (x0*Sqrt(Power(x0, 2) + Power(y0, 2))*(y0 - y1))/
                      Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                        Power(y0 - y1, 2), 
                      2) - (4*(x0 - x1)*(-2*x0 + 2*x1)*
                          Sqrt(Power(x0, 2) + Power(y0, 2))*(-(x1*y0) + 
                              x0*y1))/
                      Power3(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                        Power(y0 - y1, 2), 
                      3) - (2*
                          Sqrt(Power(x0, 2) + Power(y0, 2))*(-(x1*y0) + 
                              x0*y1))/
                      Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                        Power(y0 - y1, 2), 
                      2) - (2*(-2*x0 + 2*x1)*
                          Sqrt(Power(x0, 2) + Power(y0, 2))*(y0 - 
                              y1)*(-Power(x0, 2) + x0*x1 + y0*(-y0 + y1)))/
                      Power3(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                        Power(y0 - y1, 2), 
                      3) + ((y0 - y1)*
                        Power(x1*y0 - x0*y1, 
                          2)*((2*(x0 + ((-2*x0 + 2*x1)*
                                        Sqrt(Power(x0, 2) + 
                                        Power(y0, 2)))/(2.*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)))))/
                                Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0 - y1, 
                                      2)) - ((-2*x0 + 2*x1)*(-Power(x0, 2) + 
                                        x0*x1 - Power(y0, 2) + 
                                        Sqrt(Power(x0, 2) + Power(y0, 2))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1))/
                                Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0 - y1, 2), 1.5)))/(2.*
                        Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0 - y1, 2), 
                          2)*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + 
                            Sqrt(Power(x0, 2) + Power(y0, 2))*
                              Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0 - y1, 2)) + y0*y1)) + ((x0 - 
                            x1)*(Power(x0, 2) - x0*x1 + 
                            y0*(y0 - y1))*(-(x1*y0) + 
                            x0*y1)*((2*(x0 + ((-2*x0 + 2*x1)*
                                        Sqrt(Power(x0, 2) + 
                                        Power(y0, 2)))/(2.*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)))))/
                                Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0 - y1, 
                                      2)) - ((-2*x0 + 2*x1)*(-Power(x0, 2) + 
                                        x0*x1 - Power(y0, 2) + 
                                        Sqrt(Power(x0, 2) + Power(y0, 2))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1))/
                                Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0 - y1, 2), 1.5)))/(Power(Power(x0, 
                                2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0 - y1, 2), 
                          2)*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + 
                            Sqrt(Power(x0, 2) + Power(y0, 2))*
                              Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0 - y1, 2)) + 
                            y0*y1)) - (2*(x0 - x1)*(Power(x0, 2) - x0*x1 + 
                              y0*(y0 - y1))*(-(x1*y0) + 
                              x0*y1)*(-((x0 + ((-2*x0 + 2*x1)*
                                        Sqrt(Power(x0, 2) + 
                                        Power(y0, 2)))/(2.*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + 
                                        Power(y0 - y1, 2))))/(-Power(x0, 2) + 
                                        x0*x1 - Power(y0, 2) + 
                                        Sqrt(Power(x0, 2) + Power(y0, 2))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1)) + (Sqrt(Power(x0, 2) - 
                                        2*x0*x1 + Power(x1, 2) + 
                                        Power(y0 - y1, 
                                        2))*((2*(x0 + ((-2*x0 + 2*x1)*
                                        Sqrt(Power(x0, 2) + Power(y0, 
                                        2)))/(2.*Sqrt(Power(x0, 2) - 
                                        2*x0*x1 + Power(x1, 2) + 
                                        Power(y0 - y1, 2)))))/
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + 
                                        Power(y0 - y1, 
                                        2)) - ((-2*x0 + 
                                        2*x1)*(-Power(x0, 2) + x0*x1 - 
                                        Power(y0, 2) + 
                                        Sqrt(Power(x0, 2) + Power(y0, 2))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1))/
                                        Power(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2), 
                                        1.5)))/(2.*(-Power(x0, 2) + x0*x1 - 
                                        Power(y0, 2) + 
                                        Sqrt(Power(x0, 2) + Power(y0, 2))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1))))/
                      Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                        Power(y0 - y1, 2), 
                      2.5) - (2*(x0 - x1)*
                          y0*(Power(x0, 2) - x0*x1 + y0*(y0 - y1))*
                          Log((2*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + 
                                        Sqrt(Power(x0, 2) + Power(y0, 2))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1))/
                                Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0 - y1, 2))))/
                      Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                        Power(y0 - y1, 2), 
                      2.5) + (2*y0*(y0 - y1)*(x1*y0 - x0*y1)*
                          Log((2*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + 
                                        Sqrt(Power(x0, 2) + Power(y0, 2))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1))/
                                Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0 - y1, 2))))/
                      Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                        Power(y0 - y1, 2), 
                      2.5) - (5*(-2*x0 + 2*x1)*(y0 - y1)*
                        Power(x1*y0 - x0*y1, 2)*
                        Log((2*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + 
                                      Sqrt(Power(x0, 2) + Power(y0, 2))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                      y0*y1))/
                              Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                Power(y0 - y1, 2))))/(2.*
                        Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0 - y1, 2), 
                          3.5)) - (5*(x0 - x1)*(-2*x0 + 2*x1)*(Power(x0, 2) - 
                              x0*x1 + y0*(y0 - y1))*(-(x1*y0) + x0*y1)*
                          Log((2*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + 
                                        Sqrt(Power(x0, 2) + Power(y0, 2))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1))/
                                Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0 - y1, 2))))/
                      Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                        Power(y0 - y1, 2), 
                      3.5) - (2*x0*(x0 - x1)*(-(x1*y0) + x0*y1)*
                          Log((2*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + 
                                        Sqrt(Power(x0, 2) + Power(y0, 2))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1))/
                                Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0 - y1, 2))))/
                      Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                        Power(y0 - y1, 2), 
                      2.5) - (2*(Power(x0, 2) - x0*x1 + 
                              y0*(y0 - y1))*(-(x1*y0) + x0*y1)*
                          Log((2*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + 
                                        Sqrt(Power(x0, 2) + Power(y0, 2))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1))/
                                Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0 - y1, 2))))/
                      Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                        Power(y0 - y1, 2), 
                      2.5) + (2*(x0 - x1)*
                          y0*(Power(x0, 2) - x0*x1 + 
                              y0*(y0 - 
                                    y1))*(-Log(2*(-Power(x0, 2) + x0*x1 - 
                                        Power(y0, 2) + 
                                        Sqrt(Power(x0, 2) + Power(y0, 2))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1)) + 
                              Log((2*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + 
                                        Sqrt(Power(x0, 2) + Power(y0, 2))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1))/
                                      Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)))))/
                      Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                        Power(y0 - y1, 2), 
                      2.5) + (5*(x0 - x1)*(-2*x0 + 2*x1)*(Power(x0, 2) - 
                              x0*x1 + y0*(y0 - y1))*(-(x1*y0) + 
                              x0*y1)*(-Log(2*(-Power(x0, 2) + x0*x1 - 
                                        Power(y0, 2) + 
                                        Sqrt(Power(x0, 2) + Power(y0, 2))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1)) + 
                              Log((2*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + 
                                        Sqrt(Power(x0, 2) + Power(y0, 2))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1))/
                                      Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)))))/
                      Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                        Power(y0 - y1, 2), 
                      3.5) + (2*
                          x0*(x0 - x1)*(-(x1*y0) + 
                              x0*y1)*(-Log(2*(-Power(x0, 2) + x0*x1 - 
                                        Power(y0, 2) + 
                                        Sqrt(Power(x0, 2) + Power(y0, 2))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1)) + 
                              Log((2*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + 
                                        Sqrt(Power(x0, 2) + Power(y0, 2))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1))/
                                      Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)))))/
                      Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                        Power(y0 - y1, 2), 
                      2.5) + (2*(Power(x0, 2) - x0*x1 + 
                              y0*(y0 - y1))*(-(x1*y0) + 
                              x0*y1)*(-Log(2*(-Power(x0, 2) + x0*x1 - 
                                        Power(y0, 2) + 
                                        Sqrt(Power(x0, 2) + Power(y0, 2))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1)) + 
                              Log((2*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + 
                                        Sqrt(Power(x0, 2) + Power(y0, 2))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1))/
                                      Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)))))/
                      Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                        Power(y0 - y1, 2), 2.5))/
              2. + ((2*(x0 - x1)*y0*
                          Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                              2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                              Power(t, 
                                  2)*(Power(x1, 2) + Power(y0 - y1, 2)) - 
                              2*t*y0*(y0 - y1)))/
                      Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                        Power(y0 - y1, 2), 
                      2) - (2*t*(-2*x0 + 2*x1)*
                          Sqrt(Power(x0, 2) + Power(y0, 2))*(y0 - y1))/
                      Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                        Power(y0 - y1, 2), 
                      2) - (((1 - 2*t)*x0 + 2*t*x1)*
                          Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                              2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                              Power(t, 
                                  2)*(Power(x1, 2) + Power(y0 - y1, 2)) - 
                              2*t*y0*(y0 - y1))*(y0 - y1))/
                      Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                        Power(y0 - y1, 2), 
                      2) + (4*(x0 - x1)*(-2*x0 + 2*x1)*
                          Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                              2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                              Power(t, 
                                  2)*(Power(x1, 2) + Power(y0 - y1, 2)) - 
                              2*t*y0*(y0 - y1))*(-(x1*y0) + x0*y1))/
                      Power3(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                        Power(y0 - y1, 2), 
                      3) - ((x0 - x1)*(-2*(-1 + t)*t*x0 + 
                            2*Power(t, 2)*x1)*(-(x1*y0) + 
                            x0*y1))/(Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                            2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                            Power(t, 2)*(Power(x1, 2) + Power(y0 - y1, 2)) - 
                            2*t*y0*(y0 - y1))*
                        Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0 - y1, 2), 2)) + (2*
                          Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                              2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                              Power(t, 
                                  2)*(Power(x1, 2) + Power(y0 - y1, 2)) - 
                              2*t*y0*(y0 - y1))*(-(x1*y0) + x0*y1))/
                      Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                        Power(y0 - y1, 2), 
                      2) + (2*(-2*x0 + 2*x1)*
                          Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                              2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                              Power(t, 
                                  2)*(Power(x1, 2) + Power(y0 - y1, 2)) - 
                              2*t*y0*(y0 - y1))*(y0 - 
                              y1)*((-1 + t)*Power(x0, 2) + x0*(x1 - 2*t*x1) + 
                              t*(Power(x1, 2) + Power(y0 - y1, 2)) + 
                              y0*(-y0 + y1)))/
                      Power3(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                        Power(y0 - y1, 2), 
                      3) - ((-2*(-1 + t)*t*x0 + 2*Power(t, 2)*x1)*(y0 - 
                            y1)*((-1 + t)*Power(x0, 2) + x0*(x1 - 2*t*x1) + 
                            t*(Power(x1, 2) + Power(y0 - y1, 2)) + 
                            y0*(-y0 + y1)))/(2.*
                        Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                            2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                            Power(t, 2)*(Power(x1, 2) + Power(y0 - y1, 2)) - 
                            2*t*y0*(y0 - y1))*
                        Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0 - y1, 2), 
                          2)) - (t*(x0 - x1)*(-(x1*y0) + 
                            x0*y1)*((2*(x0 + ((-2*x0 + 2*x1)*
                                        Sqrt(Power(x0, 2) + 
                                        Power(y0, 2)))/(2.*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)))))/
                                Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0 - y1, 
                                      2)) - ((-2*x0 + 2*x1)*(-Power(x0, 2) + 
                                        x0*x1 - Power(y0, 2) + 
                                        Sqrt(Power(x0, 2) + Power(y0, 2))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1))/
                                Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0 - y1, 2), 1.5)))/((Power(x0, 2) - 
                            2*x0*x1 + Power(x1, 2) + 
                            Power(y0 - y1, 2))*(-Power(x0, 2) + x0*x1 - 
                            Power(y0, 2) + 
                            Sqrt(Power(x0, 2) + Power(y0, 2))*
                              Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0 - y1, 2)) + y0*y1)) - ((y0 - y1)*
                        Power(x1*y0 - x0*y1, 
                          2)*((2*(x0 - 2*t*x0 + 
                                        2*t*x1 + ((-2*x0 + 2*x1)*
                                        Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1)))/(2.*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + 
                                        Power(y0 - y1, 2))) + ((-2*(-1 + t)*t*
                                        x0 + 2*Power(t, 2)*x1)*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + 
                                        Power(y0 - y1, 2)))/(2.*
                                        Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1)))))/
                                Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0 - y1, 
                                      2)) - ((-2*x0 + 2*x1)*(-Power(x0, 2) + 
                                        t*Power(x0, 2) + x0*x1 - 2*t*x0*x1 + 
                                        t*Power(x1, 2) - Power(y0, 2) + 
                                        t*Power(y0, 2) + 
                                        Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1 - 2*t*y0*y1 + t*Power(y1, 2)))/
                                Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0 - y1, 2), 1.5)))/(2.*
                        Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0 - y1, 2), 
                          2)*(-Power(x0, 2) + t*Power(x0, 2) + x0*x1 - 
                            2*t*x0*x1 + t*Power(x1, 2) - Power(y0, 2) + 
                            t*Power(y0, 2) + 
                            Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                  2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                  Power(t, 
                                      2)*(Power(x1, 2) + Power(y0 - y1, 2)) - 
                                  2*t*y0*(y0 - y1))*
                              Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0 - y1, 2)) + y0*y1 - 2*t*y0*y1 + 
                            t*Power(y1, 2))) - ((x0 - x1)*(Power(x0, 2) - 
                            x0*x1 + y0*(y0 - y1))*(-(x1*y0) + 
                            x0*y1)*((2*(x0 - 2*t*x0 + 
                                        2*t*x1 + ((-2*x0 + 2*x1)*
                                        Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1)))/(2.*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + 
                                        Power(y0 - y1, 2))) + ((-2*(-1 + t)*t*
                                        x0 + 2*Power(t, 2)*x1)*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + 
                                        Power(y0 - y1, 2)))/(2.*
                                        Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1)))))/
                                Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0 - y1, 
                                      2)) - ((-2*x0 + 2*x1)*(-Power(x0, 2) + 
                                        t*Power(x0, 2) + x0*x1 - 2*t*x0*x1 + 
                                        t*Power(x1, 2) - Power(y0, 2) + 
                                        t*Power(y0, 2) + 
                                        Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1 - 2*t*y0*y1 + t*Power(y1, 2)))/
                                Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0 - y1, 2), 1.5)))/(Power(Power(x0, 
                                2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0 - y1, 2), 
                          2)*(-Power(x0, 2) + t*Power(x0, 2) + x0*x1 - 
                            2*t*x0*x1 + t*Power(x1, 2) - Power(y0, 2) + 
                            t*Power(y0, 2) + 
                            Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                  2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                  Power(t, 
                                      2)*(Power(x1, 2) + Power(y0 - y1, 2)) - 
                                  2*t*y0*(y0 - y1))*
                              Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0 - y1, 2)) + y0*y1 - 2*t*y0*y1 + 
                            t*Power(y1, 2))) + (t*(x0 - x1)*(-(x1*y0) + 
                            x0*y1)*((2*(x0 - 2*t*x0 + 
                                        2*t*x1 + ((-2*x0 + 2*x1)*
                                        Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1)))/(2.*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + 
                                        Power(y0 - y1, 2))) + ((-2*(-1 + t)*t*
                                        x0 + 2*Power(t, 2)*x1)*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + 
                                        Power(y0 - y1, 2)))/(2.*
                                        Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1)))))/
                                Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0 - y1, 
                                      2)) - ((-2*x0 + 2*x1)*(-Power(x0, 2) + 
                                        t*Power(x0, 2) + x0*x1 - 2*t*x0*x1 + 
                                        t*Power(x1, 2) - Power(y0, 2) + 
                                        t*Power(y0, 2) + 
                                        Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1 - 2*t*y0*y1 + t*Power(y1, 2)))/
                                Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0 - y1, 2), 1.5)))/((Power(x0, 2) - 
                            2*x0*x1 + Power(x1, 2) + 
                            Power(y0 - y1, 2))*(-Power(x0, 2) + 
                            t*Power(x0, 2) + x0*x1 - 2*t*x0*x1 + 
                            t*Power(x1, 2) - Power(y0, 2) + t*Power(y0, 2) + 
                            Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                  2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                  Power(t, 
                                      2)*(Power(x1, 2) + Power(y0 - y1, 2)) - 
                                  2*t*y0*(y0 - y1))*
                              Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0 - y1, 2)) + y0*y1 - 2*t*y0*y1 + 
                            t*Power(y1, 2))) + (2*(x0 - x1)*(Power(x0, 2) - 
                              x0*x1 + y0*(y0 - y1))*(-(x1*y0) + 
                              x0*y1)*(-((x0 - 2*t*x0 + 
                                        2*t*x1 + ((-2*x0 + 2*x1)*
                                        Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1)))/(2.*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + 
                                        Power(y0 - y1, 2))) + ((-2*(-1 + t)*t*
                                        x0 + 2*Power(t, 2)*x1)*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + 
                                        Power(y0 - y1, 2)))/(2.*
                                        Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1))))/(-Power(x0, 2) + 
                                        t*Power(x0, 2) + x0*x1 - 2*t*x0*x1 + 
                                        t*Power(x1, 2) - Power(y0, 2) + 
                                        t*Power(y0, 2) + 
                                        Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1 - 2*t*y0*y1 + 
                                        t*Power(y1, 2))) + (Sqrt(Power(x0, 
                                        2) - 2*x0*x1 + Power(x1, 2) + 
                                        Power(y0 - y1, 
                                        2))*((2*(x0 - 2*t*x0 + 
                                        2*t*x1 + ((-2*x0 + 2*x1)*
                                        Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 2*t*
                                        y0*(y0 - y1)))/(2.*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 
                                        2))) + ((-2*(-1 + t)*t*x0 + 
                                        2*Power(t, 2)*x1)*Sqrt(Power(x0, 2) - 
                                        2*x0*x1 + Power(x1, 2) + 
                                        Power(y0 - y1, 2)))/(2.*
                                        Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 2*t*
                                        y0*(y0 - y1)))))/
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + 
                                        Power(y0 - y1, 
                                        2)) - ((-2*x0 + 
                                        2*x1)*(-Power(x0, 2) + 
                                        t*Power(x0, 2) + x0*x1 - 2*t*x0*x1 + 
                                        t*Power(x1, 2) - Power(y0, 2) + 
                                        t*Power(y0, 2) + 
                                        Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1 - 2*t*y0*y1 + t*Power(y1, 2)))/
                                        Power(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2), 
                                        1.5)))/(2.*(-Power(x0, 2) + 
                                        t*Power(x0, 2) + x0*x1 - 2*t*x0*x1 + 
                                        t*Power(x1, 2) - Power(y0, 2) + 
                                        t*Power(y0, 2) + 
                                        Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1 - 2*t*y0*y1 + 
                                        t*Power(y1, 2)))))/
                      Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                        Power(y0 - y1, 2), 
                      2.5) + (2*t*(x0 - x1)*y0*
                          Log((2*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + 
                                        Sqrt(Power(x0, 2) + Power(y0, 2))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1))/
                                Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0 - y1, 2))))/
                      Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                        Power(y0 - y1, 2), 
                      1.5) + (3*t*(x0 - x1)*(-2*x0 + 2*x1)*(-(x1*y0) + x0*y1)*
                          Log((2*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + 
                                        Sqrt(Power(x0, 2) + Power(y0, 2))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1))/
                                Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0 - y1, 2))))/
                      Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                        Power(y0 - y1, 2), 
                      2.5) + (2*t*(-(x1*y0) + x0*y1)*
                          Log((2*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + 
                                        Sqrt(Power(x0, 2) + Power(y0, 2))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1))/
                                Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0 - y1, 2))))/
                      Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                        Power(y0 - y1, 2), 
                      1.5) + (2*(x0 - x1)*
                          y0*(Power(x0, 2) - x0*x1 + y0*(y0 - y1))*
                          Log((2*(-Power(x0, 2) + t*Power(x0, 2) + x0*x1 - 
                                        2*t*x0*x1 + t*Power(x1, 2) - 
                                        Power(y0, 2) + t*Power(y0, 2) + 
                                        Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1 - 2*t*y0*y1 + t*Power(y1, 2)))/
                                Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0 - y1, 2))))/
                      Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                        Power(y0 - y1, 2), 
                      2.5) - (2*t*(x0 - x1)*y0*
                          Log((2*(-Power(x0, 2) + t*Power(x0, 2) + x0*x1 - 
                                        2*t*x0*x1 + t*Power(x1, 2) - 
                                        Power(y0, 2) + t*Power(y0, 2) + 
                                        Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1 - 2*t*y0*y1 + t*Power(y1, 2)))/
                                Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0 - y1, 2))))/
                      Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                        Power(y0 - y1, 2), 
                      1.5) - (2*y0*(y0 - y1)*(x1*y0 - x0*y1)*
                          Log((2*(-Power(x0, 2) + t*Power(x0, 2) + x0*x1 - 
                                        2*t*x0*x1 + t*Power(x1, 2) - 
                                        Power(y0, 2) + t*Power(y0, 2) + 
                                        Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1 - 2*t*y0*y1 + t*Power(y1, 2)))/
                                Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0 - y1, 2))))/
                      Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                        Power(y0 - y1, 2), 
                      2.5) + (5*(-2*x0 + 2*x1)*(y0 - y1)*
                        Power(x1*y0 - x0*y1, 2)*
                        Log((2*(-Power(x0, 2) + t*Power(x0, 2) + x0*x1 - 
                                      2*t*x0*x1 + t*Power(x1, 2) - 
                                      Power(y0, 2) + t*Power(y0, 2) + 
                                      Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 
                                        2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                      y0*y1 - 2*t*y0*y1 + t*Power(y1, 2)))/
                              Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                Power(y0 - y1, 2))))/(2.*
                        Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0 - y1, 2), 
                          3.5)) + (5*(x0 - x1)*(-2*x0 + 2*x1)*(Power(x0, 2) - 
                              x0*x1 + y0*(y0 - y1))*(-(x1*y0) + x0*y1)*
                          Log((2*(-Power(x0, 2) + t*Power(x0, 2) + x0*x1 - 
                                        2*t*x0*x1 + t*Power(x1, 2) - 
                                        Power(y0, 2) + t*Power(y0, 2) + 
                                        Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1 - 2*t*y0*y1 + t*Power(y1, 2)))/
                                Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0 - y1, 2))))/
                      Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                        Power(y0 - y1, 2), 
                      3.5) + (2*x0*(x0 - x1)*(-(x1*y0) + x0*y1)*
                          Log((2*(-Power(x0, 2) + t*Power(x0, 2) + x0*x1 - 
                                        2*t*x0*x1 + t*Power(x1, 2) - 
                                        Power(y0, 2) + t*Power(y0, 2) + 
                                        Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1 - 2*t*y0*y1 + t*Power(y1, 2)))/
                                Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0 - y1, 2))))/
                      Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                        Power(y0 - y1, 2), 
                      2.5) - (3*t*(x0 - x1)*(-2*x0 + 2*x1)*(-(x1*y0) + x0*y1)*
                          Log((2*(-Power(x0, 2) + t*Power(x0, 2) + x0*x1 - 
                                        2*t*x0*x1 + t*Power(x1, 2) - 
                                        Power(y0, 2) + t*Power(y0, 2) + 
                                        Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1 - 2*t*y0*y1 + t*Power(y1, 2)))/
                                Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0 - y1, 2))))/
                      Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                        Power(y0 - y1, 2), 
                      2.5) + (2*(Power(x0, 2) - x0*x1 + 
                              y0*(y0 - y1))*(-(x1*y0) + x0*y1)*
                          Log((2*(-Power(x0, 2) + t*Power(x0, 2) + x0*x1 - 
                                        2*t*x0*x1 + t*Power(x1, 2) - 
                                        Power(y0, 2) + t*Power(y0, 2) + 
                                        Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1 - 2*t*y0*y1 + t*Power(y1, 2)))/
                                Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0 - y1, 2))))/
                      Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                        Power(y0 - y1, 2), 
                      2.5) - (2*t*(-(x1*y0) + x0*y1)*
                          Log((2*(-Power(x0, 2) + t*Power(x0, 2) + x0*x1 - 
                                        2*t*x0*x1 + t*Power(x1, 2) - 
                                        Power(y0, 2) + t*Power(y0, 2) + 
                                        Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1 - 2*t*y0*y1 + t*Power(y1, 2)))/
                                Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0 - y1, 2))))/
                      Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                        Power(y0 - y1, 2), 
                      1.5) - (2*(x0 - x1)*
                          y0*(Power(x0, 2) - x0*x1 + 
                              y0*(y0 - 
                                    y1))*(-Log(2*(-Power(x0, 2) + 
                                        t*Power(x0, 2) + x0*x1 - 2*t*x0*x1 + 
                                        t*Power(x1, 2) - Power(y0, 2) + 
                                        t*Power(y0, 2) + 
                                        Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1 - 2*t*y0*y1 + 
                                        t*Power(y1, 2))) + 
                              Log((2*(-Power(x0, 2) + t*Power(x0, 2) + 
                                        x0*x1 - 2*t*x0*x1 + t*Power(x1, 2) - 
                                        Power(y0, 2) + t*Power(y0, 2) + 
                                        Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1 - 2*t*y0*y1 + t*Power(y1, 2)))/
                                      Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)))))/
                      Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                        Power(y0 - y1, 2), 
                      2.5) - (5*(x0 - x1)*(-2*x0 + 2*x1)*(Power(x0, 2) - 
                              x0*x1 + y0*(y0 - y1))*(-(x1*y0) + 
                              x0*y1)*(-Log(2*(-Power(x0, 2) + 
                                        t*Power(x0, 2) + x0*x1 - 2*t*x0*x1 + 
                                        t*Power(x1, 2) - Power(y0, 2) + 
                                        t*Power(y0, 2) + 
                                        Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1 - 2*t*y0*y1 + 
                                        t*Power(y1, 2))) + 
                              Log((2*(-Power(x0, 2) + t*Power(x0, 2) + 
                                        x0*x1 - 2*t*x0*x1 + t*Power(x1, 2) - 
                                        Power(y0, 2) + t*Power(y0, 2) + 
                                        Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1 - 2*t*y0*y1 + t*Power(y1, 2)))/
                                      Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)))))/
                      Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                        Power(y0 - y1, 2), 
                      3.5) - (2*
                          x0*(x0 - x1)*(-(x1*y0) + 
                              x0*y1)*(-Log(2*(-Power(x0, 2) + 
                                        t*Power(x0, 2) + x0*x1 - 2*t*x0*x1 + 
                                        t*Power(x1, 2) - Power(y0, 2) + 
                                        t*Power(y0, 2) + 
                                        Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1 - 2*t*y0*y1 + 
                                        t*Power(y1, 2))) + 
                              Log((2*(-Power(x0, 2) + t*Power(x0, 2) + 
                                        x0*x1 - 2*t*x0*x1 + t*Power(x1, 2) - 
                                        Power(y0, 2) + t*Power(y0, 2) + 
                                        Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1 - 2*t*y0*y1 + t*Power(y1, 2)))/
                                      Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)))))/
                      Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                        Power(y0 - y1, 2), 
                      2.5) - (2*(Power(x0, 2) - x0*x1 + 
                              y0*(y0 - y1))*(-(x1*y0) + 
                              x0*y1)*(-Log(2*(-Power(x0, 2) + 
                                        t*Power(x0, 2) + x0*x1 - 2*t*x0*x1 + 
                                        t*Power(x1, 2) - Power(y0, 2) + 
                                        t*Power(y0, 2) + 
                                        Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1 - 2*t*y0*y1 + 
                                        t*Power(y1, 2))) + 
                              Log((2*(-Power(x0, 2) + t*Power(x0, 2) + 
                                        x0*x1 - 2*t*x0*x1 + t*Power(x1, 2) - 
                                        Power(y0, 2) + t*Power(y0, 2) + 
                                        Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1 - 2*t*y0*y1 + t*Power(y1, 2)))/
                                      Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)))))/
                      Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                        Power(y0 - y1, 2), 2.5))/2.,
                        
                        
    (((2*(x0 - x1)*
                  Sqrt(Power(x0, 2) + Power(y0, 2)))/(Power(x0, 2) - 
                  2*x0*x1 + Power(x1, 2) + Power(y0 - y1, 2)) + ((-x0 + x1)*
                  Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 2*(-1 + t)*t*x0*x1 + 
                      Power(y0, 2) + 
                      Power(t, 2)*(Power(x1, 2) + Power(y0 - y1, 2)) - 
                      2*t*y0*(y0 - y1)))/(Power(x0, 2) - 2*x0*x1 + 
                  Power(x1, 2) + 
                  Power(y0 - y1, 2)) + (2*(y0 - y1)*(-(x1*y0) + 
                      x0*y1)*((-1 + t)*Power(x0, 2) + x0*(x1 - 2*t*x1) + 
                      t*(Power(x1, 2) + Power(y0 - y1, 2)) + 
                      y0*(-y0 + y1)))/(Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                      2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                      Power(t, 2)*(Power(x1, 2) + Power(y0 - y1, 2)) - 
                      2*t*y0*(y0 - y1))*
                  Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0 - y1, 2), 2)) - ((x0 - x1)*
                  Power((-1 + t)*Power(x0, 2) + x0*(x1 - 2*t*x1) + 
                      t*(Power(x1, 2) + Power(y0 - y1, 2)) + y0*(-y0 + y1), 
                    2))/(Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                      2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                      Power(t, 2)*(Power(x1, 2) + Power(y0 - y1, 2)) - 
                      2*t*y0*(y0 - y1))*
                  Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0 - y1, 2), 2)) + (2*
                  t*(y0 - y1)*(x1*y0 - x0*y1)*(Power(x0, 2) - 2*x0*x1 + 
                      Power(x1, 2) + Power(y0, 2) - 2*y0*y1 + 
                      Power(y1, 
                          2) + (Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0 - y1, 2))*((-1 + t)*Power(x0, 2) + 
                                  x0*(x1 - 2*t*x1) + 
                                  t*(Power(x1, 2) + Power(y0 - y1, 2)) + 
                                  y0*(-y0 + y1)))/
                          Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                            2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                            Power(t, 2)*(Power(x1, 2) + Power(y0 - y1, 2)) - 
                            2*t*y0*(y0 - y1))))/(Power(Power(x0, 2) - 
                      2*x0*x1 + Power(x1, 2) + Power(y0 - y1, 2), 
                    1.5)*(-Power(x0, 2) + t*Power(x0, 2) + x0*x1 - 
                      2*t*x0*x1 + t*Power(x1, 2) - Power(y0, 2) + 
                      t*Power(y0, 2) + 
                      Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                            2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                            Power(t, 2)*(Power(x1, 2) + Power(y0 - y1, 2)) - 
                            2*t*y0*(y0 - y1))*
                        Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0 - y1, 2)) + y0*y1 - 2*t*y0*y1 + 
                      t*Power(y1, 2))) - ((x0 - x1)*
                  Power(x1*y0 - x0*y1, 
                    2)*(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0, 2) - 2*y0*y1 + 
                      Power(y1, 
                          2) + (Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0 - y1, 2))*((-1 + t)*Power(x0, 2) + 
                                  x0*(x1 - 2*t*x1) + 
                                  t*(Power(x1, 2) + Power(y0 - y1, 2)) + 
                                  y0*(-y0 + y1)))/
                          Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                            2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                            Power(t, 2)*(Power(x1, 2) + Power(y0 - y1, 2)) - 
                            2*t*y0*(y0 - y1))))/(Power(Power(x0, 2) - 
                      2*x0*x1 + Power(x1, 2) + Power(y0 - y1, 2), 
                    2.5)*(-Power(x0, 2) + t*Power(x0, 2) + x0*x1 - 
                      2*t*x0*x1 + t*Power(x1, 2) - Power(y0, 2) + 
                      t*Power(y0, 2) + 
                      Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                            2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                            Power(t, 2)*(Power(x1, 2) + Power(y0 - y1, 2)) - 
                            2*t*y0*(y0 - y1))*
                        Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0 - y1, 2)) + y0*y1 - 2*t*y0*y1 + 
                      t*Power(y1, 2))) + (2*(Power(x0, 2) - x0*x1 + 
                      y0*(y0 - y1))*(y0 - y1)*(-(x1*y0) + 
                      x0*y1)*(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0, 2) - 2*y0*y1 + 
                      Power(y1, 
                          2) + (Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0 - y1, 2))*((-1 + t)*Power(x0, 2) + 
                                  x0*(x1 - 2*t*x1) + 
                                  t*(Power(x1, 2) + Power(y0 - y1, 2)) + 
                                  y0*(-y0 + y1)))/
                          Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                            2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                            Power(t, 2)*(Power(x1, 2) + Power(y0 - y1, 2)) - 
                            2*t*y0*(y0 - y1))))/(Power(Power(x0, 2) - 
                      2*x0*x1 + Power(x1, 2) + Power(y0 - y1, 2), 
                    2.5)*(-Power(x0, 2) + t*Power(x0, 2) + x0*x1 - 
                      2*t*x0*x1 + t*Power(x1, 2) - Power(y0, 2) + 
                      t*Power(y0, 2) + 
                      Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                            2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                            Power(t, 2)*(Power(x1, 2) + Power(y0 - y1, 2)) - 
                            2*t*y0*(y0 - y1))*
                        Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0 - y1, 2)) + y0*y1 - 2*t*y0*y1 + 
                      t*Power(y1, 2))) + (2*(y0 - y1)*(-(x1*y0) + x0*y1)*
                    Log((2*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + 
                                  Sqrt(Power(x0, 2) + Power(y0, 2))*
                                    Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                  y0*y1))/
                          Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0 - y1, 2))))/
                Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                  Power(y0 - y1, 2), 
                1.5) + (2*(y0 - y1)*(x1*y0 - x0*y1)*
                    Log((2*(-Power(x0, 2) + t*Power(x0, 2) + x0*x1 - 
                                  2*t*x0*x1 + t*Power(x1, 2) - Power(y0, 2) + 
                                  t*Power(y0, 2) + 
                                  Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 
                                        2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1))*
                                    Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                  y0*y1 - 2*t*y0*y1 + t*Power(y1, 2)))/
                          Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0 - y1, 2))))/
                Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                  Power(y0 - y1, 2), 1.5))/2.)

                        
                        
                        );
                assert(answer.length == 5);
                return answer;
            } // calcPosition0Gradient
            private static double[] calcPosition1Gradient(double p0[], double v0[], // constant; doesn't take part in derivatives
                                                          double A0[],
                                                          double A1[],
                                                          double t,
                                                          boolean twoQuadraticsMode)
            {
                double x0 = A0[0];
                double y0 = A0[1];
                double x1 = A1[0];
                double y1 = A1[1];
                double answer[] = 
      List(((-x0 + x1)*(2*t*y0 - 2*Power(t, 2)*(y0 - y1)))/(2.*
                  Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 2*(-1 + t)*t*x0*x1 + 
                      Power(y0, 2) + 
                      Power(t, 2)*(Power(x1, 2) + Power(y0 - y1, 2)) - 
                      2*t*y0*(y0 - y1))*(Power(x0, 2) - 2*x0*x1 + 
                      Power(x1, 2) + Power(y0 - y1, 2))) - (2*(-x0 + x1)*
                    Sqrt(Power(x0, 2) + Power(y0, 2))*(y0 - y1))/
                Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                  Power(y0 - y1, 2), 
                2) + (2*(-x0 + x1)*
                    Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 2*(-1 + t)*t*x0*x1 + 
                        Power(y0, 2) + 
                        Power(t, 2)*(Power(x1, 2) + Power(y0 - y1, 2)) - 
                        2*t*y0*(y0 - y1))*(y0 - y1))/
                Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                  Power(y0 - y1, 2), 
                2) - ((y0 - y1)*(x1*y0 - 
                      x0*y1)*((2*(y0 - (Sqrt(Power(x0, 2) + 
                                        Power(y0, 2))*(y0 - y1))/
                                      Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2))))/
                          Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0 - y1, 
                                2)) + (2*(y0 - y1)*(-Power(x0, 2) + x0*x1 - 
                                  Power(y0, 2) + 
                                  Sqrt(Power(x0, 2) + Power(y0, 2))*
                                    Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                  y0*y1))/
                          Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0 - y1, 2), 1.5)))/(2.*(Power(x0, 2) - 
                      2*x0*x1 + Power(x1, 2) + 
                      Power(y0 - y1, 2))*(-Power(x0, 2) + x0*x1 - 
                      Power(y0, 2) + 
                      Sqrt(Power(x0, 2) + Power(y0, 2))*
                        Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0 - y1, 2)) + y0*y1)) + ((y0 - 
                      y1)*(x1*y0 - 
                      x0*y1)*((2*(y0 - 
                                  2*t*y0 + ((2*t*y0 - 
                                        2*Power(t, 2)*(y0 - y1))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + 
                                        Power(y0 - y1, 2)))/(2.*
                                        Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 
                                        2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - 
                                        y1))) - (Sqrt(Power(-1 + t, 2)*
                                        Power(x0, 2) - 2*(-1 + t)*t*x0*x1 + 
                                        Power(y0, 2) + 
                                        Power(t, 2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1))*(y0 - y1))/
                                      Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                  2*t*y1))/
                          Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0 - y1, 
                                2)) + (2*(y0 - y1)*(-Power(x0, 2) + 
                                  t*Power(x0, 2) + x0*x1 - 2*t*x0*x1 + 
                                  t*Power(x1, 2) - Power(y0, 2) + 
                                  t*Power(y0, 2) + 
                                  Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 
                                        2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1))*
                                    Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                  y0*y1 - 2*t*y0*y1 + t*Power(y1, 2)))/
                          Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0 - y1, 2), 1.5)))/(2.*(Power(x0, 2) - 
                      2*x0*x1 + Power(x1, 2) + 
                      Power(y0 - y1, 2))*(-Power(x0, 2) + t*Power(x0, 2) + 
                      x0*x1 - 2*t*x0*x1 + t*Power(x1, 2) - Power(y0, 2) + 
                      t*Power(y0, 2) + 
                      Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                            2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                            Power(t, 2)*(Power(x1, 2) + Power(y0 - y1, 2)) - 
                            2*t*y0*(y0 - y1))*
                        Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0 - y1, 2)) + y0*y1 - 2*t*y0*y1 + 
                      t*Power(y1, 2))) + (x0*(y0 - y1)*
                    Log((2*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + 
                                  Sqrt(Power(x0, 2) + Power(y0, 2))*
                                    Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                  y0*y1))/
                          Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0 - y1, 2))))/
                Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                  Power(y0 - y1, 2), 
                1.5) + ((x1*y0 - x0*y1)*
                    Log((2*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + 
                                  Sqrt(Power(x0, 2) + Power(y0, 2))*
                                    Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                  y0*y1))/
                          Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0 - y1, 2))))/
                Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                  Power(y0 - y1, 2), 
                1.5) - (3*Power(y0 - y1, 2)*(x1*y0 - x0*y1)*
                    Log((2*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + 
                                  Sqrt(Power(x0, 2) + Power(y0, 2))*
                                    Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                  y0*y1))/
                          Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0 - y1, 2))))/
                Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                  Power(y0 - y1, 2), 
                2.5) - (x0*(y0 - y1)*
                    Log((2*(-Power(x0, 2) + t*Power(x0, 2) + x0*x1 - 
                                  2*t*x0*x1 + t*Power(x1, 2) - Power(y0, 2) + 
                                  t*Power(y0, 2) + 
                                  Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 
                                        2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1))*
                                    Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                  y0*y1 - 2*t*y0*y1 + t*Power(y1, 2)))/
                          Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0 - y1, 2))))/
                Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                  Power(y0 - y1, 2), 
                1.5) - ((x1*y0 - x0*y1)*
                    Log((2*(-Power(x0, 2) + t*Power(x0, 2) + x0*x1 - 
                                  2*t*x0*x1 + t*Power(x1, 2) - Power(y0, 2) + 
                                  t*Power(y0, 2) + 
                                  Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 
                                        2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1))*
                                    Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                  y0*y1 - 2*t*y0*y1 + t*Power(y1, 2)))/
                          Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0 - y1, 2))))/
                Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                  Power(y0 - y1, 2), 
                1.5) + (3*Power(y0 - y1, 2)*(x1*y0 - x0*y1)*
                    Log((2*(-Power(x0, 2) + t*Power(x0, 2) + x0*x1 - 
                                  2*t*x0*x1 + t*Power(x1, 2) - Power(y0, 2) + 
                                  t*Power(y0, 2) + 
                                  Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 
                                        2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1))*
                                    Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                  y0*y1 - 2*t*y0*y1 + t*Power(y1, 2)))/
                          Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0 - y1, 2))))/
                Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                  Power(y0 - y1, 2), 
                2.5), -(Sqrt(Power(x0, 2) + Power(y0, 2))/(Power(x0, 2) - 
                        2*x0*x1 + Power(x1, 2) + Power(y0 - y1, 2))) + 
            Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 2*(-1 + t)*t*x0*x1 + 
                    Power(y0, 2) + 
                    Power(t, 2)*(Power(x1, 2) + Power(y0 - y1, 2)) - 
                    2*t*y0*(y0 - y1))/(Power(x0, 2) - 2*x0*x1 + 
                    Power(x1, 2) + 
                    Power(y0 - y1, 2)) + ((2*t*y0 - 
                      2*Power(t, 2)*(y0 - y1))*(-y0 + y1))/(2.*
                  Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 2*(-1 + t)*t*x0*x1 + 
                      Power(y0, 2) + 
                      Power(t, 2)*(Power(x1, 2) + Power(y0 - y1, 2)) - 
                      2*t*y0*(y0 - y1))*(Power(x0, 2) - 2*x0*x1 + 
                      Power(x1, 2) + Power(y0 - y1, 2))) - (2*
                    Sqrt(Power(x0, 2) + Power(y0, 2))*(y0 - y1)*(-y0 + y1))/
                Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                  Power(y0 - y1, 2), 
                2) + (2*
                    Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 2*(-1 + t)*t*x0*x1 + 
                        Power(y0, 2) + 
                        Power(t, 2)*(Power(x1, 2) + Power(y0 - y1, 2)) - 
                        2*t*y0*(y0 - y1))*(y0 - y1)*(-y0 + y1))/
                Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                  Power(y0 - y1, 2), 
                2) - ((x0 - x1)*(-(x1*y0) + 
                      x0*y1)*((2*(y0 - (Sqrt(Power(x0, 2) + 
                                        Power(y0, 2))*(y0 - y1))/
                                      Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2))))/
                          Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0 - y1, 
                                2)) + (2*(y0 - y1)*(-Power(x0, 2) + x0*x1 - 
                                  Power(y0, 2) + 
                                  Sqrt(Power(x0, 2) + Power(y0, 2))*
                                    Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                  y0*y1))/
                          Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0 - y1, 2), 1.5)))/(2.*(Power(x0, 2) - 
                      2*x0*x1 + Power(x1, 2) + 
                      Power(y0 - y1, 2))*(-Power(x0, 2) + x0*x1 - 
                      Power(y0, 2) + 
                      Sqrt(Power(x0, 2) + Power(y0, 2))*
                        Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0 - y1, 2)) + y0*y1)) + ((x0 - 
                      x1)*(-(x1*y0) + 
                      x0*y1)*((2*(y0 - 
                                  2*t*y0 + ((2*t*y0 - 
                                        2*Power(t, 2)*(y0 - y1))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + 
                                        Power(y0 - y1, 2)))/(2.*
                                        Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 
                                        2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - 
                                        y1))) - (Sqrt(Power(-1 + t, 2)*
                                        Power(x0, 2) - 2*(-1 + t)*t*x0*x1 + 
                                        Power(y0, 2) + 
                                        Power(t, 2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1))*(y0 - y1))/
                                      Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                  2*t*y1))/
                          Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0 - y1, 
                                2)) + (2*(y0 - y1)*(-Power(x0, 2) + 
                                  t*Power(x0, 2) + x0*x1 - 2*t*x0*x1 + 
                                  t*Power(x1, 2) - Power(y0, 2) + 
                                  t*Power(y0, 2) + 
                                  Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 
                                        2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1))*
                                    Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                  y0*y1 - 2*t*y0*y1 + t*Power(y1, 2)))/
                          Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0 - y1, 2), 1.5)))/(2.*(Power(x0, 2) - 
                      2*x0*x1 + Power(x1, 2) + 
                      Power(y0 - y1, 2))*(-Power(x0, 2) + t*Power(x0, 2) + 
                      x0*x1 - 2*t*x0*x1 + t*Power(x1, 2) - Power(y0, 2) + 
                      t*Power(y0, 2) + 
                      Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                            2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                            Power(t, 2)*(Power(x1, 2) + Power(y0 - y1, 2)) - 
                            2*t*y0*(y0 - y1))*
                        Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0 - y1, 2)) + y0*y1 - 2*t*y0*y1 + 
                      t*Power(y1, 2))) - (x0*(x0 - x1)*
                    Log((2*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + 
                                  Sqrt(Power(x0, 2) + Power(y0, 2))*
                                    Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                  y0*y1))/
                          Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0 - y1, 2))))/
                Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                  Power(y0 - y1, 2), 
                1.5) - (3*(x0 - x1)*(y0 - y1)*(-(x1*y0) + x0*y1)*
                    Log((2*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + 
                                  Sqrt(Power(x0, 2) + Power(y0, 2))*
                                    Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                  y0*y1))/
                          Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0 - y1, 2))))/
                Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                  Power(y0 - y1, 2), 
                2.5) + (x0*(x0 - x1)*
                    Log((2*(-Power(x0, 2) + t*Power(x0, 2) + x0*x1 - 
                                  2*t*x0*x1 + t*Power(x1, 2) - Power(y0, 2) + 
                                  t*Power(y0, 2) + 
                                  Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 
                                        2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1))*
                                    Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                  y0*y1 - 2*t*y0*y1 + t*Power(y1, 2)))/
                          Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0 - y1, 2))))/
                Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                  Power(y0 - y1, 2), 
                1.5) + (3*(x0 - x1)*(y0 - y1)*(-(x1*y0) + x0*y1)*
                    Log((2*(-Power(x0, 2) + t*Power(x0, 2) + x0*x1 - 
                                  2*t*x0*x1 + t*Power(x1, 2) - Power(y0, 2) + 
                                  t*Power(y0, 2) + 
                                  Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 
                                        2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1))*
                                    Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                  y0*y1 - 2*t*y0*y1 + t*Power(y1, 2)))/
                          Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0 - y1, 2))))/
                Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                  Power(y0 - y1, 2), 
                2.5), (2*t*(x0 - x1)*
                    Sqrt(Power(x0, 2) + Power(y0, 2))*(y0 - y1))/
                Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                  Power(y0 - y1, 2), 
                2) - (Sqrt(Power(x0, 2) + Power(y0, 2))*(y0 - y1)*(-2*y0 + 
                      2*y1)*(x1*y0 - x0*y1))/(2.*
                  Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0 - y1, 2), 1.5)*
                  Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0, 2) - 2*y0*y1 + Power(y1, 2), 1.5)) - (x0*
                  Sqrt(Power(x0, 2) + Power(y0, 2))*(y0 - 
                      y1))/(Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0 - y1, 2), 1.5)*
                  Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + Power(y0, 2) - 
                      2*y0*y1 + Power(y1, 2))) - (Sqrt(Power(x0, 2) + 
                      Power(y0, 2))*(x1*y0 - x0*y1))/(Power(Power(x0, 2) - 
                      2*x0*x1 + Power(x1, 2) + Power(y0 - y1, 2), 1.5)*
                  Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + Power(y0, 2) - 
                      2*y0*y1 + Power(y1, 2))) + (3*
                  Sqrt(Power(x0, 2) + Power(y0, 2))*
                  Power(y0 - y1, 
                    2)*(x1*y0 - x0*y1))/(Power(Power(x0, 2) - 2*x0*x1 + 
                      Power(x1, 2) + Power(y0 - y1, 2), 2.5)*
                  Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + Power(y0, 2) - 
                      2*y0*y1 + Power(y1, 2))) - ((y0 - y1)*(2*t*y0 - 
                      2*Power(t, 2)*y0 + 2*Power(t, 2)*y1)*(x1*y0 - 
                      x0*y1))/(2.*
                  Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0 - y1, 2), 1.5)*
                  Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + Power(y0, 2) - 
                      2*y0*y1 + Power(y1, 2))*
                  Sqrt(Power(x0, 2) - 2*t*Power(x0, 2) + 
                      Power(t, 2)*Power(x0, 2) + 2*t*x0*x1 - 
                      2*Power(t, 2)*x0*x1 + Power(t, 2)*Power(x1, 2) + 
                      Power(y0, 2) - 2*t*Power(y0, 2) + 
                      Power(t, 2)*Power(y0, 2) + 2*t*y0*y1 - 
                      2*Power(t, 2)*y0*y1 + 
                      Power(t, 2)*Power(y1, 2))) + ((y0 - y1)*(-2*y0 + 
                      2*y1)*(x1*y0 - x0*y1)*
                  Sqrt(Power(x0, 2) - 2*t*Power(x0, 2) + 
                      Power(t, 2)*Power(x0, 2) + 2*t*x0*x1 - 
                      2*Power(t, 2)*x0*x1 + Power(t, 2)*Power(x1, 2) + 
                      Power(y0, 2) - 2*t*Power(y0, 2) + 
                      Power(t, 2)*Power(y0, 2) + 2*t*y0*y1 - 
                      2*Power(t, 2)*y0*y1 + Power(t, 2)*Power(y1, 2)))/(2.*
                  Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0 - y1, 2), 1.5)*
                  Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0, 2) - 2*y0*y1 + Power(y1, 2), 
                    1.5)) + (x0*(y0 - y1)*
                  Sqrt(Power(x0, 2) - 2*t*Power(x0, 2) + 
                      Power(t, 2)*Power(x0, 2) + 2*t*x0*x1 - 
                      2*Power(t, 2)*x0*x1 + Power(t, 2)*Power(x1, 2) + 
                      Power(y0, 2) - 2*t*Power(y0, 2) + 
                      Power(t, 2)*Power(y0, 2) + 2*t*y0*y1 - 
                      2*Power(t, 2)*y0*y1 + 
                      Power(t, 2)*Power(y1, 2)))/(Power(Power(x0, 2) - 
                      2*x0*x1 + Power(x1, 2) + Power(y0 - y1, 2), 1.5)*
                  Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + Power(y0, 2) - 
                      2*y0*y1 + Power(y1, 2))) + ((x1*y0 - x0*y1)*
                  Sqrt(Power(x0, 2) - 2*t*Power(x0, 2) + 
                      Power(t, 2)*Power(x0, 2) + 2*t*x0*x1 - 
                      2*Power(t, 2)*x0*x1 + Power(t, 2)*Power(x1, 2) + 
                      Power(y0, 2) - 2*t*Power(y0, 2) + 
                      Power(t, 2)*Power(y0, 2) + 2*t*y0*y1 - 
                      2*Power(t, 2)*y0*y1 + 
                      Power(t, 2)*Power(y1, 2)))/(Power(Power(x0, 2) - 
                      2*x0*x1 + Power(x1, 2) + Power(y0 - y1, 2), 1.5)*
                  Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + Power(y0, 2) - 
                      2*y0*y1 + Power(y1, 2))) - (3*
                  Power(y0 - y1, 2)*(x1*y0 - x0*y1)*
                  Sqrt(Power(x0, 2) - 2*t*Power(x0, 2) + 
                      Power(t, 2)*Power(x0, 2) + 2*t*x0*x1 - 
                      2*Power(t, 2)*x0*x1 + Power(t, 2)*Power(x1, 2) + 
                      Power(y0, 2) - 2*t*Power(y0, 2) + 
                      Power(t, 2)*Power(y0, 2) + 2*t*y0*y1 - 
                      2*Power(t, 2)*y0*y1 + 
                      Power(t, 2)*Power(y1, 2)))/(Power(Power(x0, 2) - 
                      2*x0*x1 + Power(x1, 2) + Power(y0 - y1, 2), 2.5)*
                  Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + Power(y0, 2) - 
                      2*y0*y1 + Power(y1, 2))) + (t*(y0 - y1)*(-(x1*y0) + 
                      x0*y1)*((2*(y0 - (Sqrt(Power(x0, 2) + 
                                        Power(y0, 2))*(y0 - y1))/
                                      Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2))))/
                          Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0 - y1, 
                                2)) + (2*(y0 - y1)*(-Power(x0, 2) + x0*x1 - 
                                  Power(y0, 2) + 
                                  Sqrt(Power(x0, 2) + Power(y0, 2))*
                                    Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                  y0*y1))/
                          Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0 - y1, 2), 1.5)))/(2.*(Power(x0, 2) - 
                      2*x0*x1 + Power(x1, 2) + 
                      Power(y0 - y1, 2))*(-Power(x0, 2) + x0*x1 - 
                      Power(y0, 2) + 
                      Sqrt(Power(x0, 2) + Power(y0, 2))*
                        Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0 - y1, 2)) + y0*y1)) - ((-x0 + x1)*
                  Sqrt(Power(x0, 2) + 
                      Power(y0, 
                          2))*(((-2*y0 + 2*y1)*(x0*x1 - Power(x1, 2) + 
                                y0*y1 - Power(y1, 2)))/(2.*
                            Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                Power(y0, 2) - 2*y0*y1 + Power(y1, 2), 
                              2)) - (y0 - 
                            2*y1)/(2.*(Power(x0, 2) - 2*x0*x1 + 
                                Power(x1, 2) + Power(y0, 2) - 2*y0*y1 + 
                                Power(y1, 2)))))/(Power(x0, 2) - 2*x0*x1 + 
                  Power(x1, 2) + Power(y0, 2) - 2*y0*y1 + 
                  Power(y1, 2)) + ((-x0 + x1)*
                  Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 2*(-1 + t)*x0*x1 - 
                      2*Power(-1 + t, 2)*x0*x1 + Power(x1, 2) + 
                      2*(-1 + t)*Power(x1, 2) + 
                      Power(-1 + t, 2)*Power(x1, 2) + 
                      Power(-1 + t, 2)*Power(y0, 2) - 2*(-1 + t)*y0*y1 - 
                      2*Power(-1 + t, 2)*y0*y1 + Power(y1, 2) + 
                      2*(-1 + t)*Power(y1, 2) + 
                      Power(-1 + t, 2)*
                        Power(y1, 
                          2))*(((-2*y0 + 2*y1)*(x0*x1 - Power(x1, 2) + 
                                y0*y1 - Power(y1, 2)))/(2.*
                            Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                Power(y0, 2) - 2*y0*y1 + Power(y1, 2), 
                              2)) - (y0 - 
                            2*y1)/(2.*(Power(x0, 2) - 2*x0*x1 + 
                                Power(x1, 2) + Power(y0, 2) - 2*y0*y1 + 
                                Power(y1, 2)))))/(Power(x0, 2) - 2*x0*x1 + 
                  Power(x1, 2) + Power(y0, 2) - 2*y0*y1 + 
                  Power(y1, 2)) + ((-x0 + x1)*
                    Sqrt(Power(x0, 2) + Power(y0, 2))*(-2*y0 + 
                        2*y1)*(-0.5 - (x0*x1 - Power(x1, 2) + y0*y1 - 
                              Power(y1, 2))/(2.*(Power(x0, 2) - 2*x0*x1 + 
                                  Power(x1, 2) + Power(y0, 2) - 2*y0*y1 + 
                                  Power(y1, 2)))))/
                Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + Power(y0, 2) - 
                  2*y0*y1 + Power(y1, 2), 
                2) + ((-x0 + x1)*(-2*(-1 + t)*y0 - 2*Power(-1 + t, 2)*y0 + 
                      2*y1 + 4*(-1 + t)*y1 + 
                      2*Power(-1 + t, 2)*y1)*((-1 + t)/
                        2. - (x0*x1 - Power(x1, 2) + y0*y1 - 
                            Power(y1, 2))/(2.*(Power(x0, 2) - 2*x0*x1 + 
                                Power(x1, 2) + Power(y0, 2) - 2*y0*y1 + 
                                Power(y1, 2)))))/(2.*(Power(x0, 2) - 
                      2*x0*x1 + Power(x1, 2) + Power(y0, 2) - 2*y0*y1 + 
                      Power(y1, 2))*
                  Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 2*(-1 + t)*x0*x1 - 
                      2*Power(-1 + t, 2)*x0*x1 + Power(x1, 2) + 
                      2*(-1 + t)*Power(x1, 2) + 
                      Power(-1 + t, 2)*Power(x1, 2) + 
                      Power(-1 + t, 2)*Power(y0, 2) - 2*(-1 + t)*y0*y1 - 
                      2*Power(-1 + t, 2)*y0*y1 + Power(y1, 2) + 
                      2*(-1 + t)*Power(y1, 2) + 
                      Power(-1 + t, 2)*Power(y1, 2))) - ((-x0 + x1)*(-2*y0 + 
                        2*y1)*Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                        2*(-1 + t)*x0*x1 - 2*Power(-1 + t, 2)*x0*x1 + 
                        Power(x1, 2) + 2*(-1 + t)*Power(x1, 2) + 
                        Power(-1 + t, 2)*Power(x1, 2) + 
                        Power(-1 + t, 2)*Power(y0, 2) - 2*(-1 + t)*y0*y1 - 
                        2*Power(-1 + t, 2)*y0*y1 + Power(y1, 2) + 
                        2*(-1 + t)*Power(y1, 2) + 
                        Power(-1 + t, 2)*Power(y1, 2))*((-1 + t)/
                          2. - (x0*x1 - Power(x1, 2) + y0*y1 - 
                              Power(y1, 2))/(2.*(Power(x0, 2) - 2*x0*x1 + 
                                  Power(x1, 2) + Power(y0, 2) - 2*y0*y1 + 
                                  Power(y1, 2)))))/
                Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + Power(y0, 2) - 
                  2*y0*y1 + Power(y1, 2), 
                2) - ((-x0 + x1)*
                  Power(-(x1*y0) + x0*y1, 
                    2)*(-(((-2*y0 + 2*y1)*(-Power(x0, 2) + x0*x1 - 
                                      Power(y0, 2) + y0*y1))/
                              Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                Power(y0, 2) - 2*y0*y1 + Power(y1, 2), 
                              1.5)) + (2*y0)/
                          Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0, 2) - 2*y0*y1 + Power(y1, 2))))/(2.*
                  Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0, 2) - 2*y0*y1 + Power(y1, 2), 
                    2.5)*(2*
                        Sqrt(Power(x0, 2) + 
                            Power(y0, 
                                2)) + (2*(-Power(x0, 2) + x0*x1 - 
                                  Power(y0, 2) + y0*y1))/
                          Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0, 2) - 2*y0*y1 + 
                            Power(y1, 2)))) + ((-x0 + x1)*
                  Power(-(x1*y0) + x0*y1, 
                    2)*((2*(-y0 - 2*(-1 + t)*y0 + 2*y1 + 2*(-1 + t)*y1))/
                          Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0, 2) - 2*y0*y1 + 
                            Power(y1, 
                                2)) - ((-2*y0 + 
                                  2*y1)*((-1 + t)*Power(x0, 2) - x0*x1 - 
                                  2*(-1 + t)*x0*x1 + 
                                  Power(x1, 2) + (-1 + t)*
                                    Power(x1, 2) + (-1 + t)*Power(y0, 2) - 
                                  y0*y1 - 2*(-1 + t)*y0*y1 + 
                                  Power(y1, 2) + (-1 + t)*Power(y1, 2)))/
                          Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0, 2) - 2*y0*y1 + Power(y1, 2), 
                          1.5) + (-2*(-1 + t)*y0 - 2*Power(-1 + t, 2)*y0 + 
                              2*y1 + 4*(-1 + t)*y1 + 2*Power(-1 + t, 2)*y1)/
                          Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                            2*(-1 + t)*x0*x1 - 2*Power(-1 + t, 2)*x0*x1 + 
                            Power(x1, 2) + 2*(-1 + t)*Power(x1, 2) + 
                            Power(-1 + t, 2)*Power(x1, 2) + 
                            Power(-1 + t, 2)*Power(y0, 2) - 
                            2*(-1 + t)*y0*y1 - 2*Power(-1 + t, 2)*y0*y1 + 
                            Power(y1, 2) + 2*(-1 + t)*Power(y1, 2) + 
                            Power(-1 + t, 2)*Power(y1, 2))))/(2.*
                  Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0, 2) - 2*y0*y1 + Power(y1, 2), 
                    2.5)*((2*((-1 + t)*Power(x0, 2) - x0*x1 - 
                                  2*(-1 + t)*x0*x1 + 
                                  Power(x1, 2) + (-1 + t)*
                                    Power(x1, 2) + (-1 + t)*Power(y0, 2) - 
                                  y0*y1 - 2*(-1 + t)*y0*y1 + 
                                  Power(y1, 2) + (-1 + t)*Power(y1, 2)))/
                          Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0, 2) - 2*y0*y1 + Power(y1, 2)) + 
                      2*Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                            2*(-1 + t)*x0*x1 - 2*Power(-1 + t, 2)*x0*x1 + 
                            Power(x1, 2) + 2*(-1 + t)*Power(x1, 2) + 
                            Power(-1 + t, 2)*Power(x1, 2) + 
                            Power(-1 + t, 2)*Power(y0, 2) - 
                            2*(-1 + t)*y0*y1 - 2*Power(-1 + t, 2)*y0*y1 + 
                            Power(y1, 2) + 2*(-1 + t)*Power(y1, 2) + 
                            Power(-1 + t, 2)*Power(y1, 2)))) - ((y0 - 
                      y1)*(x1*y0 - x0*y1)*(-Power(x0, 2) + x0*x1 - 
                      Power(y0, 2) + 
                      y0*y1)*((2*(y0 + (Sqrt(Power(x0, 2) + 
                                        Power(y0, 2))*(-2*y0 + 2*y1))/(2.*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0, 2) - 
                                        2*y0*y1 + Power(y1, 2)))))/
                          Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0, 2) - 2*y0*y1 + 
                            Power(y1, 
                                2)) - ((-2*y0 + 2*y1)*(-Power(x0, 2) + 
                                  x0*x1 - Power(y0, 2) + y0*y1 + 
                                  Sqrt(Power(x0, 2) + Power(y0, 2))*
                                    Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0, 2) - 
                                        2*y0*y1 + Power(y1, 2))))/
                          Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0, 2) - 2*y0*y1 + Power(y1, 2), 1.5)))/(2.*
                  Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0 - y1, 2), 1.5)*
                  Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + Power(y0, 2) - 
                      2*y0*y1 + Power(y1, 2))*(-Power(x0, 2) + x0*x1 - 
                      Power(y0, 2) + y0*y1 + 
                      Sqrt(Power(x0, 2) + Power(y0, 2))*
                        Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0, 2) - 2*y0*y1 + Power(y1, 2)))) + ((y0 - 
                      y1)*(x1*y0 - x0*y1)*(-Power(x0, 2) + x0*x1 - 
                      Power(y0, 2) + 
                      y0*y1)*((2*(y0 - 2*t*y0 + 
                                  2*t*y1 + ((2*t*y0 - 2*Power(t, 2)*y0 + 
                                        2*Power(t, 2)*y1)*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0, 2) - 
                                        2*y0*y1 + Power(y1, 2)))/(2.*
                                        Sqrt(Power(x0, 2) - 
                                        2*t*Power(x0, 2) + 
                                        Power(t, 2)*Power(x0, 2) + 
                                        2*t*x0*x1 - 2*Power(t, 2)*x0*x1 + 
                                        Power(t, 2)*Power(x1, 2) + 
                                        Power(y0, 2) - 2*t*Power(y0, 2) + 
                                        Power(t, 2)*Power(y0, 2) + 
                                        2*t*y0*y1 - 2*Power(t, 2)*y0*y1 + 
                                        Power(t, 2)*Power(y1, 2))) + ((-2*
                                        y0 + 2*y1)*
                                        Sqrt(Power(x0, 2) - 
                                        2*t*Power(x0, 2) + 
                                        Power(t, 2)*Power(x0, 2) + 
                                        2*t*x0*x1 - 2*Power(t, 2)*x0*x1 + 
                                        Power(t, 2)*Power(x1, 2) + 
                                        Power(y0, 2) - 2*t*Power(y0, 2) + 
                                        Power(t, 2)*Power(y0, 2) + 
                                        2*t*y0*y1 - 2*Power(t, 2)*y0*y1 + 
                                        Power(t, 2)*Power(y1, 2)))/(2.*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0, 2) - 
                                        2*y0*y1 + Power(y1, 2)))))/
                          Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0, 2) - 2*y0*y1 + 
                            Power(y1, 
                                2)) - ((-2*y0 + 2*y1)*(-Power(x0, 2) + 
                                  t*Power(x0, 2) + x0*x1 - 2*t*x0*x1 + 
                                  t*Power(x1, 2) - Power(y0, 2) + 
                                  t*Power(y0, 2) + y0*y1 - 2*t*y0*y1 + 
                                  t*Power(y1, 2) + 
                                  Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0, 2) - 
                                        2*y0*y1 + Power(y1, 2))*
                                    Sqrt(Power(x0, 2) - 2*t*Power(x0, 2) + 
                                        Power(t, 2)*Power(x0, 2) + 
                                        2*t*x0*x1 - 2*Power(t, 2)*x0*x1 + 
                                        Power(t, 2)*Power(x1, 2) + 
                                        Power(y0, 2) - 2*t*Power(y0, 2) + 
                                        Power(t, 2)*Power(y0, 2) + 
                                        2*t*y0*y1 - 2*Power(t, 2)*y0*y1 + 
                                        Power(t, 2)*Power(y1, 2))))/
                          Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0, 2) - 2*y0*y1 + Power(y1, 2), 1.5)))/(2.*
                  Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0 - y1, 2), 1.5)*
                  Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + Power(y0, 2) - 
                      2*y0*y1 + Power(y1, 2))*(-Power(x0, 2) + 
                      t*Power(x0, 2) + x0*x1 - 2*t*x0*x1 + t*Power(x1, 2) - 
                      Power(y0, 2) + t*Power(y0, 2) + y0*y1 - 2*t*y0*y1 + 
                      t*Power(y1, 2) + 
                      Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0, 2) - 2*y0*y1 + Power(y1, 2))*
                        Sqrt(Power(x0, 2) - 2*t*Power(x0, 2) + 
                            Power(t, 2)*Power(x0, 2) + 2*t*x0*x1 - 
                            2*Power(t, 2)*x0*x1 + Power(t, 2)*Power(x1, 2) + 
                            Power(y0, 2) - 2*t*Power(y0, 2) + 
                            Power(t, 2)*Power(y0, 2) + 2*t*y0*y1 - 
                            2*Power(t, 2)*y0*y1 + 
                            Power(t, 2)*Power(y1, 2)))) + (t*(y0 - 
                      y1)*(x1*y0 - x0*y1)*
                  Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + Power(y0, 2) - 
                      2*y0*y1 + 
                      Power(y1, 
                          2))*((2*(y0 - 2*t*y0 + 
                                  2*t*y1 + ((2*t*y0 - 2*Power(t, 2)*y0 + 
                                        2*Power(t, 2)*y1)*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0, 2) - 
                                        2*y0*y1 + Power(y1, 2)))/(2.*
                                        Sqrt(Power(x0, 2) - 
                                        2*t*Power(x0, 2) + 
                                        Power(t, 2)*Power(x0, 2) + 
                                        2*t*x0*x1 - 2*Power(t, 2)*x0*x1 + 
                                        Power(t, 2)*Power(x1, 2) + 
                                        Power(y0, 2) - 2*t*Power(y0, 2) + 
                                        Power(t, 2)*Power(y0, 2) + 
                                        2*t*y0*y1 - 2*Power(t, 2)*y0*y1 + 
                                        Power(t, 2)*Power(y1, 2))) + ((-2*
                                        y0 + 2*y1)*
                                        Sqrt(Power(x0, 2) - 
                                        2*t*Power(x0, 2) + 
                                        Power(t, 2)*Power(x0, 2) + 
                                        2*t*x0*x1 - 2*Power(t, 2)*x0*x1 + 
                                        Power(t, 2)*Power(x1, 2) + 
                                        Power(y0, 2) - 2*t*Power(y0, 2) + 
                                        Power(t, 2)*Power(y0, 2) + 
                                        2*t*y0*y1 - 2*Power(t, 2)*y0*y1 + 
                                        Power(t, 2)*Power(y1, 2)))/(2.*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0, 2) - 
                                        2*y0*y1 + Power(y1, 2)))))/
                          Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0, 2) - 2*y0*y1 + 
                            Power(y1, 
                                2)) - ((-2*y0 + 2*y1)*(-Power(x0, 2) + 
                                  t*Power(x0, 2) + x0*x1 - 2*t*x0*x1 + 
                                  t*Power(x1, 2) - Power(y0, 2) + 
                                  t*Power(y0, 2) + y0*y1 - 2*t*y0*y1 + 
                                  t*Power(y1, 2) + 
                                  Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0, 2) - 
                                        2*y0*y1 + Power(y1, 2))*
                                    Sqrt(Power(x0, 2) - 2*t*Power(x0, 2) + 
                                        Power(t, 2)*Power(x0, 2) + 
                                        2*t*x0*x1 - 2*Power(t, 2)*x0*x1 + 
                                        Power(t, 2)*Power(x1, 2) + 
                                        Power(y0, 2) - 2*t*Power(y0, 2) + 
                                        Power(t, 2)*Power(y0, 2) + 
                                        2*t*y0*y1 - 2*Power(t, 2)*y0*y1 + 
                                        Power(t, 2)*Power(y1, 2))))/
                          Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0, 2) - 2*y0*y1 + Power(y1, 2), 1.5)))/(2.*
                  Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0 - y1, 2), 
                    1.5)*(-Power(x0, 2) + t*Power(x0, 2) + x0*x1 - 
                      2*t*x0*x1 + t*Power(x1, 2) - Power(y0, 2) + 
                      t*Power(y0, 2) + y0*y1 - 2*t*y0*y1 + t*Power(y1, 2) + 
                      Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0, 2) - 2*y0*y1 + Power(y1, 2))*
                        Sqrt(Power(x0, 2) - 2*t*Power(x0, 2) + 
                            Power(t, 2)*Power(x0, 2) + 2*t*x0*x1 - 
                            2*Power(t, 2)*x0*x1 + Power(t, 2)*Power(x1, 2) + 
                            Power(y0, 2) - 2*t*Power(y0, 2) + 
                            Power(t, 2)*Power(y0, 2) + 2*t*y0*y1 - 
                            2*Power(t, 2)*y0*y1 + 
                            Power(t, 2)*Power(y1, 2)))) - ((y0 - y1)*(x1*y0 - 
                      x0*y1)*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + 
                      y0*y1)*((2*
                              y0 + (Sqrt(Power(x0, 2) + 
                                        Power(y0, 2))*(-2*y0 + 2*y1))/
                                Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0, 2) - 2*y0*y1 + 
                                  Power(y1, 2)))/(2*(-Power(x0, 2) + x0*x1 - 
                                  Power(y0, 2) + y0*y1) + 
                            2*Sqrt(Power(x0, 2) + Power(y0, 2))*
                              Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0, 2) - 2*y0*y1 + 
                                  Power(y1, 2))) - (Sqrt(Power(x0, 2) - 
                                2*x0*x1 + Power(x1, 2) + Power(y0, 2) - 
                                2*y0*y1 + 
                                Power(y1, 
                                    2))*((2*(y0 + (Sqrt(Power(x0, 2) + 
                                        Power(y0, 2))*(-2*y0 + 2*y1))/(2.*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0, 2) - 
                                        2*y0*y1 + Power(y1, 2)))))/
                                    Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                      Power(x1, 2) + Power(y0, 2) - 2*y0*y1 + 
                                      Power(y1, 
                                        2)) - ((-2*y0 + 
                                        2*y1)*(-Power(x0, 2) + x0*x1 - 
                                        Power(y0, 2) + y0*y1 + 
                                        Sqrt(Power(x0, 2) + Power(y0, 2))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0, 2) - 
                                        2*y0*y1 + Power(y1, 2))))/
                                    Power(Power(x0, 2) - 2*x0*x1 + 
                                      Power(x1, 2) + Power(y0, 2) - 2*y0*y1 + 
                                      Power(y1, 2), 1.5)))/(2.*(-Power(x0, 
                                    2) + x0*x1 - Power(y0, 2) + y0*y1 + 
                                Sqrt(Power(x0, 2) + Power(y0, 2))*
                                  Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                      Power(x1, 2) + Power(y0, 2) - 2*y0*y1 + 
                                      Power(y1, 2))))))/(Power(Power(x0, 2) - 
                      2*x0*x1 + Power(x1, 2) + Power(y0 - y1, 2), 
                    1.5)*(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0, 2) - 2*y0*y1 + Power(y1, 2))) + ((y0 - 
                      y1)*(x1*y0 - x0*y1)*(-Power(x0, 2) + x0*x1 - 
                      Power(y0, 2) + 
                      y0*y1)*((2*(y0 - 2*t*y0 + 
                                  2*t*y1) + ((2*t*y0 - 2*Power(t, 2)*y0 + 
                                        2*Power(t, 2)*y1)*
                                    Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0, 2) - 
                                        2*y0*y1 + Power(y1, 2)))/
                                Sqrt(Power(x0, 2) - 2*t*Power(x0, 2) + 
                                  Power(t, 2)*Power(x0, 2) + 2*t*x0*x1 - 
                                  2*Power(t, 2)*x0*x1 + 
                                  Power(t, 2)*Power(x1, 2) + Power(y0, 2) - 
                                  2*t*Power(y0, 2) + 
                                  Power(t, 2)*Power(y0, 2) + 2*t*y0*y1 - 
                                  2*Power(t, 2)*y0*y1 + 
                                  Power(t, 2)*Power(y1, 2)) + ((-2*y0 + 2*y1)*
                                    Sqrt(Power(x0, 2) - 2*t*Power(x0, 2) + 
                                        Power(t, 2)*Power(x0, 2) + 
                                        2*t*x0*x1 - 2*Power(t, 2)*x0*x1 + 
                                        Power(t, 2)*Power(x1, 2) + 
                                        Power(y0, 2) - 2*t*Power(y0, 2) + 
                                        Power(t, 2)*Power(y0, 2) + 
                                        2*t*y0*y1 - 2*Power(t, 2)*y0*y1 + 
                                        Power(t, 2)*Power(y1, 2)))/
                                Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0, 2) - 2*y0*y1 + 
                                  Power(y1, 2)))/(2*(-Power(x0, 2) + 
                                  t*Power(x0, 2) + x0*x1 - 2*t*x0*x1 + 
                                  t*Power(x1, 2) - Power(y0, 2) + 
                                  t*Power(y0, 2) + y0*y1 - 2*t*y0*y1 + 
                                  t*Power(y1, 2)) + 
                            2*Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0, 2) - 2*y0*y1 + Power(y1, 2))*
                              Sqrt(Power(x0, 2) - 2*t*Power(x0, 2) + 
                                  Power(t, 2)*Power(x0, 2) + 2*t*x0*x1 - 
                                  2*Power(t, 2)*x0*x1 + 
                                  Power(t, 2)*Power(x1, 2) + Power(y0, 2) - 
                                  2*t*Power(y0, 2) + 
                                  Power(t, 2)*Power(y0, 2) + 2*t*y0*y1 - 
                                  2*Power(t, 2)*y0*y1 + 
                                  Power(t, 2)*Power(y1, 2))) - (Sqrt(Power(x0,
                                     2) - 2*x0*x1 + Power(x1, 2) + 
                                Power(y0, 2) - 2*y0*y1 + 
                                Power(y1, 
                                    2))*((2*(y0 - 2*t*y0 + 
                                        2*t*y1 + ((2*t*y0 - 
                                        2*Power(t, 2)*y0 + 2*Power(t, 2)*y1)*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0, 2) - 
                                        2*y0*y1 + Power(y1, 2)))/(2.*
                                        Sqrt(Power(x0, 2) - 
                                        2*t*Power(x0, 2) + 
                                        Power(t, 2)*Power(x0, 2) + 
                                        2*t*x0*x1 - 2*Power(t, 2)*x0*x1 + 
                                        Power(t, 2)*Power(x1, 2) + 
                                        Power(y0, 2) - 2*t*Power(y0, 2) + 
                                        Power(t, 2)*Power(y0, 2) + 
                                        2*t*y0*y1 - 2*Power(t, 2)*y0*y1 + 
                                        Power(t, 2)*Power(y1, 2))) + ((-2*
                                        y0 + 2*y1)*
                                        Sqrt(Power(x0, 2) - 
                                        2*t*Power(x0, 2) + 
                                        Power(t, 2)*Power(x0, 2) + 
                                        2*t*x0*x1 - 2*Power(t, 2)*x0*x1 + 
                                        Power(t, 2)*Power(x1, 2) + 
                                        Power(y0, 2) - 2*t*Power(y0, 2) + 
                                        Power(t, 2)*Power(y0, 2) + 
                                        2*t*y0*y1 - 2*Power(t, 2)*y0*y1 + 
                                        Power(t, 2)*Power(y1, 2)))/(2.*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0, 2) - 
                                        2*y0*y1 + Power(y1, 2)))))/
                                    Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                      Power(x1, 2) + Power(y0, 2) - 2*y0*y1 + 
                                      Power(y1, 
                                        2)) - ((-2*y0 + 
                                        2*y1)*(-Power(x0, 2) + 
                                        t*Power(x0, 2) + x0*x1 - 2*t*x0*x1 + 
                                        t*Power(x1, 2) - Power(y0, 2) + 
                                        t*Power(y0, 2) + y0*y1 - 2*t*y0*y1 + 
                                        t*Power(y1, 2) + 
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0, 2) - 
                                        2*y0*y1 + Power(y1, 2))*
                                        Sqrt(Power(x0, 2) - 
                                        2*t*Power(x0, 2) + 
                                        Power(t, 2)*Power(x0, 2) + 
                                        2*t*x0*x1 - 2*Power(t, 2)*x0*x1 + 
                                        Power(t, 2)*Power(x1, 2) + 
                                        Power(y0, 2) - 2*t*Power(y0, 2) + 
                                        Power(t, 2)*Power(y0, 2) + 
                                        2*t*y0*y1 - 2*Power(t, 2)*y0*y1 + 
                                        Power(t, 2)*Power(y1, 2))))/
                                    Power(Power(x0, 2) - 2*x0*x1 + 
                                      Power(x1, 2) + Power(y0, 2) - 2*y0*y1 + 
                                      Power(y1, 2), 1.5)))/(2.*(-Power(x0, 
                                    2) + t*Power(x0, 2) + x0*x1 - 2*t*x0*x1 + 
                                t*Power(x1, 2) - Power(y0, 2) + 
                                t*Power(y0, 2) + y0*y1 - 2*t*y0*y1 + 
                                t*Power(y1, 2) + 
                                Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                      Power(y0, 2) - 2*y0*y1 + Power(y1, 2))*
                                  Sqrt(Power(x0, 2) - 2*t*Power(x0, 2) + 
                                      Power(t, 2)*Power(x0, 2) + 2*t*x0*x1 - 
                                      2*Power(t, 2)*x0*x1 + 
                                      Power(t, 2)*Power(x1, 2) + 
                                      Power(y0, 2) - 2*t*Power(y0, 2) + 
                                      Power(t, 2)*Power(y0, 2) + 2*t*y0*y1 - 
                                      2*Power(t, 2)*y0*y1 + 
                                      Power(t, 2)*
                                        Power(y1, 2))))))/(Power(Power(x0, 
                          2) - 2*x0*x1 + Power(x1, 2) + Power(y0 - y1, 2), 
                    1.5)*(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0, 2) - 2*y0*y1 + Power(y1, 2))) + (t*
                 
               x0*(y0 - y1)*
                    Log((2*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + 
                                  Sqrt(Power(x0, 2) + Power(y0, 2))*
                                    Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                  y0*y1))/
                          Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0 - y1, 2))))/
                Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                  Power(y0 - y1, 2), 
                1.5) - (t*(-(x1*y0) + x0*y1)*
                    Log((2*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + 
                                  Sqrt(Power(x0, 2) + Power(y0, 2))*
                                    Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                  y0*y1))/
                          Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0 - y1, 2))))/
                Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                  Power(y0 - y1, 2), 
                1.5) + (3*t*Power(y0 - y1, 2)*(-(x1*y0) + x0*y1)*
                    Log((2*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + 
                                  Sqrt(Power(x0, 2) + Power(y0, 2))*
                                    Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                  y0*y1))/
                          Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0 - y1, 2))))/
                Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                  Power(y0 - y1, 2), 
                2.5) + (5*(-x0 + x1)*(-2*y0 + 2*y1)*
                  Power(-(x1*y0) + x0*y1, 2)*
                  Log(2*Sqrt(Power(x0, 2) + 
                            Power(y0, 
                                2)) + (2*(-Power(x0, 2) + x0*x1 - 
                                  Power(y0, 2) + y0*y1))/
                          Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0, 2) - 2*y0*y1 + Power(y1, 2))))/(4.*
                  Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0, 2) - 2*y0*y1 + Power(y1, 2), 
                    3.5)) - (x0*(-x0 + x1)*(-(x1*y0) + x0*y1)*
                    Log(2*Sqrt(Power(x0, 2) + 
                              Power(y0, 
                                  2)) + (2*(-Power(x0, 2) + x0*x1 - 
                                    Power(y0, 2) + y0*y1))/
                            Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                              Power(y0, 2) - 2*y0*y1 + Power(y1, 2))))/
                Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + Power(y0, 2) - 
                  2*y0*y1 + Power(y1, 2), 
                2.5) + ((y0 - y1)*(-2*y0 + 2*y1)*(x1*y0 - 
                      x0*y1)*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + y0*y1)*
                  Log((2*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + y0*y1 + 
                                Sqrt(Power(x0, 2) + Power(y0, 2))*
                                  Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                      Power(x1, 2) + Power(y0, 2) - 2*y0*y1 + 
                                      Power(y1, 2))))/
                        Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                          Power(y0, 2) - 2*y0*y1 + 
                          Power(y1, 2))))/(Power(Power(x0, 2) - 2*x0*x1 + 
                      Power(x1, 2) + Power(y0 - y1, 2), 1.5)*
                  Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0, 2) - 2*y0*y1 + Power(y1, 2), 
                    2)) - (y0*(y0 - y1)*(x1*y0 - x0*y1)*
                  Log((2*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + y0*y1 + 
                                Sqrt(Power(x0, 2) + Power(y0, 2))*
                                  Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                      Power(x1, 2) + Power(y0, 2) - 2*y0*y1 + 
                                      Power(y1, 2))))/
                        Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                          Power(y0, 2) - 2*y0*y1 + 
                          Power(y1, 2))))/(Power(Power(x0, 2) - 2*x0*x1 + 
                      Power(x1, 2) + Power(y0 - y1, 2), 
                    1.5)*(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0, 2) - 2*y0*y1 + Power(y1, 2))) + (x0*(y0 - 
                      y1)*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + y0*y1)*
                  Log((2*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + y0*y1 + 
                                Sqrt(Power(x0, 2) + Power(y0, 2))*
                                  Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                      Power(x1, 2) + Power(y0, 2) - 2*y0*y1 + 
                                      Power(y1, 2))))/
                        Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                          Power(y0, 2) - 2*y0*y1 + 
                          Power(y1, 2))))/(Power(Power(x0, 2) - 2*x0*x1 + 
                      Power(x1, 2) + Power(y0 - y1, 2), 
                    1.5)*(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0, 2) - 2*y0*y1 + Power(y1, 2))) + ((x1*y0 - 
                      x0*y1)*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + y0*y1)*
                  Log((2*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + y0*y1 + 
                                Sqrt(Power(x0, 2) + Power(y0, 2))*
                                  Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                      Power(x1, 2) + Power(y0, 2) - 2*y0*y1 + 
                                      Power(y1, 2))))/
                        Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                          Power(y0, 2) - 2*y0*y1 + 
                          Power(y1, 2))))/(Power(Power(x0, 2) - 2*x0*x1 + 
                      Power(x1, 2) + Power(y0 - y1, 2), 
                    1.5)*(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0, 2) - 2*y0*y1 + Power(y1, 2))) - (3*
                  Power(y0 - y1, 
                    2)*(x1*y0 - x0*y1)*(-Power(x0, 2) + x0*x1 - 
                      Power(y0, 2) + y0*y1)*
                  Log((2*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + y0*y1 + 
                                Sqrt(Power(x0, 2) + Power(y0, 2))*
                                  Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                      Power(x1, 2) + Power(y0, 2) - 2*y0*y1 + 
                                      Power(y1, 2))))/
                        Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                          Power(y0, 2) - 2*y0*y1 + 
                          Power(y1, 2))))/(Power(Power(x0, 2) - 2*x0*x1 + 
                      Power(x1, 2) + Power(y0 - y1, 2), 
                    2.5)*(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0, 2) - 2*y0*y1 + Power(y1, 2))) + ((y0 - 
                      y1)*(-2*y0 + 2*y1)*(x1*y0 - x0*y1)*(-Power(x0, 2) + 
                      x0*x1 - Power(y0, 2) + 
                      y0*y1)*(-Log((2*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + 
                                      y0*y1 + 
                                      Sqrt(Power(x0, 2) + Power(y0, 2))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0, 2) - 
                                        2*y0*y1 + Power(y1, 2))))/
                              Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                Power(y0, 2) - 2*y0*y1 + Power(y1, 2))) + 
                      Log(2*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + y0*y1) + 
                            2*Sqrt(Power(x0, 2) + Power(y0, 2))*
                              Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0, 2) - 2*y0*y1 + 
                                  Power(y1, 2)))))/(Power(Power(x0, 2) - 
                      2*x0*x1 + Power(x1, 2) + Power(y0 - y1, 2), 1.5)*
                  Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0, 2) - 2*y0*y1 + Power(y1, 2), 
                    2)) - (y0*(y0 - y1)*(x1*y0 - 
                      x0*y1)*(-Log((2*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + 
                                      y0*y1 + 
                                      Sqrt(Power(x0, 2) + Power(y0, 2))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0, 2) - 
                                        2*y0*y1 + Power(y1, 2))))/
                              Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                Power(y0, 2) - 2*y0*y1 + Power(y1, 2))) + 
                      Log(2*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + y0*y1) + 
                            2*Sqrt(Power(x0, 2) + Power(y0, 2))*
                              Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0, 2) - 2*y0*y1 + 
                                  Power(y1, 2)))))/(Power(Power(x0, 2) - 
                      2*x0*x1 + Power(x1, 2) + Power(y0 - y1, 2), 
                    1.5)*(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0, 2) - 2*y0*y1 + Power(y1, 2))) + (x0*(y0 - 
                      y1)*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + 
                      y0*y1)*(-Log((2*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + 
                                      y0*y1 + 
                                      Sqrt(Power(x0, 2) + Power(y0, 2))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0, 2) - 
                                        2*y0*y1 + Power(y1, 2))))/
                              Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                Power(y0, 2) - 2*y0*y1 + Power(y1, 2))) + 
                      Log(2*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + y0*y1) + 
                            2*Sqrt(Power(x0, 2) + Power(y0, 2))*
                              Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0, 2) - 2*y0*y1 + 
                                  Power(y1, 2)))))/(Power(Power(x0, 2) - 
                      2*x0*x1 + Power(x1, 2) + Power(y0 - y1, 2), 
                    1.5)*(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0, 2) - 2*y0*y1 + Power(y1, 2))) + ((x1*y0 - 
                      x0*y1)*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + 
                      y0*y1)*(-Log((2*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + 
                                      y0*y1 + 
                                      Sqrt(Power(x0, 2) + Power(y0, 2))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0, 2) - 
                                        2*y0*y1 + Power(y1, 2))))/
                              Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                Power(y0, 2) - 2*y0*y1 + Power(y1, 2))) + 
                      Log(2*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + y0*y1) + 
                            2*Sqrt(Power(x0, 2) + Power(y0, 2))*
                              Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0, 2) - 2*y0*y1 + 
                                  Power(y1, 2)))))/(Power(Power(x0, 2) - 
                      2*x0*x1 + Power(x1, 2) + Power(y0 - y1, 2), 
                    1.5)*(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0, 2) - 2*y0*y1 + Power(y1, 2))) - (3*
                  Power(y0 - y1, 
                    2)*(x1*y0 - x0*y1)*(-Power(x0, 2) + x0*x1 - 
                      Power(y0, 2) + 
                      y0*y1)*(-Log((2*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + 
                                      y0*y1 + 
                                      Sqrt(Power(x0, 2) + Power(y0, 2))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0, 2) - 
                                        2*y0*y1 + Power(y1, 2))))/
                              Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                Power(y0, 2) - 2*y0*y1 + Power(y1, 2))) + 
                      Log(2*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + y0*y1) + 
                            2*Sqrt(Power(x0, 2) + Power(y0, 2))*
                              Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0, 2) - 2*y0*y1 + 
                                  Power(y1, 2)))))/(Power(Power(x0, 2) - 
                      2*x0*x1 + Power(x1, 2) + Power(y0 - y1, 2), 
                    2.5)*(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0, 2) - 2*y0*y1 + Power(y1, 2))) - (5*(-x0 + 
                      x1)*(-2*y0 + 2*y1)*Power(-(x1*y0) + x0*y1, 2)*
                  Log((2*((-1 + t)*Power(x0, 2) - x0*x1 - 2*(-1 + t)*x0*x1 + 
                                  Power(x1, 2) + (-1 + t)*
                                    Power(x1, 2) + (-1 + t)*Power(y0, 2) - 
                                  y0*y1 - 2*(-1 + t)*y0*y1 + 
                                  Power(y1, 2) + (-1 + t)*Power(y1, 2)))/
                          Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0, 2) - 2*y0*y1 + Power(y1, 2)) + 
                      2*Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                            2*(-1 + t)*x0*x1 - 2*Power(-1 + t, 2)*x0*x1 + 
                            Power(x1, 2) + 2*(-1 + t)*Power(x1, 2) + 
                            Power(-1 + t, 2)*Power(x1, 2) + 
                            Power(-1 + t, 2)*Power(y0, 2) - 
                            2*(-1 + t)*y0*y1 - 2*Power(-1 + t, 2)*y0*y1 + 
                            Power(y1, 2) + 2*(-1 + t)*Power(y1, 2) + 
                            Power(-1 + t, 2)*Power(y1, 2))))/(4.*
                  Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0, 2) - 2*y0*y1 + Power(y1, 2), 
                    3.5)) + (x0*(-x0 + x1)*(-(x1*y0) + x0*y1)*
                    Log((2*((-1 + t)*Power(x0, 2) - x0*x1 - 
                                    2*(-1 + t)*x0*x1 + 
                                    Power(x1, 2) + (-1 + t)*
                                      Power(x1, 2) + (-1 + t)*Power(y0, 2) - 
                                    y0*y1 - 2*(-1 + t)*y0*y1 + 
                                    Power(y1, 2) + (-1 + t)*Power(y1, 2)))/
                            Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                              Power(y0, 2) - 2*y0*y1 + Power(y1, 2)) + 
                        2*Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                              2*(-1 + t)*x0*x1 - 2*Power(-1 + t, 2)*x0*x1 + 
                              Power(x1, 2) + 2*(-1 + t)*Power(x1, 2) + 
                              Power(-1 + t, 2)*Power(x1, 2) + 
                              Power(-1 + t, 2)*Power(y0, 2) - 
                              2*(-1 + t)*y0*y1 - 2*Power(-1 + t, 2)*y0*y1 + 
                              Power(y1, 2) + 2*(-1 + t)*Power(y1, 2) + 
                              Power(-1 + t, 2)*Power(y1, 2))))/
                Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + Power(y0, 2) - 
                  2*y0*y1 + Power(y1, 2), 
                2.5) - (t*x0*(y0 - y1)*
                    Log((2*(-Power(x0, 2) + t*Power(x0, 2) + x0*x1 - 
                                  2*t*x0*x1 + t*Power(x1, 2) - Power(y0, 2) + 
                                  t*Power(y0, 2) + y0*y1 - 2*t*y0*y1 + 
                                  t*Power(y1, 2) + 
                                  Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0, 2) - 
                                        2*y0*y1 + Power(y1, 2))*
                                    Sqrt(Power(x0, 2) - 2*t*Power(x0, 2) + 
                                        Power(t, 2)*Power(x0, 2) + 
                                        2*t*x0*x1 - 2*Power(t, 2)*x0*x1 + 
                                        Power(t, 2)*Power(x1, 2) + 
                                        Power(y0, 2) - 2*t*Power(y0, 2) + 
                                        Power(t, 2)*Power(y0, 2) + 
                                        2*t*y0*y1 - 2*Power(t, 2)*y0*y1 + 
                                        Power(t, 2)*Power(y1, 2))))/
                          Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0, 2) - 2*y0*y1 + Power(y1, 2))))/
                Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                  Power(y0 - y1, 2), 
                1.5) - (t*(x1*y0 - x0*y1)*
                    Log((2*(-Power(x0, 2) + t*Power(x0, 2) + x0*x1 - 
                                  2*t*x0*x1 + t*Power(x1, 2) - Power(y0, 2) + 
                                  t*Power(y0, 2) + y0*y1 - 2*t*y0*y1 + 
                                  t*Power(y1, 2) + 
                                  Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0, 2) - 
                                        2*y0*y1 + Power(y1, 2))*
                                    Sqrt(Power(x0, 2) - 2*t*Power(x0, 2) + 
                                        Power(t, 2)*Power(x0, 2) + 
                                        2*t*x0*x1 - 2*Power(t, 2)*x0*x1 + 
                                        Power(t, 2)*Power(x1, 2) + 
                                        Power(y0, 2) - 2*t*Power(y0, 2) + 
                                        Power(t, 2)*Power(y0, 2) + 
                                        2*t*y0*y1 - 2*Power(t, 2)*y0*y1 + 
                                        Power(t, 2)*Power(y1, 2))))/
                          Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0, 2) - 2*y0*y1 + Power(y1, 2))))/
                Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                  Power(y0 - y1, 2), 
                1.5) + (3*t*Power(y0 - y1, 2)*(x1*y0 - x0*y1)*
                    Log((2*(-Power(x0, 2) + t*Power(x0, 2) + x0*x1 - 
                                  2*t*x0*x1 + t*Power(x1, 2) - Power(y0, 2) + 
                                  t*Power(y0, 2) + y0*y1 - 2*t*y0*y1 + 
                                  t*Power(y1, 2) + 
                                  Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0, 2) - 
                                        2*y0*y1 + Power(y1, 2))*
                                    Sqrt(Power(x0, 2) - 2*t*Power(x0, 2) + 
                                        Power(t, 2)*Power(x0, 2) + 
                                        2*t*x0*x1 - 2*Power(t, 2)*x0*x1 + 
                                        Power(t, 2)*Power(x1, 2) + 
                                        Power(y0, 2) - 2*t*Power(y0, 2) + 
                                        Power(t, 2)*Power(y0, 2) + 
                                        2*t*y0*y1 - 2*Power(t, 2)*y0*y1 + 
                                        Power(t, 2)*Power(y1, 2))))/
                          Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0, 2) - 2*y0*y1 + Power(y1, 2))))/
                Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                  Power(y0 - y1, 2), 
                2.5) - ((y0 - y1)*(-2*y0 + 2*y1)*(x1*y0 - 
                      x0*y1)*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + y0*y1)*
                  Log((2*(-Power(x0, 2) + t*Power(x0, 2) + x0*x1 - 
                                2*t*x0*x1 + t*Power(x1, 2) - Power(y0, 2) + 
                                t*Power(y0, 2) + y0*y1 - 2*t*y0*y1 + 
                                t*Power(y1, 2) + 
                                Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                      Power(y0, 2) - 2*y0*y1 + Power(y1, 2))*
                                  Sqrt(Power(x0, 2) - 2*t*Power(x0, 2) + 
                                      Power(t, 2)*Power(x0, 2) + 2*t*x0*x1 - 
                                      2*Power(t, 2)*x0*x1 + 
                                      Power(t, 2)*Power(x1, 2) + 
                                      Power(y0, 2) - 2*t*Power(y0, 2) + 
                                      Power(t, 2)*Power(y0, 2) + 2*t*y0*y1 - 
                                      2*Power(t, 2)*y0*y1 + 
                                      Power(t, 2)*Power(y1, 2))))/
                        Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                          Power(y0, 2) - 2*y0*y1 + 
                          Power(y1, 2))))/(Power(Power(x0, 2) - 2*x0*x1 + 
                      Power(x1, 2) + Power(y0 - y1, 2), 1.5)*
                  Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0, 2) - 2*y0*y1 + Power(y1, 2), 
                    2)) + (y0*(y0 - y1)*(x1*y0 - x0*y1)*
                  Log((2*(-Power(x0, 2) + t*Power(x0, 2) + x0*x1 - 
                                2*t*x0*x1 + t*Power(x1, 2) - Power(y0, 2) + 
                                t*Power(y0, 2) + y0*y1 - 2*t*y0*y1 + 
                                t*Power(y1, 2) + 
                                Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                      Power(y0, 2) - 2*y0*y1 + Power(y1, 2))*
                                  Sqrt(Power(x0, 2) - 2*t*Power(x0, 2) + 
                                      Power(t, 2)*Power(x0, 2) + 2*t*x0*x1 - 
                                      2*Power(t, 2)*x0*x1 + 
                                      Power(t, 2)*Power(x1, 2) + 
                                      Power(y0, 2) - 2*t*Power(y0, 2) + 
                                      Power(t, 2)*Power(y0, 2) + 2*t*y0*y1 - 
                                      2*Power(t, 2)*y0*y1 + 
                                      Power(t, 2)*Power(y1, 2))))/
                        Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                          Power(y0, 2) - 2*y0*y1 + 
                          Power(y1, 2))))/(Power(Power(x0, 2) - 2*x0*x1 + 
                      Power(x1, 2) + Power(y0 - y1, 2), 
                    1.5)*(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0, 2) - 2*y0*y1 + Power(y1, 2))) - (x0*(y0 - 
                      y1)*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + y0*y1)*
                  Log((2*(-Power(x0, 2) + t*Power(x0, 2) + x0*x1 - 
                                2*t*x0*x1 + t*Power(x1, 2) - Power(y0, 2) + 
                                t*Power(y0, 2) + y0*y1 - 2*t*y0*y1 + 
                                t*Power(y1, 2) + 
                                Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                      Power(y0, 2) - 2*y0*y1 + Power(y1, 2))*
                                  Sqrt(Power(x0, 2) - 2*t*Power(x0, 2) + 
                                      Power(t, 2)*Power(x0, 2) + 2*t*x0*x1 - 
                                      2*Power(t, 2)*x0*x1 + 
                                      Power(t, 2)*Power(x1, 2) + 
                                      Power(y0, 2) - 2*t*Power(y0, 2) + 
                                      Power(t, 2)*Power(y0, 2) + 2*t*y0*y1 - 
                                      2*Power(t, 2)*y0*y1 + 
                                      Power(t, 2)*Power(y1, 2))))/
                        Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                          Power(y0, 2) - 2*y0*y1 + 
                          Power(y1, 2))))/(Power(Power(x0, 2) - 2*x0*x1 + 
                      Power(x1, 2) + Power(y0 - y1, 2), 
                    1.5)*(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0, 2) - 2*y0*y1 + Power(y1, 2))) - ((x1*y0 - 
                      x0*y1)*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + y0*y1)*
                  Log((2*(-Power(x0, 2) + t*Power(x0, 2) + x0*x1 - 
                                2*t*x0*x1 + t*Power(x1, 2) - Power(y0, 2) + 
                                t*Power(y0, 2) + y0*y1 - 2*t*y0*y1 + 
                                t*Power(y1, 2) + 
                                Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                      Power(y0, 2) - 2*y0*y1 + Power(y1, 2))*
                                  Sqrt(Power(x0, 2) - 2*t*Power(x0, 2) + 
                                      Power(t, 2)*Power(x0, 2) + 2*t*x0*x1 - 
                                      2*Power(t, 2)*x0*x1 + 
                                      Power(t, 2)*Power(x1, 2) + 
                                      Power(y0, 2) - 2*t*Power(y0, 2) + 
                                      Power(t, 2)*Power(y0, 2) + 2*t*y0*y1 - 
                                      2*Power(t, 2)*y0*y1 + 
                                      Power(t, 2)*Power(y1, 2))))/
                        Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                          Power(y0, 2) - 2*y0*y1 + 
                          Power(y1, 2))))/(Power(Power(x0, 2) - 2*x0*x1 + 
                      Power(x1, 2) + Power(y0 - y1, 2), 
                    1.5)*(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0, 2) - 2*y0*y1 + Power(y1, 2))) + (3*
                  Power(y0 - y1, 
                    2)*(x1*y0 - x0*y1)*(-Power(x0, 2) + x0*x1 - 
                      Power(y0, 2) + y0*y1)*
                  Log((2*(-Power(x0, 2) + t*Power(x0, 2) + x0*x1 - 
                                2*t*x0*x1 + t*Power(x1, 2) - Power(y0, 2) + 
                                t*Power(y0, 2) + y0*y1 - 2*t*y0*y1 + 
                                t*Power(y1, 2) + 
                                Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                      Power(y0, 2) - 2*y0*y1 + Power(y1, 2))*
                                  Sqrt(Power(x0, 2) - 2*t*Power(x0, 2) + 
                                      Power(t, 2)*Power(x0, 2) + 2*t*x0*x1 - 
                                      2*Power(t, 2)*x0*x1 + 
                                      Power(t, 2)*Power(x1, 2) + 
                                      Power(y0, 2) - 2*t*Power(y0, 2) + 
                                      Power(t, 2)*Power(y0, 2) + 2*t*y0*y1 - 
                                      2*Power(t, 2)*y0*y1 + 
                                      Power(t, 2)*Power(y1, 2))))/
                        Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                          Power(y0, 2) - 2*y0*y1 + 
                          Power(y1, 2))))/(Power(Power(x0, 2) - 2*x0*x1 + 
                      Power(x1, 2) + Power(y0 - y1, 2), 
                    2.5)*(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0, 2) - 2*y0*y1 + Power(y1, 2))) - ((y0 - 
                      y1)*(-2*y0 + 2*y1)*(x1*y0 - x0*y1)*(-Power(x0, 2) + 
                      x0*x1 - Power(y0, 2) + 
                      y0*y1)*(-Log((2*(-Power(x0, 2) + t*Power(x0, 2) + 
                                      x0*x1 - 2*t*x0*x1 + t*Power(x1, 2) - 
                                      Power(y0, 2) + t*Power(y0, 2) + y0*y1 - 
                                      2*t*y0*y1 + t*Power(y1, 2) + 
                                      Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0, 2) - 
                                        2*y0*y1 + Power(y1, 2))*
                                        Sqrt(Power(x0, 2) - 
                                        2*t*Power(x0, 2) + 
                                        Power(t, 2)*Power(x0, 2) + 
                                        2*t*x0*x1 - 2*Power(t, 2)*x0*x1 + 
                                        Power(t, 2)*Power(x1, 2) + 
                                        Power(y0, 2) - 2*t*Power(y0, 2) + 
                                        Power(t, 2)*Power(y0, 2) + 
                                        2*t*y0*y1 - 2*Power(t, 2)*y0*y1 + 
                                        Power(t, 2)*Power(y1, 2))))/
                              Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                Power(y0, 2) - 2*y0*y1 + Power(y1, 2))) + 
                      Log(2*(-Power(x0, 2) + t*Power(x0, 2) + x0*x1 - 
                                  2*t*x0*x1 + t*Power(x1, 2) - Power(y0, 2) + 
                                  t*Power(y0, 2) + y0*y1 - 2*t*y0*y1 + 
                                  t*Power(y1, 2)) + 
                            2*Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0, 2) - 2*y0*y1 + Power(y1, 2))*
                              Sqrt(Power(x0, 2) - 2*t*Power(x0, 2) + 
                                  Power(t, 2)*Power(x0, 2) + 2*t*x0*x1 - 
                                  2*Power(t, 2)*x0*x1 + 
                                  Power(t, 2)*Power(x1, 2) + Power(y0, 2) - 
                                  2*t*Power(y0, 2) + 
                                  Power(t, 2)*Power(y0, 2) + 2*t*y0*y1 - 
                                  2*Power(t, 2)*y0*y1 + 
                                  Power(t, 2)*
                                    Power(y1, 2)))))/(Power(Power(x0, 2) - 
                      2*x0*x1 + Power(x1, 2) + Power(y0 - y1, 2), 1.5)*
                  Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0, 2) - 2*y0*y1 + Power(y1, 2), 
                    2)) + (y0*(y0 - y1)*(x1*y0 - 
                      x0*y1)*(-Log((2*(-Power(x0, 2) + t*Power(x0, 2) + 
                                      x0*x1 - 2*t*x0*x1 + t*Power(x1, 2) - 
                                      Power(y0, 2) + t*Power(y0, 2) + y0*y1 - 
                                      2*t*y0*y1 + t*Power(y1, 2) + 
                                      Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0, 2) - 
                                        2*y0*y1 + Power(y1, 2))*
                                        Sqrt(Power(x0, 2) - 
                                        2*t*Power(x0, 2) + 
                                        Power(t, 2)*Power(x0, 2) + 
                                        2*t*x0*x1 - 2*Power(t, 2)*x0*x1 + 
                                        Power(t, 2)*Power(x1, 2) + 
                                        Power(y0, 2) - 2*t*Power(y0, 2) + 
                                        Power(t, 2)*Power(y0, 2) + 
                                        2*t*y0*y1 - 2*Power(t, 2)*y0*y1 + 
                                        Power(t, 2)*Power(y1, 2))))/
                              Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                Power(y0, 2) - 2*y0*y1 + Power(y1, 2))) + 
                      Log(2*(-Power(x0, 2) + t*Power(x0, 2) + x0*x1 - 
                                  2*t*x0*x1 + t*Power(x1, 2) - Power(y0, 2) + 
                                  t*Power(y0, 2) + y0*y1 - 2*t*y0*y1 + 
                                  t*Power(y1, 2)) + 
                            2*Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0, 2) - 2*y0*y1 + Power(y1, 2))*
                              Sqrt(Power(x0, 2) - 2*t*Power(x0, 2) + 
                                  Power(t, 2)*Power(x0, 2) + 2*t*x0*x1 - 
                                  2*Power(t, 2)*x0*x1 + 
                                  Power(t, 2)*Power(x1, 2) + Power(y0, 2) - 
                                  2*t*Power(y0, 2) + 
                                  Power(t, 2)*Power(y0, 2) + 2*t*y0*y1 - 
                                  2*Power(t, 2)*y0*y1 + 
                                  Power(t, 2)*
                                    Power(y1, 2)))))/(Power(Power(x0, 2) - 
                      2*x0*x1 + Power(x1, 2) + Power(y0 - y1, 2), 
                    1.5)*(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0, 2) - 2*y0*y1 + Power(y1, 2))) - (x0*(y0 - 
                      y1)*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + 
                      y0*y1)*(-Log((2*(-Power(x0, 2) + t*Power(x0, 2) + 
                                      x0*x1 - 2*t*x0*x1 + t*Power(x1, 2) - 
                                      Power(y0, 2) + t*Power(y0, 2) + y0*y1 - 
                                      2*t*y0*y1 + t*Power(y1, 2) + 
                                      Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0, 2) - 
                                        2*y0*y1 + Power(y1, 2))*
                                        Sqrt(Power(x0, 2) - 
                                        2*t*Power(x0, 2) + 
                                        Power(t, 2)*Power(x0, 2) + 
                                        2*t*x0*x1 - 2*Power(t, 2)*x0*x1 + 
                                        Power(t, 2)*Power(x1, 2) + 
                                        Power(y0, 2) - 2*t*Power(y0, 2) + 
                                        Power(t, 2)*Power(y0, 2) + 
                                        2*t*y0*y1 - 2*Power(t, 2)*y0*y1 + 
                                        Power(t, 2)*Power(y1, 2))))/
                              Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                Power(y0, 2) - 2*y0*y1 + Power(y1, 2))) + 
                      Log(2*(-Power(x0, 2) + t*Power(x0, 2) + x0*x1 - 
                                  2*t*x0*x1 + t*Power(x1, 2) - Power(y0, 2) + 
                                  t*Power(y0, 2) + y0*y1 - 2*t*y0*y1 + 
                                  t*Power(y1, 2)) + 
                            2*Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0, 2) - 2*y0*y1 + Power(y1, 2))*
                              Sqrt(Power(x0, 2) - 2*t*Power(x0, 2) + 
                                  Power(t, 2)*Power(x0, 2) + 2*t*x0*x1 - 
                                  2*Power(t, 2)*x0*x1 + 
                                  Power(t, 2)*Power(x1, 2) + Power(y0, 2) - 
                                  2*t*Power(y0, 2) + 
                                  Power(t, 2)*Power(y0, 2) + 2*t*y0*y1 - 
                                  2*Power(t, 2)*y0*y1 + 
                                  Power(t, 2)*
                                    Power(y1, 2)))))/(Power(Power(x0, 2) - 
                      2*x0*x1 + Power(x1, 2) + Power(y0 - y1, 2), 
                    1.5)*(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0, 2) - 2*y0*y1 + Power(y1, 2))) - ((x1*y0 - 
                      x0*y1)*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + 
                      y0*y1)*(-Log((2*(-Power(x0, 2) + t*Power(x0, 2) + 
                                      x0*x1 - 2*t*x0*x1 + t*Power(x1, 2) - 
                                      Power(y0, 2) + t*Power(y0, 2) + y0*y1 - 
                                      2*t*y0*y1 + t*Power(y1, 2) + 
                                      Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0, 2) - 
                                        2*y0*y1 + Power(y1, 2))*
                                        Sqrt(Power(x0, 2) - 
                                        2*t*Power(x0, 2) + 
                                        Power(t, 2)*Power(x0, 2) + 
                                        2*t*x0*x1 - 2*Power(t, 2)*x0*x1 + 
                                        Power(t, 2)*Power(x1, 2) + 
                                        Power(y0, 2) - 2*t*Power(y0, 2) + 
                                        Power(t, 2)*Power(y0, 2) + 
                                        2*t*y0*y1 - 2*Power(t, 2)*y0*y1 + 
                                        Power(t, 2)*Power(y1, 2))))/
                              Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                Power(y0, 2) - 2*y0*y1 + Power(y1, 2))) + 
                      Log(2*(-Power(x0, 2) + t*Power(x0, 2) + x0*x1 - 
                                  2*t*x0*x1 + t*Power(x1, 2) - Power(y0, 2) + 
                                  t*Power(y0, 2) + y0*y1 - 2*t*y0*y1 + 
                                  t*Power(y1, 2)) + 
                            2*Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0, 2) - 2*y0*y1 + Power(y1, 2))*
                              Sqrt(Power(x0, 2) - 2*t*Power(x0, 2) + 
                                  Power(t, 2)*Power(x0, 2) + 2*t*x0*x1 - 
                                  2*Power(t, 2)*x0*x1 + 
                                  Power(t, 2)*Power(x1, 2) + Power(y0, 2) - 
                                  2*t*Power(y0, 2) + 
                                  Power(t, 2)*Power(y0, 2) + 2*t*y0*y1 - 
                                  2*Power(t, 2)*y0*y1 + 
                                  Power(t, 2)*
                                    Power(y1, 2)))))/(Power(Power(x0, 2) - 
                      2*x0*x1 + Power(x1, 2) + Power(y0 - y1, 2), 
                    1.5)*(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0, 2) - 2*y0*y1 + Power(y1, 2))) + (3*
                  Power(y0 - y1, 
                    2)*(x1*y0 - x0*y1)*(-Power(x0, 2) + x0*x1 - 
                      Power(y0, 2) + 
                      y0*y1)*(-Log((2*(-Power(x0, 2) + t*Power(x0, 2) + 
                                      x0*x1 - 2*t*x0*x1 + t*Power(x1, 2) - 
                                      Power(y0, 2) + t*Power(y0, 2) + y0*y1 - 
                                      2*t*y0*y1 + t*Power(y1, 2) + 
                                      Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0, 2) - 
                                        2*y0*y1 + Power(y1, 2))*
                                        Sqrt(Power(x0, 2) - 
                                        2*t*Power(x0, 2) + 
                                        Power(t, 2)*Power(x0, 2) + 
                                        2*t*x0*x1 - 2*Power(t, 2)*x0*x1 + 
                                        Power(t, 2)*Power(x1, 2) + 
                                        Power(y0, 2) - 2*t*Power(y0, 2) + 
                                        Power(t, 2)*Power(y0, 2) + 
                                        2*t*y0*y1 - 2*Power(t, 2)*y0*y1 + 
                                        Power(t, 2)*Power(y1, 2))))/
                              Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                Power(y0, 2) - 2*y0*y1 + Power(y1, 2))) + 
                      Log(2*(-Power(x0, 2) + t*Power(x0, 2) + x0*x1 - 
                                  2*t*x0*x1 + t*Power(x1, 2) - Power(y0, 2) + 
                                  t*Power(y0, 2) + y0*y1 - 2*t*y0*y1 + 
                                  t*Power(y1, 2)) + 
                            2*Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0, 2) - 2*y0*y1 + Power(y1, 2))*
                              Sqrt(Power(x0, 2) - 2*t*Power(x0, 2) + 
                                  Power(t, 2)*Power(x0, 2) + 2*t*x0*x1 - 
                                  2*Power(t, 2)*x0*x1 + 
                                  Power(t, 2)*Power(x1, 2) + Power(y0, 2) - 
                                  2*t*Power(y0, 2) + 
                                  Power(t, 2)*Power(y0, 2) + 2*t*y0*y1 - 
                                  2*Power(t, 2)*y0*y1 + 
                                  Power(t, 2)*
                                    Power(y1, 2)))))/(Power(Power(x0, 2) - 
                      2*x0*x1 + Power(x1, 2) + Power(y0 - y1, 2), 
                    2.5)*(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0, 2) - 2*y0*y1 + 
                      Power(y1, 2))), ((2*x0*(x0 - x1)*
                          Sqrt(Power(x0, 2) + Power(y0, 2)))/
                      Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                        Power(y0 - y1, 2), 
                      2) + (y0*Sqrt(Power(x0, 2) + Power(y0, 2))*(y0 - y1))/
                      Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                        Power(y0 - y1, 2), 
                      2) + (8*(x0 - x1)*
                          Sqrt(Power(x0, 2) + Power(y0, 2))*(y0 - 
                              y1)*(-(x1*y0) + x0*y1))/
                      Power3(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                        Power(y0 - y1, 2), 
                      3) - (Sqrt(Power(x0, 2) + 
                              Power(y0, 2))*(-Power(x0, 2) + x0*x1 + 
                              y0*(-y0 + y1)))/
                      Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                        Power(y0 - y1, 2), 
                      2) + (4*Sqrt(Power(x0, 2) + Power(y0, 2))*
                          Power(y0 - y1, 
                            2)*(-Power(x0, 2) + x0*x1 + y0*(-y0 + y1)))/
                      Power3(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                        Power(y0 - y1, 2), 
                      3) + ((y0 - y1)*
                        Power(x1*y0 - x0*y1, 
                          2)*((2*(y0 - (Sqrt(Power(x0, 2) + 
                                        Power(y0, 2))*(y0 - y1))/
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2))))/
                                Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0 - y1, 
                                      2)) + (2*(y0 - y1)*(-Power(x0, 2) + 
                                        x0*x1 - Power(y0, 2) + 
                                        Sqrt(Power(x0, 2) + Power(y0, 2))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1))/
                                Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0 - y1, 2), 1.5)))/(2.*
                        Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0 - y1, 2), 
                          2)*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + 
                            Sqrt(Power(x0, 2) + Power(y0, 2))*
                              Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0 - y1, 2)) + y0*y1)) + ((x0 - 
                            x1)*(Power(x0, 2) - x0*x1 + 
                            y0*(y0 - y1))*(-(x1*y0) + 
                            x0*y1)*((2*(y0 - (Sqrt(Power(x0, 2) + 
                                        Power(y0, 2))*(y0 - y1))/
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2))))/
                                Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0 - y1, 
                                      2)) + (2*(y0 - y1)*(-Power(x0, 2) + 
                                        x0*x1 - Power(y0, 2) + 
                                        Sqrt(Power(x0, 2) + Power(y0, 2))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1))/
                                Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0 - y1, 2), 1.5)))/(Power(Power(x0, 
                                2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0 - y1, 2), 
                          2)*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + 
                            Sqrt(Power(x0, 2) + Power(y0, 2))*
                              Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0 - y1, 2)) + 
                            y0*y1)) - (2*(x0 - x1)*(Power(x0, 2) - x0*x1 + 
                              y0*(y0 - y1))*(-(x1*y0) + 
                              x0*y1)*(-((y0 - (Sqrt(Power(x0, 2) + 
                                        Power(y0, 2))*(y0 - y1))/
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + 
                                        Power(y0 - y1, 2)))/(-Power(x0, 2) + 
                                        x0*x1 - Power(y0, 2) + 
                                        Sqrt(Power(x0, 2) + Power(y0, 2))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1)) + (Sqrt(Power(x0, 2) - 
                                        2*x0*x1 + Power(x1, 2) + 
                                        Power(y0 - y1, 
                                        2))*((2*(y0 - (Sqrt(Power(x0, 2) + 
                                        Power(y0, 2))*(y0 - y1))/
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2))))/
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + 
                                        Power(y0 - y1, 
                                        2)) + (2*(y0 - y1)*(-Power(x0, 2) + 
                                        x0*x1 - Power(y0, 2) + 
                                        Sqrt(Power(x0, 2) + Power(y0, 2))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1))/
                                        Power(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2), 
                                        1.5)))/(2.*(-Power(x0, 2) + x0*x1 - 
                                        Power(y0, 2) + 
                                        Sqrt(Power(x0, 2) + Power(y0, 2))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1))))/
                      Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                        Power(y0 - y1, 2), 
                      2.5) + (2*
                          x0*(x0 - x1)*(Power(x0, 2) - x0*x1 + y0*(y0 - y1))*
                          Log((2*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + 
                                        Sqrt(Power(x0, 2) + Power(y0, 2))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1))/
                                Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0 - y1, 2))))/
                      Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                        Power(y0 - y1, 2), 
                      2.5) - (2*x0*(y0 - y1)*(x1*y0 - x0*y1)*
                          Log((2*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + 
                                        Sqrt(Power(x0, 2) + Power(y0, 2))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1))/
                                Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0 - y1, 2))))/
                      Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                        Power(y0 - y1, 2), 
                      2.5) - (Power(x1*y0 - x0*y1, 2)*
                          Log((2*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + 
                                        Sqrt(Power(x0, 2) + Power(y0, 2))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1))/
                                Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0 - y1, 2))))/
                      Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                        Power(y0 - y1, 2), 
                      2.5) + (5*Power(y0 - y1, 2)*Power(x1*y0 - x0*y1, 2)*
                          Log((2*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + 
                                        Sqrt(Power(x0, 2) + Power(y0, 2))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1))/
                                Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0 - y1, 2))))/
                      Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                        Power(y0 - y1, 2), 
                      3.5) - (2*(x0 - x1)*y0*(-(x1*y0) + x0*y1)*
                          Log((2*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + 
                                        Sqrt(Power(x0, 2) + Power(y0, 2))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1))/
                                Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0 - y1, 2))))/
                      Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                        Power(y0 - y1, 2), 
                      2.5) + (10*(x0 - x1)*(Power(x0, 2) - x0*x1 + 
                              y0*(y0 - y1))*(y0 - y1)*(-(x1*y0) + x0*y1)*
                          Log((2*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + 
                                        Sqrt(Power(x0, 2) + Power(y0, 2))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1))/
                                Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0 - y1, 2))))/
                      Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                        Power(y0 - y1, 2), 
                      3.5) - (2*
                          x0*(x0 - x1)*(Power(x0, 2) - x0*x1 + 
                              y0*(y0 - 
                                    y1))*(-Log(2*(-Power(x0, 2) + x0*x1 - 
                                        Power(y0, 2) + 
                                        Sqrt(Power(x0, 2) + Power(y0, 2))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1)) + 
                              Log((2*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + 
                                        Sqrt(Power(x0, 2) + Power(y0, 2))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1))/
                                      Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)))))/
                      Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                        Power(y0 - y1, 2), 
                      2.5) + (2*(x0 - x1)*
                          y0*(-(x1*y0) + 
                              x0*y1)*(-Log(2*(-Power(x0, 2) + x0*x1 - 
                                        Power(y0, 2) + 
                                        Sqrt(Power(x0, 2) + Power(y0, 2))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1)) + 
                              Log((2*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + 
                                        Sqrt(Power(x0, 2) + Power(y0, 2))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1))/
                                      Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)))))/
                      Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                        Power(y0 - y1, 2), 
                      2.5) - (10*(x0 - x1)*(Power(x0, 2) - x0*x1 + 
                              y0*(y0 - y1))*(y0 - y1)*(-(x1*y0) + 
                              x0*y1)*(-Log(2*(-Power(x0, 2) + x0*x1 - 
                                        Power(y0, 2) + 
                                        Sqrt(Power(x0, 2) + Power(y0, 2))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1)) + 
                              Log((2*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + 
                                        Sqrt(Power(x0, 2) + Power(y0, 2))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1))/
                                      Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)))))/
                      Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                        Power(y0 - y1, 2), 3.5))/
              2. + ((-2*x0*(x0 - x1)*
                          Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                              2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                              Power(t, 
                                  2)*(Power(x1, 2) + Power(y0 - y1, 2)) - 
                              2*t*y0*(y0 - y1)))/
                      Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                        Power(y0 - y1, 2), 
                      2) - (2*t*
                        Sqrt(Power(x0, 2) + Power(y0, 2)))/(Power(x0, 2) - 
                        2*x0*x1 + Power(x1, 2) + 
                        Power(y0 - y1, 2)) - ((y0 - 2*t*(y0 - y1))*
                          Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                              2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                              Power(t, 
                                  2)*(Power(x1, 2) + Power(y0 - y1, 2)) - 
                              2*t*y0*(y0 - y1))*(y0 - y1))/
                      Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                        Power(y0 - y1, 2), 
                      2) + (4*t*Sqrt(Power(x0, 2) + Power(y0, 2))*
                          Power(y0 - y1, 2))/
                      Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                        Power(y0 - y1, 2), 
                      2) - ((x0 - x1)*(2*t*y0 - 
                            2*Power(t, 2)*(y0 - y1))*(-(x1*y0) + 
                            x0*y1))/(Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                            2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                            Power(t, 2)*(Power(x1, 2) + Power(y0 - y1, 2)) - 
                            2*t*y0*(y0 - y1))*
                        Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0 - y1, 2), 2)) - (8*(x0 - x1)*
                          Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                              2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                              Power(t, 
                                  2)*(Power(x1, 2) + Power(y0 - y1, 2)) - 
                              2*t*y0*(y0 - y1))*(y0 - y1)*(-(x1*y0) + x0*y1))/
                      Power3(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                        Power(y0 - y1, 2), 
                      3) + (Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                              2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                              Power(t, 
                                  2)*(Power(x1, 2) + Power(y0 - y1, 2)) - 
                              2*t*y0*(y0 - y1))*((-1 + t)*Power(x0, 2) + 
                              x0*(x1 - 2*t*x1) + 
                              t*(Power(x1, 2) + Power(y0 - y1, 2)) + 
                              y0*(-y0 + y1)))/
                      Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                        Power(y0 - y1, 2), 
                      2) - ((2*t*y0 - 2*Power(t, 2)*(y0 - y1))*(y0 - 
                            y1)*((-1 + t)*Power(x0, 2) + x0*(x1 - 2*t*x1) + 
                            t*(Power(x1, 2) + Power(y0 - y1, 2)) + 
                            y0*(-y0 + y1)))/(2.*
                        Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                            2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                            Power(t, 2)*(Power(x1, 2) + Power(y0 - y1, 2)) - 
                            2*t*y0*(y0 - y1))*
                        Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0 - y1, 2), 2)) - (4*
                          Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                              2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                              Power(t, 
                                  2)*(Power(x1, 2) + Power(y0 - y1, 2)) - 
                              2*t*y0*(y0 - y1))*
                          Power(y0 - y1, 
                            2)*((-1 + t)*Power(x0, 2) + x0*(x1 - 2*t*x1) + 
                              t*(Power(x1, 2) + Power(y0 - y1, 2)) + 
                              y0*(-y0 + y1)))/
                      Power3(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                        Power(y0 - y1, 2), 
                      3) - (t*(x0 - x1)*(-(x1*y0) + 
                            x0*y1)*((2*(y0 - (Sqrt(Power(x0, 2) + 
                                        Power(y0, 2))*(y0 - y1))/
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2))))/
                                Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0 - y1, 
                                      2)) + (2*(y0 - y1)*(-Power(x0, 2) + 
                                        x0*x1 - Power(y0, 2) + 
                                        Sqrt(Power(x0, 2) + Power(y0, 2))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1))/
                                Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0 - y1, 2), 1.5)))/((Power(x0, 2) - 
                            2*x0*x1 + Power(x1, 2) + 
                            Power(y0 - y1, 2))*(-Power(x0, 2) + x0*x1 - 
                            Power(y0, 2) + 
                            Sqrt(Power(x0, 2) + Power(y0, 2))*
                              Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0 - y1, 2)) + y0*y1)) - ((y0 - y1)*
                        Power(x1*y0 - x0*y1, 
                          2)*((2*(y0 - 2*t*
                                        y0 + ((2*t*y0 - 
                                        2*Power(t, 2)*(y0 - y1))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + 
                                        Power(y0 - y1, 2)))/(2.*
                                        Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1))) - (Sqrt(Power(-1 + 
                                        t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1))*(y0 - y1))/
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        2*t*y1))/
                                Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0 - y1, 
                                      2)) + (2*(y0 - y1)*(-Power(x0, 2) + 
                                        t*Power(x0, 2) + x0*x1 - 2*t*x0*x1 + 
                                        t*Power(x1, 2) - Power(y0, 2) + 
                                        t*Power(y0, 2) + 
                                        Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1 - 2*t*y0*y1 + t*Power(y1, 2)))/
                                Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0 - y1, 2), 1.5)))/(2.*
                        Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0 - y1, 2), 
                          2)*(-Power(x0, 2) + t*Power(x0, 2) + x0*x1 - 
                            2*t*x0*x1 + t*Power(x1, 2) - Power(y0, 2) + 
                            t*Power(y0, 2) + 
                            Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                  2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                  Power(t, 
                                      2)*(Power(x1, 2) + Power(y0 - y1, 2)) - 
                                  2*t*y0*(y0 - y1))*
                              Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0 - y1, 2)) + y0*y1 - 2*t*y0*y1 + 
                            t*Power(y1, 2))) - ((x0 - x1)*(Power(x0, 2) - 
                            x0*x1 + y0*(y0 - y1))*(-(x1*y0) + 
                            x0*y1)*((2*(y0 - 
                                        2*t*y0 + ((2*t*y0 - 
                                        2*Power(t, 2)*(y0 - y1))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + 
                                        Power(y0 - y1, 2)))/(2.*
                                        Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1))) - (Sqrt(Power(-1 + 
                                        t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1))*(y0 - y1))/
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        2*t*y1))/
                                Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0 - y1, 
                                      2)) + (2*(y0 - y1)*(-Power(x0, 2) + 
                                        t*Power(x0, 2) + x0*x1 - 2*t*x0*x1 + 
                                        t*Power(x1, 2) - Power(y0, 2) + 
                                        t*Power(y0, 2) + 
                                        Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1 - 2*t*y0*y1 + t*Power(y1, 2)))/
                                Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0 - y1, 2), 1.5)))/(Power(Power(x0, 
                                2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0 - y1, 2), 
                          2)*(-Power(x0, 2) + t*Power(x0, 2) + x0*x1 - 
                            2*t*x0*x1 + t*Power(x1, 2) - Power(y0, 2) + 
                            t*Power(y0, 2) + 
                            Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                  2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                  Power(t, 
                                      2)*(Power(x1, 2) + Power(y0 - y1, 2)) - 
                                  2*t*y0*(y0 - y1))*
                              Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0 - y1, 2)) + y0*y1 - 2*t*y0*y1 + 
                            t*Power(y1, 2))) + (t*(x0 - x1)*(-(x1*y0) + 
                            x0*y1)*((2*(y0 - 
                                        2*t*y0 + ((2*t*y0 - 
                                        2*Power(t, 2)*(y0 - y1))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + 
                                        Power(y0 - y1, 2)))/(2.*
                                        Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1))) - (Sqrt(Power(-1 + 
                                        t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1))*(y0 - y1))/
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        2*t*y1))/
                                Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0 - y1, 
                                      2)) + (2*(y0 - y1)*(-Power(x0, 2) + 
                                        t*Power(x0, 2) + x0*x1 - 2*t*x0*x1 + 
                                        t*Power(x1, 2) - Power(y0, 2) + 
                                        t*Power(y0, 2) + 
                                        Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1 - 2*t*y0*y1 + t*Power(y1, 2)))/
                                Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0 - y1, 2), 1.5)))/((Power(x0, 2) - 
                            2*x0*x1 + Power(x1, 2) + 
                            Power(y0 - y1, 2))*(-Power(x0, 2) + 
                            t*Power(x0, 2) + x0*x1 - 2*t*x0*x1 + 
                            t*Power(x1, 2) - Power(y0, 2) + t*Power(y0, 2) + 
                            Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                  2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                  Power(t, 
                                      2)*(Power(x1, 2) + Power(y0 - y1, 2)) - 
                                  2*t*y0*(y0 - y1))*
                              Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0 - y1, 2)) + y0*y1 - 2*t*y0*y1 + 
                            t*Power(y1, 2))) + (2*(x0 - x1)*(Power(x0, 2) - 
                              x0*x1 + y0*(y0 - y1))*(-(x1*y0) + 
                              x0*y1)*(-((y0 - 
                                        2*t*y0 + ((2*t*y0 - 
                                        2*Power(t, 2)*(y0 - y1))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + 
                                        Power(y0 - y1, 2)))/(2.*
                                        Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1))) - (Sqrt(Power(-1 + 
                                        t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1))*(y0 - y1))/
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        2*t*y1)/(-Power(x0, 2) + 
                                        t*Power(x0, 2) + x0*x1 - 2*t*x0*x1 + 
                                        t*Power(x1, 2) - Power(y0, 2) + 
                                        t*Power(y0, 2) + 
                                        Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1 - 2*t*y0*y1 + 
                                        t*Power(y1, 2))) + (Sqrt(Power(x0, 
                                        2) - 2*x0*x1 + Power(x1, 2) + 
                                        Power(y0 - y1, 
                                        2))*((2*(y0 - 
                                        2*t*y0 + ((2*t*y0 - 2*Power(t, 
                                        2)*(y0 - y1))*Sqrt(Power(x0, 2) - 
                                        2*x0*x1 + Power(x1, 2) + 
                                        Power(y0 - y1, 2)))/(2.*
                                        Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 2*t*
                                        y0*(y0 - y1))) - (Sqrt(Power(-1 + t, 
                                        2)*Power(x0, 2) - 2*(-1 + t)*t*x0*
                                        x1 + Power(y0, 2) + Power(t, 
                                        2)*(Power(x1, 2) + Power(y0 - y1, 
                                        2)) - 2*t*y0*(y0 - y1))*(y0 - y1))/
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        2*t*y1))/
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + 
                                        Power(y0 - y1, 
                                        2)) + (2*(y0 - y1)*(-Power(x0, 2) + 
                                        t*Power(x0, 2) + x0*x1 - 2*t*x0*x1 + 
                                        t*Power(x1, 2) - Power(y0, 2) + 
                                        t*Power(y0, 2) + 
                                        Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1 - 2*t*y0*y1 + t*Power(y1, 2)))/
                                        Power(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2), 
                                        1.5)))/(2.*(-Power(x0, 2) + 
                                        t*Power(x0, 2) + x0*x1 - 2*t*x0*x1 + 
                                        t*Power(x1, 2) - Power(y0, 2) + 
                                        t*Power(y0, 2) + 
                                        Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1 - 2*t*y0*y1 + 
                                        t*Power(y1, 2)))))/
                      Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                        Power(y0 - y1, 2), 
                      2.5) - (2*t*x0*(x0 - x1)*
                          Log((2*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + 
                                        Sqrt(Power(x0, 2) + Power(y0, 2))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1))/
                                Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0 - y1, 2))))/
                      Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                        Power(y0 - y1, 2), 
                      1.5) - (6*t*(x0 - x1)*(y0 - y1)*(-(x1*y0) + x0*y1)*
                          Log((2*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + 
                                        Sqrt(Power(x0, 2) + Power(y0, 2))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1))/
                                Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0 - y1, 2))))/
                      Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                        Power(y0 - y1, 2), 
                      2.5) - (2*
                          x0*(x0 - x1)*(Power(x0, 2) - x0*x1 + y0*(y0 - y1))*
                          Log((2*(-Power(x0, 2) + t*Power(x0, 2) + x0*x1 - 
                                        2*t*x0*x1 + t*Power(x1, 2) - 
                                        Power(y0, 2) + t*Power(y0, 2) + 
                                        Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1 - 2*t*y0*y1 + t*Power(y1, 2)))/
                                Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0 - y1, 2))))/
                      Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                        Power(y0 - y1, 2), 
                      2.5) + (2*t*x0*(x0 - x1)*
                          Log((2*(-Power(x0, 2) + t*Power(x0, 2) + x0*x1 - 
                                        2*t*x0*x1 + t*Power(x1, 2) - 
                                        Power(y0, 2) + t*Power(y0, 2) + 
                                        Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1 - 2*t*y0*y1 + t*Power(y1, 2)))/
                                Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0 - y1, 2))))/
                      Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                        Power(y0 - y1, 2), 
                      1.5) + (2*x0*(y0 - y1)*(x1*y0 - x0*y1)*
                          Log((2*(-Power(x0, 2) + t*Power(x0, 2) + x0*x1 - 
                                        2*t*x0*x1 + t*Power(x1, 2) - 
                                        Power(y0, 2) + t*Power(y0, 2) + 
                                        Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1 - 2*t*y0*y1 + t*Power(y1, 2)))/
                                Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0 - y1, 2))))/
                      Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                        Power(y0 - y1, 2), 
                      2.5) + (Power(x1*y0 - x0*y1, 2)*
                          Log((2*(-Power(x0, 2) + t*Power(x0, 2) + x0*x1 - 
                                        2*t*x0*x1 + t*Power(x1, 2) - 
                                        Power(y0, 2) + t*Power(y0, 2) + 
                                        Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1 - 2*t*y0*y1 + t*Power(y1, 2)))/
                                Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0 - y1, 2))))/
                      Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                        Power(y0 - y1, 2), 
                      2.5) - (5*Power(y0 - y1, 2)*Power(x1*y0 - x0*y1, 2)*
                          Log((2*(-Power(x0, 2) + t*Power(x0, 2) + x0*x1 - 
                                        2*t*x0*x1 + t*Power(x1, 2) - 
                                        Power(y0, 2) + t*Power(y0, 2) + 
                                        Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1 - 2*t*y0*y1 + t*Power(y1, 2)))/
                                Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0 - y1, 2))))/
                      Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                        Power(y0 - y1, 2), 
                      3.5) + (2*(x0 - x1)*y0*(-(x1*y0) + x0*y1)*
                          Log((2*(-Power(x0, 2) + t*Power(x0, 2) + x0*x1 - 
                                        2*t*x0*x1 + t*Power(x1, 2) - 
                                        Power(y0, 2) + t*Power(y0, 2) + 
                                        Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1 - 2*t*y0*y1 + t*Power(y1, 2)))/
                                Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0 - y1, 2))))/
                      Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                        Power(y0 - y1, 2), 
                      2.5) - (10*(x0 - x1)*(Power(x0, 2) - x0*x1 + 
                              y0*(y0 - y1))*(y0 - y1)*(-(x1*y0) + x0*y1)*
                          Log((2*(-Power(x0, 2) + t*Power(x0, 2) + x0*x1 - 
                                        2*t*x0*x1 + t*Power(x1, 2) - 
                                        Power(y0, 2) + t*Power(y0, 2) + 
                                        Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1 - 2*t*y0*y1 + t*Power(y1, 2)))/
                                Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0 - y1, 2))))/
                      Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                        Power(y0 - y1, 2), 
                      3.5) + (6*t*(x0 - x1)*(y0 - y1)*(-(x1*y0) + x0*y1)*
                          Log((2*(-Power(x0, 2) + t*Power(x0, 2) + x0*x1 - 
                                        2*t*x0*x1 + t*Power(x1, 2) - 
                                        Power(y0, 2) + t*Power(y0, 2) + 
                                        Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1 - 2*t*y0*y1 + t*Power(y1, 2)))/
                                Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0 - y1, 2))))/
                      Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                        Power(y0 - y1, 2), 
                      2.5) + (2*
                          x0*(x0 - x1)*(Power(x0, 2) - x0*x1 + 
                              y0*(y0 - 
                                    y1))*(-Log(2*(-Power(x0, 2) + 
                                        t*Power(x0, 2) + x0*x1 - 2*t*x0*x1 + 
                                        t*Power(x1, 2) - Power(y0, 2) + 
                                        t*Power(y0, 2) + 
                                        Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1 - 2*t*y0*y1 + 
                                        t*Power(y1, 2))) + 
                              Log((2*(-Power(x0, 2) + t*Power(x0, 2) + 
                                        x0*x1 - 2*t*x0*x1 + t*Power(x1, 2) - 
                                        Power(y0, 2) + t*Power(y0, 2) + 
                                        Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1 - 2*t*y0*y1 + t*Power(y1, 2)))/
                                      Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)))))/
                      Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                        Power(y0 - y1, 2), 
                      2.5) - (2*(x0 - x1)*
                          y0*(-(x1*y0) + 
                              x0*y1)*(-Log(2*(-Power(x0, 2) + 
                                        t*Power(x0, 2) + x0*x1 - 2*t*x0*x1 + 
                                        t*Power(x1, 2) - Power(y0, 2) + 
                                        t*Power(y0, 2) + 
                                        Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1 - 2*t*y0*y1 + 
                                        t*Power(y1, 2))) + 
                              Log((2*(-Power(x0, 2) + t*Power(x0, 2) + 
                                        x0*x1 - 2*t*x0*x1 + t*Power(x1, 2) - 
                                        Power(y0, 2) + t*Power(y0, 2) + 
                                        Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1 - 2*t*y0*y1 + t*Power(y1, 2)))/
                                      Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)))))/
                      Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                        Power(y0 - y1, 2), 
                      2.5) + (10*(x0 - x1)*(Power(x0, 2) - x0*x1 + 
                              y0*(y0 - y1))*(y0 - y1)*(-(x1*y0) + 
                              x0*y1)*(-Log(2*(-Power(x0, 2) + 
                                        t*Power(x0, 2) + x0*x1 - 2*t*x0*x1 + 
                                        t*Power(x1, 2) - Power(y0, 2) + 
                                        t*Power(y0, 2) + 
                                        Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1 - 2*t*y0*y1 + 
                                        t*Power(y1, 2))) + 
                              Log((2*(-Power(x0, 2) + t*Power(x0, 2) + 
                                        x0*x1 - 2*t*x0*x1 + t*Power(x1, 2) - 
                                        Power(y0, 2) + t*Power(y0, 2) + 
                                        Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1))*
                                        Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                        y0*y1 - 2*t*y0*y1 + t*Power(y1, 2)))/
                                      Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)))))/
                      Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                        Power(y0 - y1, 2), 3.5))/2.,

 (((2*Sqrt(Power(x0, 2) + Power(y0, 2))*(y0 - y1))/(Power(x0, 2) - 
                  2*x0*x1 + Power(x1, 2) + 
                  Power(y0 - y1, 2)) + (Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                      2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                      Power(t, 2)*(Power(x1, 2) + Power(y0 - y1, 2)) - 
                      2*t*y0*(y0 - y1))*(-y0 + y1))/(Power(x0, 2) - 2*x0*x1 + 
                  Power(x1, 2) + 
                  Power(y0 - y1, 2)) - (2*(x0 - x1)*(-(x1*y0) + 
                      x0*y1)*((-1 + t)*Power(x0, 2) + x0*(x1 - 2*t*x1) + 
                      t*(Power(x1, 2) + Power(y0 - y1, 2)) + 
                      y0*(-y0 + y1)))/(Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                      2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                      Power(t, 2)*(Power(x1, 2) + Power(y0 - y1, 2)) - 
                      2*t*y0*(y0 - y1))*
                  Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0 - y1, 2), 2)) - ((y0 - y1)*
                  Power((-1 + t)*Power(x0, 2) + x0*(x1 - 2*t*x1) + 
                      t*(Power(x1, 2) + Power(y0 - y1, 2)) + y0*(-y0 + y1), 
                    2))/(Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                      2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                      Power(t, 2)*(Power(x1, 2) + Power(y0 - y1, 2)) - 
                      2*t*y0*(y0 - y1))*
                  Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0 - y1, 2), 2)) - ((y0 - y1)*
                  Power(x1*y0 - x0*y1, 
                    2)*(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                      Power(y0, 2) - 2*y0*y1 + 
                      Power(y1, 
                          2) + (Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0 - y1, 2))*((-1 + t)*Power(x0, 2) + 
                                  x0*(x1 - 2*t*x1) + 
                                  t*(Power(x1, 2) + Power(y0 - y1, 2)) + 
                                  y0*(-y0 + y1)))/
                          Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                            2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                            Power(t, 2)*(Power(x1, 2) + Power(y0 - y1, 2)) - 
                            2*t*y0*(y0 - y1))))/(Power(Power(x0, 2) - 
                      2*x0*x1 + Power(x1, 2) + Power(y0 - y1, 2), 
                    2.5)*(-Power(x0, 2) + t*Power(x0, 2) + x0*x1 - 
                      2*t*x0*x1 + t*Power(x1, 2) - Power(y0, 2) + 
                      t*Power(y0, 2) + 
                      Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                            2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                            Power(t, 2)*(Power(x1, 2) + Power(y0 - y1, 2)) - 
                            2*t*y0*(y0 - y1))*
                        Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0 - y1, 2)) + y0*y1 - 2*t*y0*y1 + 
                      t*Power(y1, 2))) - (2*(x0 - x1)*(Power(x0, 2) - x0*x1 + 
                      y0*(y0 - y1))*(-(x1*y0) + x0*y1)*(Power(x0, 2) - 
                      2*x0*x1 + Power(x1, 2) + Power(y0, 2) - 2*y0*y1 + 
                      Power(y1, 
                          2) + (Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0 - y1, 2))*((-1 + t)*Power(x0, 2) + 
                                  x0*(x1 - 2*t*x1) + 
                                  t*(Power(x1, 2) + Power(y0 - y1, 2)) + 
                                  y0*(-y0 + y1)))/
                          Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                            2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                            Power(t, 2)*(Power(x1, 2) + Power(y0 - y1, 2)) - 
                            2*t*y0*(y0 - y1))))/(Power(Power(x0, 2) - 
                      2*x0*x1 + Power(x1, 2) + Power(y0 - y1, 2), 
                    2.5)*(-Power(x0, 2) + t*Power(x0, 2) + x0*x1 - 
                      2*t*x0*x1 + t*Power(x1, 2) - Power(y0, 2) + 
                      t*Power(y0, 2) + 
                      Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                            2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                            Power(t, 2)*(Power(x1, 2) + Power(y0 - y1, 2)) - 
                            2*t*y0*(y0 - y1))*
                        Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0 - y1, 2)) + y0*y1 - 2*t*y0*y1 + 
                      t*Power(y1, 2))) + (2*
                  t*(x0 - x1)*(-(x1*y0) + x0*y1)*(Power(x0, 2) - 2*x0*x1 + 
                      Power(x1, 2) + Power(y0, 2) - 2*y0*y1 + 
                      Power(y1, 
                          2) + (Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                                  Power(y0 - y1, 2))*((-1 + t)*Power(x0, 2) + 
                                  x0*(x1 - 2*t*x1) + 
                                  t*(Power(x1, 2) + Power(y0 - y1, 2)) + 
                                  y0*(-y0 + y1)))/
                          Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                            2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                            Power(t, 2)*(Power(x1, 2) + Power(y0 - y1, 2)) - 
                            2*t*y0*(y0 - y1))))/(Power(Power(x0, 2) - 
                      2*x0*x1 + Power(x1, 2) + Power(y0 - y1, 2), 
                    1.5)*(-Power(x0, 2) + t*Power(x0, 2) + x0*x1 - 
                      2*t*x0*x1 + t*Power(x1, 2) - Power(y0, 2) + 
                      t*Power(y0, 2) + 
                      Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                            2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                            Power(t, 2)*(Power(x1, 2) + Power(y0 - y1, 2)) - 
                            2*t*y0*(y0 - y1))*
                        Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0 - y1, 2)) + y0*y1 - 2*t*y0*y1 + 
                      t*Power(y1, 2))) - (2*(x0 - x1)*(-(x1*y0) + x0*y1)*
                    Log((2*(-Power(x0, 2) + x0*x1 - Power(y0, 2) + 
                                  Sqrt(Power(x0, 2) + Power(y0, 2))*
                                    Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                  y0*y1))/
                          Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0 - y1, 2))))/
                Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                  Power(y0 - y1, 2), 
                1.5) + (2*(x0 - x1)*(-(x1*y0) + x0*y1)*
                    Log((2*(-Power(x0, 2) + t*Power(x0, 2) + x0*x1 - 
                                  2*t*x0*x1 + t*Power(x1, 2) - Power(y0, 2) + 
                                  t*Power(y0, 2) + 
                                  Sqrt(Power(-1 + t, 2)*Power(x0, 2) - 
                                        2*(-1 + t)*t*x0*x1 + Power(y0, 2) + 
                                        Power(t, 
                                        2)*(Power(x1, 2) + 
                                        Power(y0 - y1, 2)) - 
                                        2*t*y0*(y0 - y1))*
                                    Sqrt(Power(x0, 2) - 2*x0*x1 + 
                                        Power(x1, 2) + Power(y0 - y1, 2)) + 
                                  y0*y1 - 2*t*y0*y1 + t*Power(y1, 2)))/
                          Sqrt(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                            Power(y0 - y1, 2))))/
                Power(Power(x0, 2) - 2*x0*x1 + Power(x1, 2) + 
                  Power(y0 - y1, 2), 1.5))/2.)
                );
                assert(answer.length == 5);
                return answer;
            } // calcPosition1Gradient


            private static class NewtonSolver
            {
                public abstract static class Fun
                {
                    public abstract double[] f(double x[]);
                    // Derived class may implement jacobian if they wish.
                    // if they don't, they will get this default
                    // implementation which estimates the jacobian
                    // using finite differences.
                    public double[][] J(double x[])
                    {
                        double fx[] = f(x);
                        double answer[][] = new double[x.length][fx.length];
                        double dx = 1e-4; // XXX ?
                        double invdx = 1./dx;
                        double xplusdx[] = VecMath.copyvec(x); // scratch
                        FORI (i, x.length)
                        {
                            xplusdx[i] += dx;
                            VecMath.setcolumn(answer,
                                              i,
                                              VecMath.vxs(
                                                  VecMath.vmv(f(xplusdx),
                                                              fx),
                                                  invdx));
                            xplusdx[i] = x[i];
                        }
                        //PRINTMAT(answer);
                        return answer;
                    }
                } // interface Fun

                // x should be loaded with the initial guess;
                // it will be refined.
                private static void solve(double x[],
                                          double y[],
                                          Fun fun,
                                          int maxIterations)
                {
                    boolean debug = false;
                    if (debug) PRINT(maxIterations);
                    double prevErrorLengthSqrd = Double.POSITIVE_INFINITY;
                    int minIterations = 10; // seem to need this, or it thinks it stopped improving after 1 iteration in some sticky situations.  I think actually the termination condition should be that it didn't improve in some number of iterations?
                    FORI (iIter, maxIterations)
                    {
                        if (debug) PRINT(iIter);
                        if (debug) PRINTVEC(x);
                        if (debug) PRINTVEC(y);

                        double fx[] = fun.f(x);
                        double error[] = VecMath.vmv(fx, y);
                        double errorLengthSqrd = VecMath.normsqrd(error);
                        if (debug) PRINT(errorLengthSqrd);
                        if (iIter >= minIterations
                         && !(errorLengthSqrd < prevErrorLengthSqrd))
                        {
                            System.out.println("    stopped improving after "+iIter+" iterations");
                            return;
                        }
                        prevErrorLengthSqrd = errorLengthSqrd;

                        // One newton iteration:
                        // If we want to find x such that f(x) = y,
                        // start with xGuess
                        // and evaluate J = df/dx at xGuess.
                        // Then, approximately,
                        //       J(xGuess) * (x-xGuess) = (y - f(xGuess)
                        //                    x-xGuess = J^-1 * (y - f(xGuess))
                        //                    x = xGuess + J^-1 * (y - f(xGuess))


                        double Jx[][] = fun.J(x);
                        // x += Jx^-1 * (y - fx)
                        VecMath.vpv(x,
                                    x,
                                        VecMath.sxv(
                                            1., // fudge-- only go partway there
                                            VecMath.invmxv(Jx,
                                                          VecMath.vmv(y, fx))));

                        fx = fun.f(x);
                    }
                } // solve

                // Little test program
                public static void main(String args[])
                {
                    System.out.println("    in NewtonSolver.main");
                    {
                        // Find x such that x^2 == 100, with starting guess of 9
                        Fun fun = new Fun() {
                            public double[] f(double x[])
                            {
                                return new double[]{x[0]*x[0]};
                            }
                        };
                        double x[] = {9}; // initial guess
                        double y[] = {100};

                        solve(x, y, fun, 1000);
                    }
                    {
                        // find x0,x1 such that {x0*x0,x0*x1} == {100,200}
                        // (answer is 10,20)
                        Fun fun = new Fun() {
                            public double[] f(double x[])
                            {
                                return new double[] {
                                    x[0]*x[0],
                                    x[0]*x[1],
                                };
                            }
                        };
                        double x[] = {5,25}; // initial guess
                        double y[] = {100,200};

                        solve(x, y, fun, 1000);
                    }
                    System.out.println("    out NewtonSolver.main");
                } // main
            } // class NewtonSolver

            private static class MyFun
                extends NewtonSolver.Fun
            {
                protected double p0[], v0[];
                protected double sign_t1;
                protected boolean twoQuadraticsMode;
                public MyFun(double p0[], double v0[], double sign_t1, boolean twoQuadraticsMode)
                {
                    this.p0 = p0;
                    this.v0 = v0;
                    this.sign_t1 = sign_t1;
                    this.twoQuadraticsMode = twoQuadraticsMode;
                }
                public double[] f(double x[])
                {
                    double A0[] = {x[0],x[1]};
                    double At1[] = {x[2],x[3]};
                    double t1 = sign_t1*VecMath.dist(A0, At1);
                    double A1[] = VecMath.lerp(A0, At1, 1./t1);
                    double vt1[] = calcVelocity(v0, A0, A1, t1, twoQuadraticsMode);
                    double pt1[] = calcPosition(p0,v0, A0, A1, t1, twoQuadraticsMode);
                    return new double[] {vt1[0],vt1[1],pt1[0],pt1[1]};
                }
            } // class MyFun

            private static class MyFunTryingToBeSmart
                extends MyFun
            {
                public MyFunTryingToBeSmart(double p0[], double v0[], double sign_t1, boolean twoQuadraticsMode)
                {
                    super(p0, v0, sign_t1, twoQuadraticsMode);
                }

                public double[][] J(double x[])
                {
                    double A0[] = {x[0],x[1]};
                    double At1[] = {x[2],x[3]};
                    double t1 = sign_t1*VecMath.dist(A0, At1);
                    double A1[] = VecMath.lerp(A0, At1, 1./t1);
                    double vt1[] = calcVelocity(v0, A0, A1, t1, twoQuadraticsMode);
                    double pt1[] = calcPosition(p0,v0, A0, A1, t1, twoQuadraticsMode);
                    double answer[][] = calcVelocityAndPositionJacobianWithRespectToA0At1(p0,v0,A0,At1,sign_t1, twoQuadraticsMode);
                    return answer;
                }
            } // class MyFunTryingToBeSmart


            private static double[][] solveA0At1(double p0[], double v0[], // constant
                                                 double v1[],  
                                                 double p1[],
                                                 double sign_t1,
                                                 boolean twoQuadraticsMode,
                                                 double A0InitialGuess[],
                                                 double At1InitialGuess[])
            {
                int nIters = 10;

                //NewtonSolver.Fun fun = new MyFunTryingToBeSmart(p0,v0,sign_t1,twoQuadraticsMode); // bombs :-(
                NewtonSolver.Fun fun = new MyFun(p0,v0,sign_t1,twoQuadraticsMode);

                // Newton solve:
                double y[] = {v1[0],v1[1],p1[0],p1[1]};
                double x[] = {A0InitialGuess[0],
                              A0InitialGuess[1],
                              At1InitialGuess[0],
                              At1InitialGuess[1]};
                int maxIterations = 1000;
                NewtonSolver.solve(x, y, fun, maxIterations);
                double A0[] = {x[0],x[1]};
                double At1[] = {x[2],x[3]};
                return new double[][] {A0,At1};
            } // solveA0At1

        /** Calculate twice the area of the given triangle projected into the given work plane. */
        private static double twiceTriangleArea(double v0[],
                                               double v1[],
                                               double v2[],
                                               int xAxis, int yAxis)
        {
            double x1 = v1[xAxis]-v0[xAxis];
            double y1 = v1[yAxis]-v0[yAxis];
            double x2 = v2[xAxis]-v0[xAxis];
            double y2 = v2[yAxis]-v0[yAxis];
            return x1*y2 - x2*y1;
        } // twiceTriangleArea



    // Trying to visualize the kinodynamic planning problem.
    // not part of the SmoothlyVaryingViewingParameter implementation yet.
    private static void interactiveDemo2()
    {
        final int eventVerbose = 0; // set to something else to debug

        java.awt.Canvas canvas = new java.awt.Canvas() {

            // Make it so we get keyboard focus on startup,
            // without having to click first.  Thanks, Melinda!
            public boolean isFocusTraversable()
            {
                return true;
            }

            class Model
            {

                public static final int PICK_A0 = 0;
                public static final int PICK_A1 = 1;
                public static final int PICK_At1 = 2;
                public static final int PICK_vt1 = 3;
                public static final int PICK_pt1 = 4;
                public static final int PICK_v0 = 5;
                public static final int PICK_velocityHandlet1 = 6;
                public static final int PICK_velocityKnee = 7;



                public double v0[] = {0,0};
                public double p0[] = {0,0};

                public double A0[] = {1.5,-1};
                public double A1[] = {1.5,1}; // will be adjusted to be unit distance away
                public double t1 = 2.5;

                public double accelerationMagnitude = 1.; // we fake this by simply scaling everything in the view except the unit circle by the inverse of this
                public boolean twoQuadraticsMode = false;

                //public double A0[] = {.25,-1.25};
                //public double A1[] = {.25,0};
                //public double t1 = 3.;

                {VecMath.lerp(A1, A0, A1, 1./VecMath.dist(A0,A1));} // make sure it's unit distance away

                public int pickClosestThing(double x, double y,
                                            boolean allowPickingFinalVelocityHandle,
                                            boolean finalVelocityHandleIsNegative)
                {
                    if (t1 == 0.)
                        return 3; // At1 freely, so user can separate it from A0
                    double vt1[] = calcVelocity(v0,A0,A1,t1,twoQuadraticsMode);
                    double pt1[] = calcPosition(p0,v0,A0,A1,t1,twoQuadraticsMode);
                    double vSwitch[] = null;
                    if (twoQuadraticsMode)
                    {
                        double switchTime = -VecMath.dot(A0,VecMath.vmv(A1,A0));
                        vSwitch = calcVelocity(v0, A0, A1, switchTime, twoQuadraticsMode);
                    }

                    double points[][] = { // must match PICK_ values above
                        this.A0,
                        this.A1,
                        VecMath.lerp(this.A0,this.A1,this.t1), // At1
                        vt1,
                        pt1,
                        this.v0,
                        allowPickingFinalVelocityHandle ? finalVelocityHandleIsNegative ? VecMath.vmv(pt1,vt1)
                                                                                        : VecMath.vpv(pt1,vt1)
                                                        : null,
                        vSwitch,
                    };

                    double distSqrds[] = new double[points.length];
                    for (int i = 0; i < points.length; ++i)
                    {
                        if (points[i] != null)
                            distSqrds[i] = (x-points[i][0])*(x-points[i][0])
                                         + (y-points[i][1])*(y-points[i][1]);
                        else
                            distSqrds[i] = Double.POSITIVE_INFINITY;
                    }

                    int bestI = -1;
                    double bestDistSqrd = Double.POSITIVE_INFINITY;
                    for (int i = 0; i < points.length; ++i)
                    {
                        double thisDistSqrd = distSqrds[i];
                        if (thisDistSqrd < bestDistSqrd)
                        {
                            bestI = i;
                            bestDistSqrd = thisDistSqrd;
                        }
                    }
                    double pickRadiusSqrd = .1*.1; // XXX hack-- should be a fixed number of pixels
                    if (bestDistSqrd > pickRadiusSqrd)
                        return -1;
                    return bestI;
                } // pickClosestThing
            }
            class View
            {
                // Really viewing params...
                boolean showAccelerationLines = false;
                boolean showVelocityHandles = false;
                boolean finalVelocityHandleIsNegative = false;
                double intensityMultiplier = 0.;
                double scale = .24;
            }
            class Controller
            {
                private double prevPoint[] = null;
                private int indexOfThingBeingDragged = -1;
                private int mostRecentThingBeingDragged = -1;
                public double target_vt1[] = null;
                public double target_pt1[] = null;
            }
            private Model model = new Model();
            private View view = new View();
            private Controller controller = new Controller();
            private com.donhatchsw.awt.MyGraphics mostRecentGraphics = null;


            // SIZE
            public java.awt.Dimension getPreferredSize()
            {
                return new java.awt.Dimension(850,850);
                //return new java.awt.Dimension(400,400);
                //return new java.awt.Dimension(200,200);
            }




            private java.awt.Image backBuffer = null;
            private java.awt.Dimension backBufferSize = null;

            public void update(java.awt.Graphics g) { paint(g); } // don't flash
            // PAINT
            public void paint(java.awt.Graphics frontBufferGraphics)
            {
                if (eventVerbose >= 2) System.out.println("    in paint");

                java.awt.Dimension size = size();
                int w = size.width, h = size.height;
                if (backBuffer == null
                 || !size.equals(backBufferSize))
                {
                    System.out.println("    creating back buffer of size "+w+"x"+h+"");
                    backBuffer = this.createImage(w, h);
                    backBufferSize = size;
                }
                java.awt.Graphics g = backBuffer.getGraphics();

                int minSize = Math.min(w,h);
                com.donhatchsw.awt.MyGraphics mg = new com.donhatchsw.awt.MyGraphics(g, size(),
                                               -1.*w/minSize/(view.scale*model.accelerationMagnitude),
                                               1.*w/minSize/(view.scale*model.accelerationMagnitude),
                                               -1.*h/minSize/(view.scale*model.accelerationMagnitude),
                                               1.*h/minSize/(view.scale*model.accelerationMagnitude));


                // Clear to black
                mg.setColor(java.awt.Color.black);
                mg.fillWindow();

                java.awt.Color lightBlue = new java.awt.Color(128, 128, 255);

                int pointSize = 7;

                double p0[] = model.p0;
                double v0[] = model.v0;
                double A0[] = model.A0;
                double A1[] = model.A1;
                double t1 = model.t1;
                double sign_t1 = t1<0. ? -1. : 1.;
                boolean twoQuadraticsMode = model.twoQuadraticsMode;

                double At1[] = VecMath.lerp(A0,A1,t1);

                double a0[] = calcAcceleration(A0,A1,0,twoQuadraticsMode);
                double a1[] = calcAcceleration(A0,A1,1,twoQuadraticsMode);
                double at1[] = calcAcceleration(A0,A1,t1,twoQuadraticsMode);

                double v1[] = calcVelocity(v0,A0,A1,1,twoQuadraticsMode);
                double p1[] = calcPosition(p0,v0,A0,A1,1,twoQuadraticsMode);
                double vt1[] = calcVelocity(v0,A0,A1,t1,twoQuadraticsMode);
                double pt1[] = calcPosition(p0,v0,A0,A1,t1,twoQuadraticsMode);

                if (false)
                {
                    PRINTVEC(A0);
                    PRINTVEC(At1);
                    PRINTVEC(vt1);
                    PRINTVEC(pt1);
                    double solvedA0At1[][] = solveA0At1(p0,v0,
                                                        vt1,pt1,
                                                        sign_t1,
                                                        twoQuadraticsMode,
                                                        VecMath.vpsxv(A0, .01, VecMath.random(2)),
                                                        VecMath.vpsxv(At1, .01, VecMath.random(2)));
                    double solvedA0[] = solvedA0At1[0];
                    double solvedAt1[] = solvedA0At1[1];
                    PRINTVEC(A0);
                    PRINTVEC(At1);
                    PRINTVEC(solvedA0);
                    PRINTVEC(solvedAt1);
                }



                // First, draw a little subsection of the grid
                // around At1, in red, and also its images
                // around vt1 and pt1.
                // These get drawn first so everything else
                // will appear on top of them, even the white circle.
                if (controller.mostRecentThingBeingDragged == Model.PICK_A0
                 || controller.mostRecentThingBeingDragged == Model.PICK_At1)
                {
                    int nGridSegs = 12;
                    double gridSegLength = .1;
                    double AGrid[][][] = new double[nGridSegs+1][nGridSegs+1][];
                    double vGrid[][][] = new double[nGridSegs+1][nGridSegs+1][];
                    double pGrid[][][] = new double[nGridSegs+1][nGridSegs+1][];
                    double intensities[][] = new double[nGridSegs+1][nGridSegs+1];

                    double gridCenter[] = (controller.mostRecentThingBeingDragged==Model.PICK_A0 ? A0 : At1);

                    double startX = gridCenter[0]-.5*nGridSegs*gridSegLength;
                    double startY = gridCenter[1]-.5*nGridSegs*gridSegLength;
                    // snap startX and startY to closest grid point
                    startX = Math.round(startX/gridSegLength)*gridSegLength;
                    startY = Math.round(startY/gridSegLength)*gridSegLength;
                    FORI (iX, nGridSegs+1)
                    FORI (iY, nGridSegs+1)
                    {
                        double A0_[], At1_[];
                        if (controller.mostRecentThingBeingDragged == Model.PICK_A0)
                        {
                            A0_ = new double[] {
                                startX + iX*gridSegLength,
                                startY + iY*gridSegLength,
                            };
                            At1_ = At1;
                        }
                        else
                        {
                            A0_ = A0;
                            At1_ = new double[] {
                                startX + iX*gridSegLength,
                                startY + iY*gridSegLength,
                            };
                        };

                        double t1_ = sign_t1*VecMath.dist(A0_, At1_);
                        double A1_[] = VecMath.lerp(A0_, At1_, 1./t1_);
                        double vt1_[] = calcVelocity(v0,A0_, A1_, t1_, twoQuadraticsMode);
                        double pt1_[] = calcPosition(p0,v0,A0_, A1_, t1_, twoQuadraticsMode);
                        AGrid[iX][iY] = (controller.mostRecentThingBeingDragged == Model.PICK_A0 ? A0_ : At1_);
                        vGrid[iX][iY] = vt1_;
                        pGrid[iX][iY] = pt1_;

                        double xIntensity = 1. - Math.abs((AGrid[iX][iY][0]-gridCenter[0])/(.5*nGridSegs*gridSegLength));
                        double yIntensity = 1. - Math.abs((AGrid[iX][iY][1]-gridCenter[1])/(.5*nGridSegs*gridSegLength));
                        if (xIntensity < 0.) xIntensity = 0.;
                        if (yIntensity < 0.) yIntensity = 0.;
                        double intensity = Math.min(xIntensity, yIntensity); // square footprint
                        //double intensity = 1.-Math.sqrt((1.-xIntensity)*(1.-xIntensity)+(1.-yIntensity)*(1.-yIntensity)); // circular footprint
                        if (intensity < 0.) intensity = 0.;

                        intensities[iX][iY] = intensity * view.intensityMultiplier;
                    }

                    if (false)
                    {
                        // Draw grid points
                        FORI (iX, nGridSegs+1)
                        FORI (iY, nGridSegs+1)
                        {
                            double At1_[] = AGrid[iX][iY];
                            double v[] = vGrid[iX][iY];
                            double p[] = pGrid[iX][iY];
                            double intensity = intensities[iX][iY];

                            // XXX hack, should probably should just window it or something.  this only seems necessary in points mode, in which it's pretty dark
                            intensity = Math.pow(intensity, .25);

                            java.awt.Color thisRed = new java.awt.Color((float)intensity, 0.f, 0.f);
                            java.awt.Color thisGreen = new java.awt.Color(0.f, (float)intensity, 0.f);
                            java.awt.Color thisBlue = new java.awt.Color((float)intensity*.5f, (float)intensity*.5f, (float)intensity);


                            mg.setColor(thisRed);
                            mg.drawPoint(At1_[0], At1_[1], 1);
                            mg.setColor(thisGreen);
                            if (!Double.isNaN(v[0]+v[1]))
                                mg.drawPoint(v[0], v[1], 1);
                            mg.setColor(thisBlue);
                            if (!Double.isNaN(p[0]+p[1]))
                                mg.drawPoint(p[0], p[1], 1);
                        }
                    }
                    else
                    {
                        // Draw horizontal grid lines
                        FORI (iX, nGridSegs)
                        FORI (iY, nGridSegs+1)
                        {
                            double At1_0[] = AGrid[iX][iY];
                            double v_0[] = vGrid[iX][iY];
                            double p_0[] = pGrid[iX][iY];
                            double At1_1[] = AGrid[iX+1][iY];
                            double v_1[] = vGrid[iX+1][iY];
                            double p_1[] = pGrid[iX+1][iY];
                            double intensity = .5*(intensities[iX][iY]
                                                 + intensities[iX+1][iY]);

                            java.awt.Color thisRed = new java.awt.Color((float)intensity, 0.f, 0.f);
                            java.awt.Color thisGreen = new java.awt.Color(0.f, (float)intensity, 0.f);
                            java.awt.Color thisBlue = new java.awt.Color((float)intensity*.5f, (float)intensity*.5f, (float)intensity);


                            mg.setColor(thisRed);
                            mg.drawLine(At1_0[0],At1_0[1],
                                        At1_1[0], At1_1[1]);
                            mg.setColor(thisGreen);
                            if (!Double.isNaN(v_0[0]+v_0[1]+v_1[0]+v_1[1]))
                                mg.drawLine(v_0[0],v_0[1],
                                            v_1[0], v_1[1]);
                            mg.setColor(thisBlue);
                            if (!Double.isNaN(p_0[0]+p_0[1]+p_1[0]+p_1[1]))
                                mg.drawLine(p_0[0],p_0[1],
                                            p_1[0], p_1[1]);
                        }
                        // Draw vertical grid lines
                        FORI (iX, nGridSegs+1)
                        FORI (iY, nGridSegs)
                        {
                            double At1_0[] = AGrid[iX][iY];
                            double v_0[] = vGrid[iX][iY];
                            double p_0[] = pGrid[iX][iY];
                            double At1_1[] = AGrid[iX][iY+1];
                            double v_1[] = vGrid[iX][iY+1];
                            double p_1[] = pGrid[iX][iY+1];
                            double intensity = .5*(intensities[iX][iY]
                                                 + intensities[iX][iY+1]);

                            java.awt.Color thisRed = new java.awt.Color((float)intensity, 0.f, 0.f);
                            java.awt.Color thisGreen = new java.awt.Color(0.f, (float)intensity, 0.f);
                            java.awt.Color thisBlue = new java.awt.Color((float)intensity*.5f, (float)intensity*.5f, (float)intensity);


                            mg.setColor(thisRed);
                            mg.drawLine(At1_0[0],At1_0[1],
                                        At1_1[0], At1_1[1]);
                            mg.setColor(thisGreen);
                            if (!Double.isNaN(v_0[0]+v_0[1]+v_1[0]+v_1[1]))
                                mg.drawLine(v_0[0],v_0[1],
                                            v_1[0], v_1[1]);
                            mg.setColor(thisBlue);
                            if (!Double.isNaN(p_0[0]+p_0[1]+p_1[0]+p_1[1]))
                                mg.drawLine(p_0[0],p_0[1],
                                            p_1[0], p_1[1]);
                        }
                    }
                } // the grid

                // Draw a white unit circle around the origin
                mg.setColor(java.awt.Color.white);
                mg.drawArc(-1./model.accelerationMagnitude,
                           -1./model.accelerationMagnitude,
                           2./model.accelerationMagnitude,
                           2./model.accelerationMagnitude,
                           0.,2*Math.PI);

                if (view.showVelocityHandles)
                {
                    mg.setColor(java.awt.Color.green);
                    double handle0[] = VecMath.vpv(p0,v0);
                    double handlet1[] = view.finalVelocityHandleIsNegative ? VecMath.vmv(pt1,vt1) : VecMath.vpv(pt1,vt1);
                    mg.drawLine(p0[0],p0[1],handle0[0],handle0[1]);
                    mg.drawLine(pt1[0],pt1[1],handlet1[0],handlet1[1]);
                    mg.drawHollowRegularPolygonPoint(handlet1[0],
                                                     handlet1[1],
                                                     3, // triangle
                                                     pointSize+1);
                }

                //
                // Next in order of increasing importance
                // are the trajectories.
                //
                {
                    int nSubdivs = 10;
                    for (int i = 0; i <= sign_t1*t1 * nSubdivs; ++i)
                    {
                        double t = sign_t1*(double)i/nSubdivs;
                        double A[] = VecMath.lerp(A0, A1, t);

                        double a[] = calcAcceleration(A0, A1, t, twoQuadraticsMode);
                        double v[] = calcVelocity(v0, A0, A1, t, twoQuadraticsMode);
                        double p[] = calcPosition(p0,v0, A0, A1, t, twoQuadraticsMode);

                        //int thisPointSize = (i>nSubdivs && i%nSubdivs==0 ? 4 : 3); // no, too busy
                        int thisPointSize = 3;
                        mg.setColor(java.awt.Color.red);
                        mg.drawPoint(A[0],A[1], thisPointSize);
                        mg.drawPoint(a[0],a[1], thisPointSize);
                        if (view.showAccelerationLines)
                            mg.drawLine(A[0],A[1],a[0],a[1]);
                        mg.setColor(java.awt.Color.green);
                        mg.drawPoint(v[0],v[1], thisPointSize);
                        mg.setColor(lightBlue);
                        mg.drawPoint(p[0],p[1], thisPointSize);
                    }
                    if (view.showAccelerationLines)
                    {
                        mg.setColor(java.awt.Color.red);
                        mg.drawLine(At1[0],At1[1],at1[0],at1[1]);
                    }
                }









                if (VecMath.equalsExactly(model.p0, model.v0))
                {
                    // Draw a cyan circle point at the origin,
                    // since both v0 (green) and p0 (blue) are there
                    mg.setColor(java.awt.Color.cyan);
                    mg.drawHollowCirclePoint(model.p0[0],model.p0[1],
                                             pointSize);
                }
                else
                {
                    mg.setColor(java.awt.Color.green);
                    mg.drawHollowCirclePoint(model.v0[0],model.v0[1],
                                             pointSize);
                    mg.setColor(java.awt.Color.blue);
                    mg.drawHollowCirclePoint(model.p0[0],model.p0[1],
                                             pointSize);
                }

                //
                // Accelerations in red
                //
                mg.setColor(java.awt.Color.red);
                mg.drawHollowCirclePoint(A0[0],
                                         A0[1],
                                         pointSize);
                mg.drawHollowCirclePoint(a0[0],
                                         a0[1],
                                         pointSize);
                mg.drawHollowRegularPolygonPoint(At1[0],
                                                 At1[1],
                                                 3, // triangle
                                                 pointSize+1);
                mg.drawHollowRegularPolygonPoint(at1[0],
                                                 at1[1],
                                                 3, // triangle
                                                 pointSize);
                mg.drawHollowPoint(A1[0],
                                   A1[1],
                                   pointSize);
                mg.drawHollowPoint(a1[0],
                                   a1[1],
                                   pointSize);
                mg.drawString("  t=0", A0[0],A0[1],-1.,0); // XXX argh, spaces are fudge because it's not working right
                if (twoQuadraticsMode)
                {
                    double switchTime = -VecMath.dot(A0,VecMath.vmv(A1,A0));
                    double Aswitch[] = VecMath.lerp(A0,A1,switchTime);
                    if (GT(switchTime, 0, 1e-3)
                     && LT(switchTime, t1, 1e-3))
                    {
                        mg.drawPoint(Aswitch[0], Aswitch[1], 5);
                        if (!EQ(switchTime, 1, 1e-3))
                            mg.drawString("  t="+Math.round(switchTime*1000.)/1000., Aswitch[0],Aswitch[1],-1.,0); // XXX argh, spaces are fudge because it's not working right
                    }
                }
                mg.drawString("  t=1", A1[0],A1[1],-1.,0); // XXX argh, spaces are fudge because it's not working right
                mg.drawString("  t="+Math.round(t1*1000.)/1000., At1[0],At1[1],-1.,0); // XXX argh, spaces are fudge because it's not working right
                mg.drawString("  a(t)", at1[0],at1[1],-1.,0); // XXX argh, spaces are fudge because it's not working right
                mg.drawString("  a(0)", a0[0],a0[1],-1.,0); // XXX argh, spaces are fudge because it's not working right
                if (!twoQuadraticsMode)
                    mg.drawString("  a(1)", a1[0],a1[1],-1.,0); // XXX argh, spaces are fudge because it's not working right

                //
                // Velocities in green
                //
                mg.setColor(java.awt.Color.green);
                mg.drawHollowPoint(v1[0],
                                   v1[1],
                                   pointSize);
                mg.drawHollowRegularPolygonPoint(vt1[0],
                                                 vt1[1],
                                                 3, // triangle
                                                 pointSize+1);
                mg.drawString("  v(t)", vt1[0],vt1[1],-1.,0); // XXX argh, spaces are fudge because it's not working right
                mg.drawString(VecMath.normsqrd(model.v0)==0. ? "v(0)=0 " : "v(0) ", model.v0[0],model.v0[1],1,1.5); // XXX argh, spaces are fudge because it's not working right
                if (twoQuadraticsMode)
                {
                    double switchTime = -VecMath.dot(A0,VecMath.vmv(A1,A0));
                    double vSwitch[] = calcVelocity(v0, A0, A1, switchTime, twoQuadraticsMode);
                    mg.drawPoint(vSwitch[0], vSwitch[1], 5);
                }

                //
                // Positions in blue
                //
                mg.setColor(lightBlue);
                mg.drawHollowPoint(p1[0],
                                   p1[1],
                                   pointSize);
                mg.drawHollowRegularPolygonPoint(pt1[0],
                                                 pt1[1],
                                                 3, // triangle
                                                 pointSize+1);
                mg.drawString("  p(t)", pt1[0],pt1[1],-1.,0); // XXX argh, spaces are fudge because it's not working right
                mg.drawString(VecMath.normsqrd(model.p0)==0. ? "p(0)=0 " : "p(0) ", model.p0[0],model.p0[1],1,-1.5); // XXX argh, spaces are fudge because it's not working right
                if (twoQuadraticsMode)
                {
                    double switchTime = -VecMath.dot(A0,VecMath.vmv(A1,A0));
                    double pSwitch[] = calcPosition(p0,v0, A0, A1, switchTime, twoQuadraticsMode);
                    mg.drawPoint(pSwitch[0], pSwitch[1], 5);
                }







                {
                    // Labels, from bottom to top
                    int y = h;
                    g.setColor(java.awt.Color.white);
                    g.drawString("q to toggle two-quadratics mode (non-optimal but simpler to calculate)", 20,y-=20);
                    g.drawString("v to toggle velocity handles", 20,y-=20);
                    g.drawString("a to toggle acceleration segments", 20,y-=20);
                    g.drawString("r to reset", 20, y -= 20);
                    g.drawString("-/+/= to zoom out/in", 20, y -= 20);

                    g.setColor(lightBlue);
                    g.drawString("Position", 20, y -= 20);

                    g.setColor(java.awt.Color.green);
                    g.drawString("Velocity", 20, y -= 20);

                    g.setColor(java.awt.Color.red);
                    g.drawString("Acceleration (drag the triangle, square, and circle around)", 20, y -= 20);
                }




                frontBufferGraphics.drawImage(backBuffer, 0, 0, this);
                           
                mostRecentGraphics = mg;

                if (eventVerbose >= 2) System.out.println("    out paint");
            } // paint
            {
                addKeyListener(new java.awt.event.KeyAdapter() {
                    public void keyPressed(java.awt.event.KeyEvent e)
                    {
                        boolean controlIsDown = ((e.getModifiers() & java.awt.event.InputEvent.CTRL_MASK) != 0);
                        char c = e.getKeyChar();
                        if (eventVerbose >= 1) System.out.println("    in keyPressed, keyEvent = "+e+" keyChar = (char)"+(int)c+"");
                        if (c == java.awt.event.KeyEvent.CHAR_UNDEFINED)
                        {
                            // This is the case for control keys
                        }
                        else if (c == java.awt.event.KeyEvent.VK_ESCAPE)
                        {
                            System.out.println("ciao!");
                            System.exit(0); // asinine way of doing things
                        }
                        else if (c == 'r' || c == 'R')
                        {
                            model = new Model();
                            view = new View();
                            controller = new Controller();
                            repaint();
                        }
                        else if (c == 'a' || c == 'A')
                        {
                            view.showAccelerationLines ^= true;
                            repaint();
                        }
                        else if (c == 'v' || c == 'V')
                        {
                            view.showVelocityHandles ^= true;
                            repaint();
                        }
                        #define CTRL(lowerCaseLetter) ((lowerCaseLetter)-'a'+1)
                        else if (c == CTRL('v'))
                        {
                            view.finalVelocityHandleIsNegative ^= true;
                            repaint();
                        }
                        else if (c == '-' || c == '+' || c == '=')
                        {
                            double multiplier = c=='-' ? Math.sqrt(.5) : Math.sqrt(2.);
                            if (controlIsDown)
                            {
                                model.accelerationMagnitude *= multiplier;
                                PRINT(model.accelerationMagnitude);

                                // Adjust everything else so no pop
                                // at p0,v0,p1,v1

                                double vt1[] = calcVelocity(model.v0,model.A0,model.A1,model.t1,model.twoQuadraticsMode);
                                double pt1[] = calcPosition(model.p0,model.v0,model.A0,model.A1,model.t1,model.twoQuadraticsMode);

                                VecMath.vxs(model.v0, model.v0, 1./multiplier);
                                VecMath.vxs(model.p0, model.p0, 1./multiplier);
                                VecMath.vxs(vt1, vt1, 1./multiplier);
                                VecMath.vxs(pt1, pt1, 1./multiplier);
                                model.t1 /= multiplier;
                                if (controller.target_vt1 != null)
                                    VecMath.vxs(controller.target_vt1, controller.target_vt1, 1./multiplier);
                                if (controller.target_pt1 != null)
                                    VecMath.vxs(controller.target_pt1, controller.target_pt1, 1./multiplier);

                                // XXX I think this is common code, maybe make a utility function for it
                                // solve for A0,At1
                                double At1[] = VecMath.lerp(model.A0, model.A1, model.t1);
                                double sign_t1 = model.t1<0. ? -1. : 1.;
                                double solvedA0At1[][] = solveA0At1(
                                         model.p0,model.v0,
                                         vt1,pt1,
                                         sign_t1,
                                         model.twoQuadraticsMode,
                                         model.A0, At1); // initial guess
                                model.A0 = solvedA0At1[0];
                                At1 = solvedA0At1[1];
                                model.t1 = sign_t1*VecMath.dist(model.A0,At1);
                                model.A1 = VecMath.lerp(model.A0,At1,1./model.t1);
                            }
                            else
                                view.scale *= multiplier;
                            repaint();
                        }
                        else if (c == 't')
                        {
                            // toggle between t1 positive and negative,
                            // adjusting everything so no pop

                            model.t1 *= -1.;
                            VecMath.vxs(model.v0, model.v0, -1.);
                            if (controller.target_vt1 != null)
                                VecMath.vxs(controller.target_vt1, controller.target_vt1, -1.);
                            VecMath.sxvpsxv(model.A1,
                                            -1., model.A1,
                                            2., model.A0);
                            repaint();
                        }
                        else if (c == 'q' || c == 'Q')
                        {
                            //
                            // Toggle twoQuadraticsMode,
                            // attempting to keep vt1,pt1 constant
                            //

                            // take a snapshot of vt1,pt1
                            double vt1[] = calcVelocity(model.v0,model.A0,model.A1,model.t1,model.twoQuadraticsMode);
                            double pt1[] = calcPosition(model.p0,model.v0,model.A0,model.A1,model.t1,model.twoQuadraticsMode);

                            model.twoQuadraticsMode ^= true;
                            PRINT(model.twoQuadraticsMode);

                            // solve for A0,At1
                            double At1[] = VecMath.lerp(model.A0, model.A1, model.t1);
                            double sign_t1 = model.t1<0. ? -1. : 1.;
                            double solvedA0At1[][] = solveA0At1(
                                     model.p0,model.v0,
                                     vt1,pt1,
                                     sign_t1,
                                     model.twoQuadraticsMode,
                                     model.A0, At1); // initial guess
                            model.A0 = solvedA0At1[0];
                            At1 = solvedA0At1[1];
                            model.t1 = sign_t1*VecMath.dist(model.A0,At1);
                            model.A1 = VecMath.lerp(model.A0,At1,1./model.t1);

                            repaint();
                        }
                        else
                        {
                            System.out.println("Huh?");
                        }
                    }
                });
                addMouseListener(new java.awt.event.MouseListener() {
                    public void mouseClicked(java.awt.event.MouseEvent e)
                    {
                        if (eventVerbose >= 1) System.out.println("    in mouseClicked at "+e.getX()+","+e.getY()+"");
                        if (eventVerbose >= 1) System.out.println("    out mouseClicked");
                    }
                    public void mousePressed(java.awt.event.MouseEvent e)
                    {
                        if (eventVerbose >= 1) System.out.println("    in mousePressed at "+e.getX()+","+e.getY()+"");

                        double thisPoint[] = new double[2];
                        mostRecentGraphics.pick(e.getX(), e.getY(), thisPoint);
                        controller.indexOfThingBeingDragged = model.pickClosestThing(thisPoint[0], thisPoint[1], view.showVelocityHandles, view.finalVelocityHandleIsNegative);
                        if (eventVerbose >= 1) PRINT(controller.indexOfThingBeingDragged);

                        controller.mostRecentThingBeingDragged = controller.indexOfThingBeingDragged;
                        view.intensityMultiplier = 1.;
                        if (controller.indexOfThingBeingDragged == Model.PICK_vt1
                         || controller.indexOfThingBeingDragged == Model.PICK_pt1
                         || controller.indexOfThingBeingDragged == Model.PICK_velocityHandlet1
                         || controller.indexOfThingBeingDragged == Model.PICK_velocityKnee)

                        {
                            controller.target_vt1 = calcVelocity(model.v0,model.A0,model.A1,model.t1,model.twoQuadraticsMode);
                            controller.target_pt1 = calcPosition(model.p0,model.v0,model.A0,model.A1,model.t1,model.twoQuadraticsMode);
                        }
                        else if (controller.indexOfThingBeingDragged != Model.PICK_v0) // with v0, still use targets... until they drag one of the A's instead
                        {
                            controller.target_vt1 = null;
                            controller.target_pt1 = null;
                        }
                        repaint();

                        controller.prevPoint = thisPoint;
                        if (eventVerbose >= 1) System.out.println("    out mousePressed");
                    }
                    public void mouseReleased(java.awt.event.MouseEvent e)
                    {
                        if (eventVerbose >= 1) System.out.println("    in mouseReleased at "+e.getX()+","+e.getY()+"");

                        if (eventVerbose >= 1) System.out.println("    out mouseReleased");
                    }
                    public void mouseEntered(java.awt.event.MouseEvent e)
                    {
                        if (eventVerbose >= 1) System.out.println("    in mouseEntered at "+e.getX()+","+e.getY()+"");
                        if (eventVerbose >= 1) System.out.println("    out mouseEntered");
                    }
                    public void mouseExited(java.awt.event.MouseEvent e)
                    {
                        if (eventVerbose >= 1) System.out.println("    in mouseExited at "+e.getX()+","+e.getY()+"");
                        if (controller.mostRecentThingBeingDragged != -1)
                        {
                            // Prevent jarring sudden appearance
                            // of the grid on re-entry, by turning
                            // it off til someone clicks
                            controller.mostRecentThingBeingDragged = -1;
                            repaint();
                        }
                        if (eventVerbose >= 1) System.out.println("    out mouseExited");
                    }
                });
                addMouseMotionListener(new java.awt.event.MouseMotionListener() {
                    public void mouseMoved(java.awt.event.MouseEvent e)
                    {
                        if (eventVerbose >= 3) System.out.println("    in mouseMoved to "+e.getX()+","+e.getY()+"");
                        if (mostRecentGraphics != null)
                        {
                            double thisPoint[] = new double[2];
                            mostRecentGraphics.pick(e.getX(), e.getY(), thisPoint);
                            if (controller.mostRecentThingBeingDragged == Model.PICK_A0
                             || controller.mostRecentThingBeingDragged == Model.PICK_At1)
                            {
                                double At1[] = VecMath.lerp(model.A0,model.A1,model.t1);
                                double frac = VecMath.dot(VecMath.vmv(thisPoint,model.A0),VecMath.vmv(At1,model.A0)) / VecMath.normsqrd(VecMath.vmv(At1,model.A0));
                                //PRINT(frac);
                                if (frac >= .5)
                                {
                                    controller.mostRecentThingBeingDragged = Model.PICK_At1;
                                    view.intensityMultiplier = CLAMP((frac-.5)/(.75-.5), 0, 1);
                                }
                                else
                                {
                                    controller.mostRecentThingBeingDragged = Model.PICK_A0;
                                    view.intensityMultiplier = CLAMP((frac-.5)/(.25-.5), 0, 1);
                                }

                                repaint();
                            }

                            controller.prevPoint = thisPoint;
                        }
                        if (eventVerbose >= 3) System.out.println("    out mouseMoved");
                    }
                    public void mouseDragged(java.awt.event.MouseEvent e)
                    {
                        if (eventVerbose >= 1) System.out.println("    in mouseDragged to "+e.getX()+","+e.getY()+"");
                        double thisPoint[] = new double[2];
                        mostRecentGraphics.pick(e.getX(), e.getY(), thisPoint);

                        boolean controlIsDown = ((e.getModifiers() & java.awt.event.InputEvent.CTRL_MASK) != 0);
                        double delta[] = VecMath.vmv(thisPoint, controller.prevPoint);
                        if (controller.indexOfThingBeingDragged == Model.PICK_A0)
                        {
                            // dragging A0 drags just A0,
                            // leaving At1 alone (unless control is down).
                            double At1[] = VecMath.lerp(model.A0,model.A1,model.t1);
                            if (controlIsDown)
                            {
                                // drag the whole red line
                                VecMath.vpv(model.A0,model.A0, delta);
                                VecMath.vpv(model.A1,model.A1, delta);
                            }
                            else
                            {
                                // drag A0 alone
                                VecMath.vpv(model.A0,model.A0, delta);
                                double sign_t1 = model.t1<0. ? -1. : 1.;
                                model.t1 = sign_t1*VecMath.dist(model.A0, At1);
                                model.A1 = VecMath.lerp(model.A0, At1, 1./model.t1);
                            }
                        }
                        else if (controller.indexOfThingBeingDragged == Model.PICK_A1)
                        {
                            // dragging A1 spins the line around A0,
                            // and recalculate At1.
                            double thisTheta = Math.atan2(thisPoint[1]-model.A0[1],
                                                          thisPoint[0]-model.A0[0]);
                            double prevTheta = Math.atan2(controller.prevPoint[1]-model.A0[1],
                                                          controller.prevPoint[0]-model.A0[0]);
                            double thetaDelta = thisTheta - prevTheta;
                            double oldTheta = Math.atan2(model.A1[1]-model.A0[1],
                                                         model.A1[0]-model.A0[0]);
                            double newTheta = oldTheta + thetaDelta;
                            model.A1[0] = model.A0[0] + Math.cos(newTheta);
                            model.A1[1] = model.A0[1] + Math.sin(newTheta);
                        }
                        // Only restrict At1 to line if control is down
                        else if (controller.indexOfThingBeingDragged == Model.PICK_At1)
                        {
                            if (controlIsDown)
                            {
                                // dragging At1 just moves At1 in the line dir.
                                model.t1 += VecMath.dot(delta, VecMath.vmv(model.A1, model.A0));
                            }
                            else
                            {
                                // allow At1 to move freely,
                                // then recalculate t1 and A1
                                double At1[] = VecMath.lerp(model.A0, model.A1, model.t1);
                                VecMath.vpv(At1, At1, delta);
                                double sign_t1 = model.t1<0. ? -1. : 1.;
                                model.t1 = sign_t1*VecMath.dist(model.A0, At1); 
                                if (model.t1 != 0.)
                                    VecMath.lerp(model.A1, model.A0, At1, 1./model.t1);
                            }
                        }
                        else if (controller.indexOfThingBeingDragged == Model.PICK_vt1)
                            VecMath.vpv(controller.target_vt1, controller.target_vt1, delta); // and will fix up below
                        else if (controller.indexOfThingBeingDragged == Model.PICK_pt1)
                            VecMath.vpv(controller.target_pt1, controller.target_pt1, delta); // and will fix up below
                        else if (controller.indexOfThingBeingDragged == Model.PICK_velocityHandlet1)
                        {
                            // just another way of dragging target_vt1...
                            // by the opposite of delta
                            if (view.finalVelocityHandleIsNegative)
                                VecMath.vmv(controller.target_vt1, controller.target_vt1, delta);
                            else
                                VecMath.vpv(controller.target_vt1, controller.target_vt1, delta);
                        }
                        else if (controller.indexOfThingBeingDragged == Model.PICK_v0)
                        {
                            VecMath.vpv(model.v0, model.v0, delta); // and will fix up below if targets are set
                            if (VecMath.normsqrd(model.v0) <= 1e-6*1e-6)
                                VecMath.zerovec(model.v0);
                        }
                        else if (controller.indexOfThingBeingDragged == Model.PICK_velocityKnee)
                        {
                            // Figure out how to change pt1
                            // to accomplish the desired velocity knee dragging.

                            double A0[] = model.A0;
                            double A1[] = model.A1;
                            double v0[] = model.v0;
                            double vt1[] = controller.target_vt1;
                            double switchTime = -VecMath.dot(A0,VecMath.vmv(A1,A0));
                            double[] oldKnee = calcVelocity(v0, A0, A1, switchTime, model.twoQuadraticsMode);
                            double[] newKnee = VecMath.vpv(oldKnee, delta);
                            double[] newPt1 = VecMath.sxvpsxv(
                                VecMath.dist(v0,newKnee), VecMath.lerp(v0,newKnee,.5),
                                VecMath.dist(newKnee,vt1), VecMath.lerp(newKnee,vt1,.5));
                            controller.target_pt1 = newPt1;
                            if (VecMath.dot(VecMath.vmv(oldKnee,v0),
                                            VecMath.vmv(vt1,v0)) > 0
                             && VecMath.dot(VecMath.vmv(oldKnee,vt1),
                                            VecMath.vmv(v0,vt1)) > 0
                             && VecMath.dot(VecMath.vmv(newKnee,v0),
                                            VecMath.vmv(vt1,v0)) > 0
                             && VecMath.dot(VecMath.vmv(newKnee,vt1),
                                            VecMath.vmv(v0,vt1)) > 0
                             && twiceTriangleArea(v0,vt1,oldKnee,0,1)
                              * twiceTriangleArea(v0,vt1,newKnee,0,1) < 0)
                            {
                                // pretty much guaranteed to fail when
                                // the knee is dragged across the segment
                                // between v0 and vt1,
                                // so try to rig it so it succeeds in that case
                                double At1[] = VecMath.lerp(A0,A1,model.t1);
                                model.A1 = VecMath.vpvmv(At1, A0, A1);
                                model.A0 = At1;
                                PRINT("YEAH!");
                            }
                        }
                        else
                        {
                            assert(controller.indexOfThingBeingDragged == -1);
                            // XXX drag the universe around?
                        }
                        if (controller.target_vt1 != null && controller.target_pt1 != null)
                        {
                            // attempt to drag vt1 or pt1
                            double p0[] = model.p0;
                            double v0[] = model.v0;
                            double A0[] = model.A0;
                            double A1[] = model.A1;
                            double t1 = model.t1;
                            double sign_t1 = t1<0. ? -1. : 1.;
                            boolean twoQuadraticsMode = model.twoQuadraticsMode;
                            double At1[] = VecMath.lerp(A0,A1,t1);
                            double vt1[] = calcVelocity(v0, A0,A1,t1, twoQuadraticsMode);
                            double pt1[] = calcPosition(p0,v0, A0,A1,t1, twoQuadraticsMode);

                            double solvedA0At1[][] = solveA0At1(
                                     p0,v0,
                                     controller.target_vt1, controller.target_pt1,
                                     sign_t1,
                                     twoQuadraticsMode,
                                     A0, At1); // initial guess

                            if (false)
                            {
                                System.out.println("Before solve:");
                                PRINTVEC(A0);
                                PRINTVEC(At1);
                            }

                            A0 = solvedA0At1[0];
                            At1 = solvedA0At1[1];

                            if (false)
                            {
                                System.out.println("After solve:");
                                PRINTVEC(A0);
                                PRINTVEC(At1);
                            }

                            t1 = sign_t1*VecMath.dist(A0,At1);
                            A1 = VecMath.lerp(A0,At1,1./t1);
                            model.A0 = A0;
                            model.A1 = A1;
                            model.t1 = t1;
                        }
                        repaint();

                        controller.prevPoint = thisPoint;
                        if (eventVerbose >= 1) System.out.println("    out mouseDragged");
                    }
                });
            }
        }; // canvas
        canvas.requestFocus(); // seems to be needed initially XXX see whether this is true

        final java.awt.Frame frame = new java.awt.Frame("Optimal (I think) Trajectories");
        frame.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent we)
            {
                frame.dispose();
                System.out.println("ciao!");
                System.exit(0); // asinine way of doing things
            }
        });
        frame.setForeground(java.awt.Color.white);
        frame.setBackground(java.awt.Color.black);
        frame.add(canvas);
        frame.pack();
        frame.show();
    } // interactiveDemo2

    private static void interactiveDemo1()
    {
        final int eventVerbose = 0; // set to something else to debug

        java.awt.Canvas canvas = new java.awt.Canvas() {

            class Model
            {
                double referenceTripDistance = .5;
                double referenceTripTime = .5;
                //double unclampedBounce = .5;
                double unclampedBounce = 0.;
                //double segmentEndPoints[][] = {{-.6,.4},{-.5,.5}};
                //double segmentEndPoints[][] = {{-.6,.5},{-.5,.5}};
                double segmentEndPoints[][] = {{-.6,.0},{-.5,.0}};

                // 0: segment endpoint 0
                // 1: segment endpoint 1
                // 2: ref trip end
                // 3: bounce point
                int pickClosestThing(double x, double y)
                {
                    double points[][] = {
                        segmentEndPoints[0],
                        segmentEndPoints[1],
                        {-1+referenceTripTime,
                         -1+referenceTripDistance},
                        {-1+referenceTripTime*(1+Math.sqrt(Math.max(unclampedBounce,0))),
                         -1+referenceTripDistance*(1-Math.max(unclampedBounce,0))},
                    };
                    int bestI = -1;
                    double bestDistSqrd = Double.POSITIVE_INFINITY;
                    for (int i = 0; i < points.length; ++i)
                    {
                        double thisDistSqrd = (x-points[i][0])*(x-points[i][0])
                                            + (y-points[i][1])*(y-points[i][1]);
                        if (thisDistSqrd < bestDistSqrd)
                        {
                            bestI = i;
                            bestDistSqrd = thisDistSqrd;
                        }
                        // Special case-- if bounce is 0,
                        // then ref trip end and bounce point are the same...
                        // in this case prefer the bounce point
                        // iff pick point is to the right.
                        if (thisDistSqrd == bestDistSqrd
                         && bestI == 2
                         && i == 3
                         && x > points[i][0])
                        {
                            bestI = i;
                            bestDistSqrd = thisDistSqrd;
                        }
                    }
                    return bestI;
                } // pickClosestThing
            }
            Model model = new Model();
            com.donhatchsw.awt.MyGraphics mostRecentGraphics = null;
            double prevPoint[] = null;
            int indexOfThingBeingDragged = -1;

            // SIZE
            public java.awt.Dimension getPreferredSize()
            {
                //return new java.awt.Dimension(800,800);
                return new java.awt.Dimension(200,200);
            }

            private java.awt.Image backBuffer = null;
            private java.awt.Dimension backBufferSize = null;

            public void update(java.awt.Graphics g) { paint(g); } // don't flash
            // PAINT
            public void paint(java.awt.Graphics frontBufferGraphics)
            {
                if (eventVerbose >= 2) System.out.println("    in paint");

                java.awt.Dimension size = size();
                int w = size.width, h = size.height;
                if (backBuffer == null
                 || !size.equals(backBufferSize))
                {
                    System.out.println("    creating back buffer of size "+w+"x"+h+"");
                    backBuffer = this.createImage(w, h);
                    backBufferSize = size;
                }
                java.awt.Graphics g = backBuffer.getGraphics();

                com.donhatchsw.awt.MyGraphics mg = new com.donhatchsw.awt.MyGraphics(g, size(),
                                               -1.,1.,-1.,1.);

                // Clear to black
                mg.setColor(java.awt.Color.black);
                mg.fillWindow();

                // Draw the reference trip endpoints
                mg.setColor(java.awt.Color.red);
                mg.drawString("Ref trip", -1+model.referenceTripTime,
                                          -1+model.referenceTripDistance,
                                          -1.1, 1.1); // bleah, give it a tiny bit of space
                mg.drawPoint(-1+model.referenceTripTime,
                             -1+model.referenceTripDistance,
                             3);
                double bounce = Math.max(model.unclampedBounce, 0);
                // And where we think the first bounce will be
                mg.drawPoint(-1+model.referenceTripTime*(1+Math.sqrt(bounce)),
                             -1+model.referenceTripDistance*(1-bounce),
                             3);
                // And the second one
                if (false) // nah, can't drag it so it's confusing
                    mg.drawPoint(-1+model.referenceTripTime*(1+Math.sqrt(bounce+bounce)),
                                 -1+model.referenceTripDistance*(1-bounce+bounce*bounce),
                                 3);

                // Draw the reference trip
                {
                    SmoothlyVaryingViewingParameter param = new SmoothlyVaryingViewingParameter(-1.);
                    // Concoct a target so that the first upward piece
                    // goes to exactly referenceTripDistance.
                    // So it should be -1 + refTripDistance * 
                    //                  (1 - b + b^2 - ...)
                    param.set(-1. + model.referenceTripDistance / (1.+bounce));

                    double dt = 1/1000.;
                    double t = -1.;
                    FORI (i, 2000+1)
                    {
                        param.evolve(model.referenceTripDistance,
                                     model.referenceTripTime,
                                     dt,
                                     bounce);
                        t += dt;
                        mg.drawPoint(t, param.get(), 1);
                    }
                }

                if (true)
                {
                    double x0 = model.segmentEndPoints[0][0];
                    double y0 = model.segmentEndPoints[0][1];
                    double x1 = model.segmentEndPoints[1][0];
                    double y1 = model.segmentEndPoints[1][1];

                    if (x0 > x1)
                    {
                        double temp;
                        SWAP(x0,x1,temp);
                        SWAP(y0,y1,temp);
                    }

                    // Draw the segment endpoints
                    mg.setColor(java.awt.Color.getHSBColor(.75f, 1.f, 1.f));
                    mg.drawPoint(x0,y0, 5);
                    mg.drawPoint(x1,y1, 5);
                    // Draw the segment
                    FORI (i, 1000+1)
                    {
                        double t = i/1000.;
                        mg.drawPoint(lerp(x0,x1,t),
                                     lerp(y0,y1,t),
                                     1);
                    }
                    // Draw the forward trip
                    if (x1 != x0)
                    {
                        assert(x1 > x0);
                        double v = (y1-y0)/(x1-x0);
                        SmoothlyVaryingViewingParameter param = new SmoothlyVaryingViewingParameter(y1);
                        param.set(0.); // target
                        param.setVelocity(v);
                        double t = x1;
                        double dt = 1/1000.;
                        FORI (i, 2000+1)
                        {
                            param.evolve(model.referenceTripDistance,
                                         model.referenceTripTime,
                                         dt,
                                         bounce);
                            t += dt;
                            mg.drawPoint(t, param.get(), 1);
                        }
                    }
                    // Draw the backward trip
                    if (x1 != x0)
                    {
                        assert(x1 > x0);
                        double v = -(y1-y0)/(x1-x0);
                        SmoothlyVaryingViewingParameter param = new SmoothlyVaryingViewingParameter(y0);
                        param.set(0.); // target
                        param.setVelocity(v);
                        double t = x0;
                        double dt = 1/1000.;
                        FORI (i, 2000+1)
                        {
                            param.evolve(model.referenceTripDistance,
                                         model.referenceTripTime,
                                         dt,
                                         bounce);
                            t -= dt;
                            mg.drawPoint(t, param.get(), 1);
                        }
                    }
                }

                frontBufferGraphics.drawImage(backBuffer, 0, 0, this);

                mostRecentGraphics = mg;

                if (eventVerbose >= 2) System.out.println("    out paint");
            }
            {
                addMouseListener(new java.awt.event.MouseListener() {
                    public void mouseClicked(java.awt.event.MouseEvent e)
                    {
                        if (eventVerbose >= 1) System.out.println("    in mouseClicked at "+e.getX()+","+e.getY()+"");
                        if (eventVerbose >= 1) System.out.println("    out mouseClicked");
                    }
                    public void mousePressed(java.awt.event.MouseEvent e)
                    {
                        if (eventVerbose >= 1) System.out.println("    in mousePressed at "+e.getX()+","+e.getY()+"");

                        double thisPoint[] = new double[2];
                        mostRecentGraphics.pick(e.getX(), e.getY(), thisPoint);
                        indexOfThingBeingDragged = model.pickClosestThing(thisPoint[0], thisPoint[1]);
                        if (eventVerbose >= 1) PRINT(indexOfThingBeingDragged);

                        prevPoint = thisPoint;
                        if (eventVerbose >= 1) System.out.println("    out mousePressed");
                    }
                    public void mouseReleased(java.awt.event.MouseEvent e)
                    {
                        if (eventVerbose >= 1) System.out.println("    in mouseReleased at "+e.getX()+","+e.getY()+"");

                        // no longer dragging-- make it be where it looks like it is
                        model.unclampedBounce = Math.max(model.unclampedBounce, 0);

                        if (eventVerbose >= 1) System.out.println("    out mouseReleased");
                    }
                    public void mouseEntered(java.awt.event.MouseEvent e)
                    {
                        if (eventVerbose >= 1) System.out.println("    in mouseEntered at "+e.getX()+","+e.getY()+"");
                        if (eventVerbose >= 1) System.out.println("    out mouseEntered");
                    }
                    public void mouseExited(java.awt.event.MouseEvent e)
                    {
                        if (eventVerbose >= 1) System.out.println("    in mouseExited at "+e.getX()+","+e.getY()+"");
                        if (eventVerbose >= 1) System.out.println("    out mouseExited");
                    }
                });
                addMouseMotionListener(new java.awt.event.MouseMotionListener() {
                    public void mouseMoved(java.awt.event.MouseEvent e)
                    {
                        if (eventVerbose >= 3) System.out.println("    in mouseMoved to "+e.getX()+","+e.getY()+"");
                        double thisPoint[] = new double[2];
                        mostRecentGraphics.pick(e.getX(), e.getY(), thisPoint);
                        prevPoint = thisPoint;
                        if (eventVerbose >= 3) System.out.println("    out mouseMoved");
                    }
                    public void mouseDragged(java.awt.event.MouseEvent e)
                    {
                        if (eventVerbose >= 1) System.out.println("    in mouseDragged to "+e.getX()+","+e.getY()+"");
                        double thisPoint[] = new double[2];
                        mostRecentGraphics.pick(e.getX(), e.getY(), thisPoint);

                        double delta[] = VecMath.vmv(thisPoint, prevPoint);
                        if (indexOfThingBeingDragged == 0)
                            VecMath.vpv(model.segmentEndPoints[0], model.segmentEndPoints[0], delta);
                        else if (indexOfThingBeingDragged == 1)
                            VecMath.vpv(model.segmentEndPoints[1], model.segmentEndPoints[1], delta);
                        else if (indexOfThingBeingDragged == 2)
                        {
                            model.referenceTripTime += delta[0];
                            model.referenceTripDistance += delta[1];
                        }
                        else if (indexOfThingBeingDragged == 3)
                        {
                            double bouncePoint = -1+model.referenceTripDistance*(1-model.unclampedBounce);
                            bouncePoint += delta[1];
                            model.unclampedBounce = 1 - (bouncePoint - -1)/model.referenceTripDistance;
                        }
                        repaint();

                        prevPoint = thisPoint;
                        if (eventVerbose >= 1) System.out.println("    out mouseDragged");
                    }
                });
            }
        }; // new Canvas

        final java.awt.Frame frame = new java.awt.Frame("Smoothly Varying Viewing Parameters");
        frame.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent we)
            {
                frame.dispose();
                System.out.println("ciao!");
                System.exit(0); // asinine way of doing things
            }
        });
        frame.setForeground(java.awt.Color.white);
        frame.setBackground(java.awt.Color.black);
        frame.add(canvas);
        frame.pack();
        frame.show();
    } // interactiveDemo1

        public static void HSVtoRGB(float h, float s, float v, float rgb[/*3*/])
        {
            while (h < 0)
                h++;
            while (h >= 1)
                h--;

            int segment = (int)(h*6);

            float frac = (6*h)-segment;
            if (segment % 2 == 1)
                frac = 1 - frac;

            float major = v;
            float minor = (1-s)*v;
            float middle = frac * major + (1-frac) * minor;

            rgb[(segment+1)/2 % 3] = major;
            rgb[(segment+4)/2 % 3] = minor;
            rgb[(7-segment) % 3] = middle;
        } // HSVtoRGB


    // Several 2d SmoothlyVaryingViewingParameters
    // that follow the mouse cursor around at different speeds
    private static void interactiveDemo3()
    {
        final int eventVerbose = 1; // set to something else to debug

        java.awt.Canvas canvas = new java.awt.Canvas() {

            // Make it so we get keyboard focus on startup,
            // without having to click first.  Thanks, Melinda!
            public boolean isFocusTraversable()
            {
                return true;
            }

            class Model
            {
                public SmoothlyVaryingViewingParameter points[];
                public double referenceTripDistancesInPixels[];
                public double referenceTripTimesInRepaints[];
                public java.awt.Color colors[];
                public double bounce = .53; // zeroing in on threshold of whether it does or doesn't settle
                public Model()
                {
                    int n = 10;
                    points = new SmoothlyVaryingViewingParameter[n];
                    referenceTripDistancesInPixels = new double[n];
                    referenceTripTimesInRepaints = new double[n];
                    colors = new java.awt.Color[n];
                    FORI (i, n)
                    {
                        points[i] = new SmoothlyVaryingViewingParameter(new double[]{0,0});

                        // Uniformly spaced in log space, between 1 and 100.
                        double frac = i/(n-1.);
                        referenceTripDistancesInPixels[i] = Math.pow(1., 1-frac) * Math.pow(100., frac);
                        referenceTripTimesInRepaints[i] = 1.;

                        float hue = i/(n-1.f);
                        float sat = .4f;
                        float val = 1.f;
                        float rgb[] = new float[3];
                        HSVtoRGB(hue,sat,val,rgb);
                        colors[i] = new java.awt.Color(rgb[0],rgb[1],rgb[2]);
                    }
                } // class Model
            }
            class View
            {
                // Really viewing params...
                boolean showAccelerations = false;
                boolean showVelocities = false;
            }
            class Controller
            {
            }
            private Model model = new Model();
            private View view = new View();
            private Controller controller = new Controller();
            private com.donhatchsw.awt.MyGraphics mostRecentGraphics = null;


            // SIZE
            public java.awt.Dimension getPreferredSize()
            {
                //return new java.awt.Dimension(850,850);
                return new java.awt.Dimension(400,400);
                //return new java.awt.Dimension(200,200);
            }




            private java.awt.Image backBuffer = null;
            private java.awt.Dimension backBufferSize = null;

            public void update(java.awt.Graphics g) { paint(g); } // don't flash
            // PAINT
            public void paint(java.awt.Graphics frontBufferGraphics)
            {
                if (eventVerbose >= 2) System.out.println("    in paint");

                java.awt.Dimension size = size();
                int w = size.width, h = size.height;
                if (backBuffer == null
                 || !size.equals(backBufferSize))
                {
                    System.out.println("    creating back buffer of size "+w+"x"+h+"");
                    backBuffer = this.createImage(w, h);
                    backBufferSize = size;
                    FORI (i, model.points.length)
                        model.points[i].set(new double[]{w*.5, h*.5});
                }
                java.awt.Graphics g = backBuffer.getGraphics();
                if (false)
                    g = frontBufferGraphics; // make it single buffered

                int minSize = Math.min(w,h);
                com.donhatchsw.awt.MyGraphics mg = new com.donhatchsw.awt.MyGraphics(g, size(),
                                               0,w,
                                               0,h);


                // Clear to black
                if (g != frontBufferGraphics) // if not single buffered
                {
                    mg.setColor(java.awt.Color.black);
                    mg.fillWindow();
                }


                //
                // Evolve.
                //
                int n = model.points.length;
                FORI (i, n)
                {
                    //PRINTSUB(model.referenceTripDistancesInPixels,i);
                    //PRINTSUB(model.referenceTripTimesInRepaints,i);
                    model.points[i].evolve(model.referenceTripDistancesInPixels[i]/10000.,
                                           model.referenceTripTimesInRepaints[i],
                                           1., // dt, in repaints
                                           model.bounce);
                }

                //
                // Draw.
                //
                double position[] = new double[2];
                double velocity[] = new double[2];
                FORI (i, n)
                {
                    //int pointSize = 2*i + 1; // 1, 3, 5, ...
                    //int pointSize = 2*(n-1-i) + 1; // ..., 5, 3, 1
                    //int pointSize = 2*(n-1-i) + 2; // ..., 6, 4, 2
                    int pointSize = 2*i + 2; // 2, 4, 6, ...
                    model.points[i].get(position);
                    model.points[i].getVelocity(velocity);
                    mg.setColor(model.colors[i]);
                    mg.drawHollowPoint(position[0],
                                       position[1],
                                       pointSize);
                }

                //
                // If anything's still moving, make paint get called again
                //
                FORI (i, n)
                {
                    if (model.points[i].isMoving())
                    {
                        repaint();
                        break;
                    }
                }




                if (g != frontBufferGraphics)
                    frontBufferGraphics.drawImage(backBuffer, 0, 0, this);
                mostRecentGraphics = mg;

                if (eventVerbose >= 2) System.out.println("    out paint");
            } // paint
            {
                addKeyListener(new java.awt.event.KeyAdapter() {
                    public void keyPressed(java.awt.event.KeyEvent e)
                    {
                        boolean controlIsDown = ((e.getModifiers() & java.awt.event.InputEvent.CTRL_MASK) != 0);
                        char c = e.getKeyChar();
                        if (eventVerbose >= 1) System.out.println("    in keyPressed, keyEvent = "+e+" keyChar = (char)"+(int)c+"");
                        if (c == java.awt.event.KeyEvent.CHAR_UNDEFINED)
                        {
                            // This is the case for control keys
                        }
                        else if (c == java.awt.event.KeyEvent.VK_ESCAPE)
                        {
                            System.out.println("ciao!");
                            System.exit(0); // asinine way of doing things
                        }
                        else if (c == 'a' || c == 'A')
                        {
                            view.showAccelerations ^= true;
                            repaint();
                        }
                        else if (c == 'v' || c == 'V')
                        {
                            view.showVelocities ^= true;
                            repaint();
                        }
                        else if (c == 'b')
                        {
                            model.bounce += .05;
                            PRINT(model.bounce);
                            repaint();
                        }
                        else if (c == 'B')
                        {
                            model.bounce -= .05;
                            PRINT(model.bounce);
                            repaint();
                        }
                        else if (c == ' ')
                        {
                            repaint();
                        }
                        #define CTRL(lowerCaseLetter) ((lowerCaseLetter)-'a'+1)
                        else
                        {
                            System.out.println("Huh?");
                        }
                    }
                });
                addMouseListener(new java.awt.event.MouseListener() {
                    public void mouseClicked(java.awt.event.MouseEvent e)
                    {
                        if (eventVerbose >= 1) System.out.println("    in mouseClicked at "+e.getX()+","+e.getY()+"");
                        if (eventVerbose >= 1) System.out.println("    out mouseClicked");
                    }
                    public void mousePressed(java.awt.event.MouseEvent e)
                    {
                        if (eventVerbose >= 1) System.out.println("    in mousePressed at "+e.getX()+","+e.getY()+"");
                        // XXX dup code
                        if (mostRecentGraphics != null)
                        {
                            double thisPoint[] = new double[2];
                            mostRecentGraphics.pick(e.getX(), e.getY(), thisPoint);

                            FORI (i, model.points.length)
                                model.points[i].set(thisPoint);

                            repaint();
                        }
                        if (eventVerbose >= 1) System.out.println("    out mousePressed");
                    }
                    public void mouseReleased(java.awt.event.MouseEvent e)
                    {
                        if (eventVerbose >= 1) System.out.println("    in mouseReleased at "+e.getX()+","+e.getY()+"");

                        if (eventVerbose >= 1) System.out.println("    out mouseReleased");
                    }
                    public void mouseEntered(java.awt.event.MouseEvent e)
                    {
                        if (eventVerbose >= 1) System.out.println("    in mouseEntered at "+e.getX()+","+e.getY()+"");
                        if (eventVerbose >= 1) System.out.println("    out mouseEntered");
                    }
                    public void mouseExited(java.awt.event.MouseEvent e)
                    {
                        if (eventVerbose >= 1) System.out.println("    in mouseExited at "+e.getX()+","+e.getY()+"");
                        if (eventVerbose >= 1) System.out.println("    out mouseExited");
                    }
                });
                addMouseMotionListener(new java.awt.event.MouseMotionListener() {
                    public void mouseMoved(java.awt.event.MouseEvent e)
                    {
                        if (eventVerbose >= 3) System.out.println("    in mouseMoved to "+e.getX()+","+e.getY()+"");
                        if (eventVerbose >= 3) System.out.println("    out mouseMoved");
                    }
                    public void mouseDragged(java.awt.event.MouseEvent e)
                    {
                        if (eventVerbose >= 1) System.out.println("    in mouseDragged to "+e.getX()+","+e.getY()+"");
                        // XXX dup code
                        if (mostRecentGraphics != null)
                        {
                            double thisPoint[] = new double[2];
                            mostRecentGraphics.pick(e.getX(), e.getY(), thisPoint);

                            FORI (i, model.points.length)
                                model.points[i].set(thisPoint);
                            repaint();
                        }
                        if (eventVerbose >= 1) System.out.println("    out mouseDragged");
                    }
                });
            }
        }; // canvas
        canvas.requestFocus(); // seems to be needed initially XXX see whether this is true

        final java.awt.Frame frame = new java.awt.Frame("Optimal (I think) Trajectories");
        frame.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent we)
            {
                frame.dispose();
                System.out.println("ciao!");
                System.exit(0); // asinine way of doing things
            }
        });
        frame.setForeground(java.awt.Color.white);
        frame.setBackground(java.awt.Color.black);
        frame.add(canvas);
        frame.pack();
        frame.show();
    } // interactiveDemo3



    /** Test program. */
    public static void main(String args[])
    {
        System.out.println("in main");

        if (args.length == 1 && args[0].equals("demo1"))
            interactiveDemo1();
        else if (args.length == 1 && args[0].equals("demo2"))
            interactiveDemo2();
        else if (args.length == 1 && args[0].equals("demo3"))
            interactiveDemo3();
        else if (args.length == 1 && args[0].equals("confidenceTests"))
            confidenceTests();
        else if (args.length == 1 && args[0].equals("NewtonSolver"))
            NewtonSolver.main(new String[]{});
        else
        {
            System.err.println("Usage: SmoothlyVaryingViewingParameter [demo1|demo2|demo3|confidenceTests|NewtonSolver]\n");
            System.exit(1);
        }

        System.out.println("out main");
    } // main

} // SmoothlyVaryingViewingParameter



/*
Trying to figure it out for multiple dimensions... it's not separable.
I'm not sure whether the answer is still two quadratics or not,
but let's assume it is, and try solving.
For starters, so it's easy to think about, we will let
the start (not the end) have position and velocity 0.
Given:
        0,0 = position at time t=0
        0,0 = velocity at time t=0
        p1 = px1,py1 = position at time t=t1
        v1 = vx1,vy1 = velocity at time t=t1
Find t0,t1,ax0,ay0,ax1,ay1 such that:
        0 <= t0 <= t1
        a0 = ax0,ay0 = acceleration during first leg [0..t0]
        a1 = ax1,ay1 = acceleration during second leg [t0..t1]
        and a0,a1 are unit length.
i.e. such that:
        v1 == a0*t0 + a1*(t1-t0)
        p1 == .5*a0*t0^2 + a0*t0*(t1-t0) + .5*a1*(t1-t0)^2
        ||a0|| == 1
        ||a1|| == 1
Expanding out the vectors in 2 dimensions using:
        p1 = px1,py1
        v1 = vx1,vy1
        a0 = ax0,ay0
        a1 = ax1,ay1
This means we are trying to solve the following 6 equations
for the 6 variables ax0,ay0,ax1,ay1,t0,t1:
        vx1 == ax0*t0 + ax1*(t1-t0)
        vy1 == ay0*t0 + ay1*(t1-t0)
        px1 == .5*ax0*t0^2 + ax0*t0*(t1-t0) + .5*ax1*(t1-t0)^2
        py1 == .5*ay0*t0^2 + ay0*t0*(t1-t0) + .5*ay1*(t1-t0)^2
        ax0^2 + ay0^2 == 1
        ax1^2 + ay1^2 == 1
So give the following to mathematica:
        Solve[{
            vx1 == ax0*t0 + ax1*(t1-t0),
            vy1 == ay0*t0 + ay1*(t1-t0),
            px1 == .5*ax0*t0^2 + ax0*t0*(t1-t0) + .5*ax1*(t1-t0)^2,
            py1 == .5*ay0*t0^2 + ay0*t0*(t1-t0) + .5*ay1*(t1-t0)^2,
            ax0^2 + ay0^2 == 1,
            ax1^2 + ay1^2 == 1
            }, {ax0,ay0,ax1,ay1,t0,t1}]
Well, mathematica is taking a LONG time on that one.

Well let's try rephrasing it...
This time we'll let the end position and velocity be 0,0.
Given:
        p0 = start position
        v0 = start velocity
Find a,t such that ||a||=1 and such that
intermediate position p = p0 + v0*t + .5*a*t^2  and
intermediate velocity v = v0 + a*t
line up with the origin so that it can be smoothly landed by a parabola
with acceleration 1.
In other words, p,v should satisfy
        p = -.5*v*|v|
i.e.    px,py = -.5*(vx,vy)*Sqrt[vx^2+vy^2]
So we are trying to solve the following 3 equations
for the 3 variables ax,ay,t:
        ax^2+ay^2 == 1
        px0 + vx0*t + .5*ax*t^2 == -.5*(v0x+ax*t)*Sqrt[(v0x+ax*t)^2+(v0y+ay*t)^2]
        py0 + vy0*t + .5*ay*t^2 == -.5*(v0y+ay*t)*Sqrt[(v0x+ax*t)^2+(v0y+ay*t)^2]
So give the following to mathematica:
        Solve[{
            ax^2+ay^2 == 1,
            px0 + vx0*t + .5*ax*t^2 == -.5*(v0x+ax*t)*Sqrt[(v0x+ax*t)^2+(v0y+ay*t)^2],
            py0 + vy0*t + .5*ay*t^2 == -.5*(v0y+ay*t)*Sqrt[(v0x+ax*t)^2+(v0y+ay*t)^2]
            }, {ax,ay,t}]
Bleah, it's taking a long time on that one too,
and eventually ate up all the memory on my machine.

Okay let's try lining up both...
Lining up with the initial p0,v0 means
there is some time t and unit a such that
        v = v0 + a*t
        p = p0 + v0*t + .5*a*t^2
So from the first equation, t = ||v-v0||
and a = (v-v0)/||v-v0||.
Plugging those into the second equation, we get:
        p = p0 + v0*||v-v0|| + .5*(v-v0)/||v-v0||*||v-v0||^2
          = p0 + v0*||v-v0|| + .5*(v-v0)*||v-v0||
          = p0 + .5*(v+v0)*||v-v0||
Matching up this formula for p with the other formula for p,
we get a single vector equation that we want to solve for v:
    -.5*v*||v|| = p0 + .5*(v+v0)*||v-v0||
i.e. two scalar equations that we want to solve for vx,vy:
    -.5*vx*Sqrt[vx^2+vy^2] == px0 + .5*(vx+vx0)*Sqrt[(vx-vx0)^2+(vy-vy0)^2]
    -.5*vy*Sqrt[vx^2+vy^2] == py0 + .5*(vy+vy0)*Sqrt[(vx-vx0)^2+(vy-vy0)^2]
Not sure if we will get better results by squaring both sides, but if we do,
it will be:
    .25*vx^2*(vx^2+vy^2) == (px0 + .5*(vx+vx0)*Sqrt[(vx-vx0)^2+(vy-vy0)^2])^2
    .25*vy^2*(vx^2+vy^2) == (py0 + .5*(vy+vy0)*Sqrt[(vx-vx0)^2+(vy-vy0)^2])^2

So give mathematica either of the following:
    Solve[{-1/2*vx*Sqrt[vx^2+vy^2] == px0 + 1/2*(vx+vx0)*Sqrt[(vx-vx0)^2+(vy-vy0)^2],
           -1/2*vy*Sqrt[vx^2+vy^2] == py0 + 1/2*(vy+vy0)*Sqrt[(vx-vx0)^2+(vy-vy0)^2]},
          {vx,vy}]
    Solve[{1/4*vx^2*(vx^2+vy^2) == (px0 + 1/2*(vx+vx0)*Sqrt[(vx-vx0)^2+(vy-vy0)^2])^2,
           1/4*vy^2*(vx^2+vy^2) == (py0 + 1/2*(vy+vy0)*Sqrt[(vx-vx0)^2+(vy-vy0)^2])^2},
          {vx,vy}]
Same thing, it's eating up all my memory.
Dangit, mathematica seems to be useless for this problem.

Subject: optimal trajectory for smooth landing

I'll rephrase it as "smooth starting" instead of "smooth landing"
because it's an equivalent problem but easier to think about
for what I'm going to say...

Given: initial position 0, initial velocity 0,
final position p1, final velocity v1, and constant acceleration magnitude 1,
in 1 dimension, we know that there is a unique 2-piece quadratic trajectory
that satisfies these constraints.

I said before that this can't be true in >= 2 dimensions
because the number of degrees of freedom is wrong... but now I think
I was mistaken.
In n dimensions, the number of degrees of freedom in the inputs p1,v1 is 2*n.
The two quadratic output trajectories can be parametrized by:
    acceleration during the first part (n-1 degrees of freedom)
    duration of the first part (1 degree of freedom)
    acceleration during the second part (n-1 degrees of freedom)
    duration of the second part (1 degree of freedom)
So the total number of degrees of freedom in the output is 2*n as well.

So, it *might* be true that the general optimal trajectory
between any starting and ending position&velocity, in any number of dimensions,
will always be a 2-piece quadratic spline.

However, finding the two quadratic trajectories, given p1 and v1,
in 2 dimensions, seems to be surprisingly difficult.
I tried to ask mathematica, phrasing it in various different ways,
but it took forever and ate up all my memory every time.

Don

*/




